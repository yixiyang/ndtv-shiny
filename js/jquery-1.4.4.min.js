



<!DOCTYPE html>
<html lang="en" class="   ">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Language" content="en">
    
    
    <title>ndtv-shiny/jquery-1.4.4.min.js at master Â· Statnet-Summer-Project/ndtv-shiny</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png">
    <meta property="fb:app_id" content="1401488693436528">

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="Statnet-Summer-Project/ndtv-shiny" name="twitter:title" /><meta content="ndtv-shiny - R-Shiny interface for ndtv package" name="twitter:description" /><meta content="https://avatars0.githubusercontent.com/u/7905129?v=2&amp;s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars0.githubusercontent.com/u/7905129?v=2&amp;s=400" property="og:image" /><meta content="Statnet-Summer-Project/ndtv-shiny" property="og:title" /><meta content="https://github.com/Statnet-Summer-Project/ndtv-shiny" property="og:url" /><meta content="ndtv-shiny - R-Shiny interface for ndtv package" property="og:description" />

    <link rel="assets" href="https://assets-cdn.github.com/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035">
    <link rel="xhr-socket" href="/_sockets">

    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="selected-link" value="repo_source" data-pjax-transient>
      <meta name="google-analytics" content="UA-3769691-2">

    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="DDC9191A:6A42:113DD35F:53EFC3F2" name="octolytics-dimension-request_id" /><meta content="7905851" name="octolytics-actor-id" /><meta content="yixiyang" name="octolytics-actor-login" /><meta content="2f2f24424a4c3cbf2da856a61a4b59db21ad512589660290579d32e182548afd" name="octolytics-actor-hash" />
    

    
    
    <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">


    <meta content="authenticity_token" name="csrf-param" />
<meta content="3xNGSTh6id5dwE0jRmHCal+1Vt/Zm6k4Fd62/VAtR6w+tqpfJen/yRbYgMYeWX9nuLzSegqV76TOShxi2wEHMA==" name="csrf-token" />

    <link href="https://assets-cdn.github.com/assets/github-5efa7b0b8a55ddcee56e5aee3fa56109d1d2781c.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://assets-cdn.github.com/assets/github2-97fd69f3a3771e25d14b434fa06478cc54fb9bf3.css" media="all" rel="stylesheet" type="text/css" />
    


    <meta http-equiv="x-pjax-version" content="e4bf1707290e71c8a039593ba9decab6">

      
  <meta name="description" content="ndtv-shiny - R-Shiny interface for ndtv package">


  <meta content="7905129" name="octolytics-dimension-user_id" /><meta content="Statnet-Summer-Project" name="octolytics-dimension-user_login" /><meta content="20894596" name="octolytics-dimension-repository_id" /><meta content="Statnet-Summer-Project/ndtv-shiny" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="20894596" name="octolytics-dimension-repository_network_root_id" /><meta content="Statnet-Summer-Project/ndtv-shiny" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/Statnet-Summer-Project/ndtv-shiny/commits/master.atom" rel="alternate" title="Recent Commits to ndtv-shiny:master" type="application/atom+xml">

  </head>


  <body class="logged_in  env-production macintosh vis-public page-blob">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


      <div class="header header-logged-in true">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/" aria-label="Homepage">
  <span class="mega-octicon octicon-mark-github"></span>
</a>


        <a href="/notifications" aria-label="You have unread notifications" class="notification-indicator tooltipped tooltipped-s" data-hotkey="g n">
        <span class="mail-status unread"></span>
</a>

      <div class="command-bar js-command-bar  in-repository">
          <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>

<div class="commandbar">
  <span class="message"></span>
  <input type="text" data-hotkey="s, /" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
    data-username="yixiyang"
    data-repo="Statnet-Summer-Project/ndtv-shiny"
  >
  <div class="display hidden"></div>
</div>

    <input type="hidden" name="nwo" value="Statnet-Summer-Project/ndtv-shiny">

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target" role="button" aria-haspopup="true">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container" aria-hidden="true">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item js-this-repository-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked">
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item js-all-repositories-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global">
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="help tooltipped tooltipped-s" aria-label="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
        <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
            <li><a href="https://gist.github.com">Gist</a></li>
            <li><a href="/blog">Blog</a></li>
          <li><a href="https://help.github.com">Help</a></li>
        </ul>
      </div>

    
<ul id="user-links">
  <li>
    <a href="/yixiyang" class="name">
      <img alt="yixiyang" data-user="7905851" height="20" src="https://avatars1.githubusercontent.com/u/7905851?v=2&amp;s=40" width="20" /> yixiyang
    </a>
  </li>

  <li class="new-menu dropdown-toggle js-menu-container">
    <a href="#" class="js-menu-target tooltipped tooltipped-s" aria-label="Create new...">
      <span class="octicon octicon-plus"></span>
      <span class="dropdown-arrow"></span>
    </a>

    <div class="new-menu-content js-menu-content">
    </div>
  </li>

  <li>
    <a href="/settings/profile" id="account_settings"
      class="tooltipped tooltipped-s"
      aria-label="Account settings ">
      <span class="octicon octicon-tools"></span>
    </a>
  </li>
  <li>
    <form accept-charset="UTF-8" action="/logout" class="logout-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="sEJ63jp0O7QsfSEnQQaJJKAV/Q7lNAHA5UnhVlaiLT2qbXZixiD6dMxvvgm0GkqqCO8qNOuh+iE/U1WK2+I30g==" /></div>
      <button class="sign-out-button tooltipped tooltipped-s" aria-label="Sign out">
        <span class="octicon octicon-sign-out"></span>
      </button>
</form>  </li>

</ul>

<div class="js-new-dropdown-contents hidden">
  
<ul class="dropdown-menu">
  <li>
    <a href="/new"><span class="octicon octicon-repo"></span> New repository</a>
  </li>
  <li>
    <a href="/organizations/new"><span class="octicon octicon-organization"></span> New organization</a>
  </li>
    <li class="section-title">
      <span title="Statnet-Summer-Project">This organization</span>
    </li>

    <li>
      <a href="/orgs/Statnet-Summer-Project/people/new"><span class="octicon octicon-person"></span> New member</a>
    </li>

    <li>
      <a href="/orgs/Statnet-Summer-Project/new-team"><span class="octicon octicon-jersey"></span> New team</a>
    </li>

    <li>
      <a href="/organizations/Statnet-Summer-Project/repositories/new"><span class="octicon octicon-repo"></span> New repository</a>
    </li>


    <li class="section-title">
      <span title="Statnet-Summer-Project/ndtv-shiny">This repository</span>
    </li>
      <li>
        <a href="/Statnet-Summer-Project/ndtv-shiny/issues/new"><span class="octicon octicon-issue-opened"></span> New issue</a>
      </li>
      <li>
        <a href="/Statnet-Summer-Project/ndtv-shiny/settings/collaboration"><span class="octicon octicon-person"></span> New collaborator</a>
      </li>
</ul>

</div>


    
  </div>
</div>

      

        


      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    <div id="js-flash-container">
      
    </div>
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        
<ul class="pagehead-actions">

    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="wI9IDXcCEMNDHH7vumS/irUMFQGmKE0d6Jvw+DAuFt+wiNQ4HpGDRrOmqDFrB3brIMuAas6Aa97Q0NXK6hRu9Q==" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="20894596" />

    <div class="select-menu js-menu-container js-select-menu">
      <a class="social-count js-social-count" href="/Statnet-Summer-Project/ndtv-shiny/watchers">
        5
      </a>
      <a href="/Statnet-Summer-Project/ndtv-shiny/subscription"
        class="minibutton select-menu-button with-count js-menu-target" role="button" tabindex="0" aria-haspopup="true">
        <span class="js-select-button">
          <span class="octicon octicon-eye"></span>
          Unwatch
        </span>
      </a>

      <div class="select-menu-modal-holder">
        <div class="select-menu-modal subscription-menu-modal js-menu-content" aria-hidden="true">
          <div class="select-menu-header">
            <span class="select-menu-title">Notifications</span>
            <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container" role="menu">

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">Be notified when participating or @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">Be notified of all conversations.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">Never be notified.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

  <li>
    
  <div class="js-toggler-container js-social-container starring-container ">

    <form accept-charset="UTF-8" action="/Statnet-Summer-Project/ndtv-shiny/unstar" class="js-toggler-form starred js-unstar-button" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="UNNrY+1fUldIRBIa6PelytGIufyjtk6bhLONkNVlG0PCMhmwCL1Fpu/LDkoLPzlifsnfIslkpnN2uV9GVxOpdQ==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button"
        aria-label="Unstar this repository" title="Unstar Statnet-Summer-Project/ndtv-shiny">
        <span class="octicon octicon-star"></span>
        Unstar
      </button>
        <a class="social-count js-social-count" href="/Statnet-Summer-Project/ndtv-shiny/stargazers">
          0
        </a>
</form>
    <form accept-charset="UTF-8" action="/Statnet-Summer-Project/ndtv-shiny/star" class="js-toggler-form unstarred js-star-button" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="0hc17BXReEteAOsNQEwzHdH8d7ItoxtQVNegdg123srm0mHt1zqhscpicCRkKF4FM95WMd3TfBcWrjLF2gYYTw==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button"
        aria-label="Star this repository" title="Star Statnet-Summer-Project/ndtv-shiny">
        <span class="octicon octicon-star"></span>
        Star
      </button>
        <a class="social-count js-social-count" href="/Statnet-Summer-Project/ndtv-shiny/stargazers">
          0
        </a>
</form>  </div>

  </li>


        <li>
          <a href="/Statnet-Summer-Project/ndtv-shiny/fork" class="minibutton with-count js-toggler-target fork-button lighter tooltipped-n" title="Fork your own copy of Statnet-Summer-Project/ndtv-shiny to your account" aria-label="Fork your own copy of Statnet-Summer-Project/ndtv-shiny to your account" rel="facebox nofollow">
            <span class="octicon octicon-repo-forked"></span>
            Fork
          </a>
          <a href="/Statnet-Summer-Project/ndtv-shiny/network" class="social-count">4</a>
        </li>

</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="mega-octicon octicon-repo"></span>
          <span class="author"><a href="/Statnet-Summer-Project" class="url fn" itemprop="url" rel="author"><span itemprop="title">Statnet-Summer-Project</span></a></span><!--
       --><span class="path-divider">/</span><!--
       --><strong><a href="/Statnet-Summer-Project/ndtv-shiny" class="js-current-repository js-repo-home-link">ndtv-shiny</a></strong>

          <span class="page-context-loader">
            <img alt="" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            
<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders" data-issue-count-url="/Statnet-Summer-Project/ndtv-shiny/issues/counts">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped tooltipped-w" aria-label="Code">
        <a href="/Statnet-Summer-Project/ndtv-shiny" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-hotkey="g c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /Statnet-Summer-Project/ndtv-shiny">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped tooltipped-w" aria-label="Issues">
          <a href="/Statnet-Summer-Project/ndtv-shiny/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /Statnet-Summer-Project/ndtv-shiny/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class="js-issue-replace-counter"></span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
        <a href="/Statnet-Summer-Project/ndtv-shiny/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g p" data-selected-links="repo_pulls /Statnet-Summer-Project/ndtv-shiny/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class="js-pull-replace-counter"></span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


        <li class="tooltipped tooltipped-w" aria-label="Wiki">
          <a href="/Statnet-Summer-Project/ndtv-shiny/wiki" aria-label="Wiki" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g w" data-selected-links="repo_wiki /Statnet-Summer-Project/ndtv-shiny/wiki">
            <span class="octicon octicon-book"></span> <span class="full-word">Wiki</span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>
    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped tooltipped-w" aria-label="Pulse">
        <a href="/Statnet-Summer-Project/ndtv-shiny/pulse/weekly" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /Statnet-Summer-Project/ndtv-shiny/pulse/weekly">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Graphs">
        <a href="/Statnet-Summer-Project/ndtv-shiny/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /Statnet-Summer-Project/ndtv-shiny/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


      <div class="sunken-menu-separator"></div>
      <ul class="sunken-menu-group">
        <li class="tooltipped tooltipped-w" aria-label="Settings">
          <a href="/Statnet-Summer-Project/ndtv-shiny/settings" aria-label="Settings" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_settings /Statnet-Summer-Project/ndtv-shiny/settings">
            <span class="octicon octicon-tools"></span> <span class="full-word">Settings</span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>
      </ul>
  </div>
</div>

              <div class="only-with-full-nav">
                
  
<div class="clone-url "
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=push">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="input-group">
    <input type="text" class="input-mini input-monospace js-url-field"
           value="https://github.com/Statnet-Summer-Project/ndtv-shiny.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/Statnet-Summer-Project/ndtv-shiny.git" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="clone-url open"
  data-protocol-type="ssh"
  data-url="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=push">
  <h3><strong>SSH</strong> clone URL</h3>
  <div class="input-group">
    <input type="text" class="input-mini input-monospace js-url-field"
           value="git@github.com:Statnet-Summer-Project/ndtv-shiny.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="git@github.com:Statnet-Summer-Project/ndtv-shiny.git" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=push">
  <h3><strong>Subversion</strong> checkout URL</h3>
  <div class="input-group">
    <input type="text" class="input-mini input-monospace js-url-field"
           value="https://github.com/Statnet-Summer-Project/ndtv-shiny" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/Statnet-Summer-Project/ndtv-shiny" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>,
      <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>,
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <a href="https://help.github.com/articles/which-remote-url-should-i-use" class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <span class="octicon octicon-question"></span>
  </a>
</p>

  <a href="http://mac.github.com" data-url="github-mac://openRepo/https://github.com/Statnet-Summer-Project/ndtv-shiny" class="minibutton sidebar-button js-conduit-rewrite-url" title="Save Statnet-Summer-Project/ndtv-shiny to your computer and use it in GitHub Desktop." aria-label="Save Statnet-Summer-Project/ndtv-shiny to your computer and use it in GitHub Desktop.">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>


                <a href="/Statnet-Summer-Project/ndtv-shiny/archive/master.zip"
                   class="minibutton sidebar-button"
                   aria-label="Download Statnet-Summer-Project/ndtv-shiny as a zip file"
                   title="Download Statnet-Summer-Project/ndtv-shiny as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          

<a href="/Statnet-Summer-Project/ndtv-shiny/blob/4935c58615e83bb48e48648ede491ca8b0822048/js/jquery-1.4.4.min.js" class="hidden js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:644f7a63c39a6f132b25afac6c77655e -->

<div class="file-navigation">
  
<div class="select-menu js-menu-container js-select-menu left">
  <span class="minibutton select-menu-button js-menu-target css-truncate" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    title="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button css-truncate-target">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Find or create a branchâ¦" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Find or create a branchâ¦">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/Statnet-Summer-Project/ndtv-shiny/blob/master/js/jquery-1.4.4.min.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/Statnet-Summer-Project/ndtv-shiny/blob/tongfang/js/jquery-1.4.4.min.js"
                 data-name="tongfang"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="tongfang">tongfang</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/Statnet-Summer-Project/ndtv-shiny/blob/yixi/js/jquery-1.4.4.min.js"
                 data-name="yixi"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="yixi">yixi</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <form accept-charset="UTF-8" action="/Statnet-Summer-Project/ndtv-shiny/branches" class="js-create-branch select-menu-item select-menu-new-item-form js-navigation-item js-new-item-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="lT8GxlTGnSBp2afxG1NO+U7/FW6Y+TgscS3RsGsyu1jfbe0JMyef5cCb295aVvgEKUgNvEFDKKTVVzlW+WsArw==" /></div>
            <span class="octicon octicon-git-branch select-menu-item-icon"></span>
            <div class="select-menu-item-text">
              <h4>Create branch: <span class="js-new-item-name"></span></h4>
              <span class="description">from âmasterâ</span>
            </div>
            <input type="hidden" name="name" id="name" class="js-new-item-value">
            <input type="hidden" name="branch" id="branch" value="master">
            <input type="hidden" name="path" id="path" value="js/jquery-1.4.4.min.js">
          </form> <!-- /.select-menu-item -->

      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="button-group right">
    <a href="/Statnet-Summer-Project/ndtv-shiny/find/master"
          class="js-show-file-finder minibutton empty-icon tooltipped tooltipped-s"
          data-pjax
          data-hotkey="t"
          aria-label="Quickly jump between files">
      <span class="octicon octicon-list-unordered"></span>
    </a>
    <button class="js-zeroclipboard minibutton zeroclipboard-button"
          data-clipboard-text="js/jquery-1.4.4.min.js"
          aria-label="Copy to clipboard"
          data-copied-hint="Copied!">
      <span class="octicon octicon-clippy"></span>
    </button>
  </div>

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/Statnet-Summer-Project/ndtv-shiny" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">ndtv-shiny</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/Statnet-Summer-Project/ndtv-shiny/tree/master/js" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">js</span></a></span><span class="separator"> / </span><strong class="final-path">jquery-1.4.4.min.js</strong>
  </div>
</div>


  <div class="commit commit-loader file-history-tease js-deferred-content" data-url="/Statnet-Summer-Project/ndtv-shiny/contributors/master/js/jquery-1.4.4.min.js">
    Fetching contributorsâ¦

    <div class="participation">
      <p class="loader-loading"><img alt="" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32-EAF2F5.gif" width="16" /></p>
      <p class="loader-error">Cannot retrieve contributors at this time</p>
    </div>
  </div>

<div class="file-box">
  <div class="file">
    <div class="meta clearfix">
      <div class="info file-name">
          <span>168 lines (167 sloc)</span>
          <span class="meta-divider"></span>
        <span>78.601 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
          <a href="/Statnet-Summer-Project/ndtv-shiny/raw/master/js/jquery-1.4.4.min.js" class="minibutton " id="raw-url">Raw</a>
            <a href="/Statnet-Summer-Project/ndtv-shiny/blame/master/js/jquery-1.4.4.min.js" class="minibutton js-update-url-with-hash">Blame</a>
          <a href="/Statnet-Summer-Project/ndtv-shiny/commits/master/js/jquery-1.4.4.min.js" class="minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->

          <a class="octicon-button tooltipped tooltipped-nw js-conduit-openfile-check"
             href="http://mac.github.com"
             data-url="github-mac://openRepo/https://github.com/Statnet-Summer-Project/ndtv-shiny?branch=master&amp;filepath=js%2Fjquery-1.4.4.min.js"
             aria-label="Open this file in GitHub for Mac"
             data-failed-title="Your version of GitHub for Mac is too old to open this file. Try checking for updates.">
              <span class="octicon octicon-device-desktop"></span>
          </a>

              <a class="octicon-button js-update-url-with-hash"
                 href="/Statnet-Summer-Project/ndtv-shiny/edit/master/js/jquery-1.4.4.min.js"
                 data-method="post" rel="nofollow" data-hotkey="e"><span class="octicon octicon-pencil"></span></a>

            <a class="octicon-button danger"
               href="/Statnet-Summer-Project/ndtv-shiny/delete/master/js/jquery-1.4.4.min.js"
               data-method="post" data-test-id="delete-blob-file" rel="nofollow">
          <span class="octicon octicon-trashcan"></span>
        </a>
      </div><!-- /.actions -->
    </div>
      
  <div class="blob-wrapper data type-javascript">
      <table class="highlight tab-size-8 js-file-line-container">
      <tr>
        <td id="L1" class="blob-line-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-line-code js-file-line"><span class="cm">/*!</span></td>
      </tr>
      <tr>
        <td id="L2" class="blob-line-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-line-code js-file-line"><span class="cm"> * jQuery JavaScript Library v1.4.4</span></td>
      </tr>
      <tr>
        <td id="L3" class="blob-line-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-line-code js-file-line"><span class="cm"> * http://jquery.com/</span></td>
      </tr>
      <tr>
        <td id="L4" class="blob-line-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-line-code js-file-line"><span class="cm"> *</span></td>
      </tr>
      <tr>
        <td id="L5" class="blob-line-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-line-code js-file-line"><span class="cm"> * Copyright 2010, John Resig</span></td>
      </tr>
      <tr>
        <td id="L6" class="blob-line-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-line-code js-file-line"><span class="cm"> * Dual licensed under the MIT or GPL Version 2 licenses.</span></td>
      </tr>
      <tr>
        <td id="L7" class="blob-line-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-line-code js-file-line"><span class="cm"> * http://jquery.org/license</span></td>
      </tr>
      <tr>
        <td id="L8" class="blob-line-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-line-code js-file-line"><span class="cm"> *</span></td>
      </tr>
      <tr>
        <td id="L9" class="blob-line-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-line-code js-file-line"><span class="cm"> * Includes Sizzle.js</span></td>
      </tr>
      <tr>
        <td id="L10" class="blob-line-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-line-code js-file-line"><span class="cm"> * http://sizzlejs.com/</span></td>
      </tr>
      <tr>
        <td id="L11" class="blob-line-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-line-code js-file-line"><span class="cm"> * Copyright 2010, The Dojo Foundation</span></td>
      </tr>
      <tr>
        <td id="L12" class="blob-line-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-line-code js-file-line"><span class="cm"> * Released under the MIT, BSD, and GPL Licenses.</span></td>
      </tr>
      <tr>
        <td id="L13" class="blob-line-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-line-code js-file-line"><span class="cm"> *</span></td>
      </tr>
      <tr>
        <td id="L14" class="blob-line-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-line-code js-file-line"><span class="cm"> * Date: Thu Nov 11 19:04:53 2010 -0500</span></td>
      </tr>
      <tr>
        <td id="L15" class="blob-line-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-line-code js-file-line"><span class="cm"> */</span></td>
      </tr>
      <tr>
        <td id="L16" class="blob-line-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-line-code js-file-line"><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">B</span><span class="p">){</span><span class="kd">function</span> <span class="nx">ka</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">===</span><span class="nx">B</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;data-&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">d</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;true&quot;</span><span class="o">?</span><span class="kc">true</span><span class="o">:</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;false&quot;</span><span class="o">?</span><span class="kc">false</span><span class="o">:</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;null&quot;</span><span class="o">?</span><span class="kc">null</span><span class="o">:!</span><span class="nx">c</span><span class="p">.</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">?</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">Ja</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">parseJSON</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){}</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">)}</span><span class="k">else</span> <span class="nx">d</span><span class="o">=</span><span class="nx">B</span><span class="p">}</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="kd">function</span> <span class="nx">U</span><span class="p">(){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="kd">function</span> <span class="nx">ca</span><span class="p">(){</span><span class="k">return</span> <span class="kc">true</span><span class="p">}</span><span class="kd">function</span> <span class="nx">la</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">type</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">handle</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">Ka</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">x</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">C</span><span class="o">=</span><span class="p">[];</span><span class="nx">f</span><span class="o">=</span><span class="p">[];</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">?</span><span class="s2">&quot;events&quot;</span><span class="o">:</span><span class="s2">&quot;__events__&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">h</span><span class="o">===</span><span class="s2">&quot;function&quot;</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L17" class="blob-line-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-line-code js-file-line"><span class="nx">h</span><span class="p">.</span><span class="nx">events</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">liveFired</span><span class="o">===</span><span class="k">this</span><span class="o">||!</span><span class="nx">h</span><span class="o">||!</span><span class="nx">h</span><span class="p">.</span><span class="nx">live</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">button</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">===</span><span class="s2">&quot;click&quot;</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">namespace</span><span class="p">)</span><span class="nx">A</span><span class="o">=</span><span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;(^|\\.)&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">namespace</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;\\.(?:.*\\.)?&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;(\\.|$)&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">liveFired</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">live</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">J</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="nx">J</span><span class="p">[</span><span class="nx">k</span><span class="p">];</span><span class="nx">h</span><span class="p">.</span><span class="nx">origType</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">X</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">selector</span><span class="p">)</span><span class="o">:</span><span class="nx">J</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">k</span><span class="o">--</span><span class="p">,</span><span class="mi">1</span><span class="p">)}</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">).</span><span class="nx">closest</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentTarget</span><span class="p">);</span><span class="nx">o</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">x</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">o</span><span class="o">&lt;</span><span class="nx">x</span><span class="p">;</span><span class="nx">o</span><span class="o">++</span><span class="p">){</span><span class="nx">r</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">o</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">J</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="nx">J</span><span class="p">[</span><span class="nx">k</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">selector</span><span class="o">===</span><span class="nx">h</span><span class="p">.</span><span class="nx">selector</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">A</span><span class="o">||</span><span class="nx">A</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">namespace</span><span class="p">))){</span><span class="nx">l</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">elem</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">preType</span><span class="o">===</span><span class="s2">&quot;mouseenter&quot;</span><span class="o">||</span></td>
      </tr>
      <tr>
        <td id="L18" class="blob-line-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-line-code js-file-line"><span class="nx">h</span><span class="p">.</span><span class="nx">preType</span><span class="o">===</span><span class="s2">&quot;mouseleave&quot;</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">preType</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="p">).</span><span class="nx">closest</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">selector</span><span class="p">)[</span><span class="mi">0</span><span class="p">]}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="o">||</span><span class="nx">e</span><span class="o">!==</span><span class="nx">l</span><span class="p">)</span><span class="nx">C</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">elem</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">handleObj</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">level</span><span class="o">:</span><span class="nx">r</span><span class="p">.</span><span class="nx">level</span><span class="p">})}}}</span><span class="nx">o</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">x</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">o</span><span class="o">&lt;</span><span class="nx">x</span><span class="p">;</span><span class="nx">o</span><span class="o">++</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">C</span><span class="p">[</span><span class="nx">o</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">level</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">)</span><span class="k">break</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentTarget</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">elem</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">handleObj</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">handleObj</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">handleObj</span><span class="p">;</span><span class="nx">A</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">handleObj</span><span class="p">.</span><span class="nx">origHandler</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">elem</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="o">===</span><span class="kc">false</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">isPropagationStopped</span><span class="p">()){</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">level</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="o">===</span><span class="kc">false</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">isImmediatePropagationStopped</span><span class="p">())</span><span class="k">break</span><span class="p">}}</span><span class="k">return</span> <span class="nx">b</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">Y</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">!==</span><span class="s2">&quot;*&quot;</span><span class="o">?</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">La</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L19" class="blob-line-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-line-code js-file-line"><span class="s2">&quot;`&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">Ma</span><span class="p">,</span><span class="s2">&quot;&amp;&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">ma</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">grep</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="k">return</span><span class="o">!!</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">)</span><span class="o">===</span><span class="nx">d</span><span class="p">});</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">grep</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="k">return</span> <span class="nx">f</span><span class="o">===</span><span class="nx">b</span><span class="o">===</span><span class="nx">d</span><span class="p">});</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">grep</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="p">});</span><span class="k">if</span><span class="p">(</span><span class="nx">Na</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="o">!</span><span class="nx">d</span><span class="p">);</span><span class="k">else</span> <span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">)}</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">grep</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">inArray</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">===</span><span class="nx">d</span><span class="p">})}</span><span class="kd">function</span> <span class="nx">na</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">===</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">nodeName</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="o">++</span><span class="p">]),</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="k">this</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L20" class="blob-line-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-line-code js-file-line"><span class="nx">e</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">events</span><span class="p">){</span><span class="k">delete</span> <span class="nx">f</span><span class="p">.</span><span class="nx">handle</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">events</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span> <span class="k">in</span> <span class="nx">e</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span> <span class="k">in</span> <span class="nx">e</span><span class="p">[</span><span class="nx">h</span><span class="p">])</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">h</span><span class="p">][</span><span class="nx">l</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="nx">h</span><span class="p">][</span><span class="nx">l</span><span class="p">].</span><span class="nx">data</span><span class="p">)}}})}</span><span class="kd">function</span> <span class="nx">Oa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">src</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span><span class="nx">url</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">src</span><span class="p">,</span><span class="nx">async</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">dataType</span><span class="o">:</span><span class="s2">&quot;script&quot;</span><span class="p">})</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">globalEval</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">text</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">textContent</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">oa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;width&quot;</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;border&quot;</span><span class="p">)</span><span class="k">return</span> <span class="nx">e</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;width&quot;</span><span class="o">?</span><span class="nx">Pa</span><span class="o">:</span><span class="nx">Qa</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="o">-=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;padding&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">))</span><span class="o">||</span><span class="mi">0</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;margin&quot;</span><span class="p">)</span><span class="nx">e</span><span class="o">+=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L21" class="blob-line-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-line-code js-file-line"><span class="s2">&quot;margin&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">))</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span> <span class="nx">e</span><span class="o">-=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;border&quot;</span><span class="o">+</span><span class="k">this</span><span class="o">+</span><span class="s2">&quot;Width&quot;</span><span class="p">))</span><span class="o">||</span><span class="mi">0</span><span class="p">});</span><span class="k">return</span> <span class="nx">e</span><span class="p">}</span><span class="kd">function</span> <span class="nx">da</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="nx">d</span><span class="o">||</span><span class="nx">Ra</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">)</span><span class="o">:</span><span class="nx">da</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;[&quot;</span><span class="o">+</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">h</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">?</span><span class="nx">f</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)});</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">isEmptyObject</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="nx">da</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;[&quot;</span><span class="o">+</span><span class="nx">f</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)});</span><span class="k">else</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">S</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">{};</span><span class="nx">c</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">pa</span><span class="p">.</span><span class="nx">concat</span><span class="p">.</span><span class="nx">apply</span><span class="p">([],</span><span class="nx">pa</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">)),</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">[</span><span class="k">this</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">});</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="kd">function</span> <span class="nx">qa</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">ea</span><span class="p">[</span><span class="nx">a</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="s2">&quot;&lt;&quot;</span><span class="o">+</span></td>
      </tr>
      <tr>
        <td id="L22" class="blob-line-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-line-code js-file-line"><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;&gt;&quot;</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;display&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;none&quot;</span><span class="o">||</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;block&quot;</span><span class="p">;</span><span class="nx">ea</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">}</span><span class="k">return</span> <span class="nx">ea</span><span class="p">[</span><span class="nx">a</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">fa</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">isWindow</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">9</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">defaultView</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentWindow</span><span class="o">:</span><span class="kc">false</span><span class="p">}</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nb">document</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">isReady</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">t</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">doScroll</span><span class="p">(</span><span class="s2">&quot;left&quot;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span><span class="p">}</span><span class="nx">b</span><span class="p">.</span><span class="nx">ready</span><span class="p">()}}</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">b</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">s</span><span class="p">)},</span><span class="nx">d</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">$</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="sr">/^(?:[^&lt;]*(&lt;[\w\W]+&gt;)[^&gt;]*$|#([\w\-]+)$)/</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="sr">/\S/</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="sr">/^\s+/</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="sr">/\s+$/</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="sr">/\W/</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="sr">/\d/</span><span class="p">,</span><span class="nx">A</span><span class="o">=</span><span class="sr">/^&lt;(\w+)\s*\/?&gt;(?:&lt;\/\1&gt;)?$/</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L23" class="blob-line-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-line-code js-file-line"><span class="nx">C</span><span class="o">=</span><span class="sr">/^[\],:{}\s]*$/</span><span class="p">,</span><span class="nx">J</span><span class="o">=</span><span class="sr">/\\(?:[&quot;\\\/bfnrt]|u[0-9a-fA-F]{4})/g</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="sr">/&quot;[^&quot;\\\n\r]*&quot;|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g</span><span class="p">,</span><span class="nx">I</span><span class="o">=</span><span class="sr">/(?:^|:|,)(?:\s*\[)+/g</span><span class="p">,</span><span class="nx">L</span><span class="o">=</span><span class="sr">/(webkit)[ \/]([\w.]+)/</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="sr">/(opera)(?:.*version)?[ \/]([\w.]+)/</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="sr">/(msie) ([\w.]+)/</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="sr">/(mozilla)(?:.*? rv:([\w.]+))?/</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="kc">false</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="p">[],</span><span class="nx">u</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">,</span><span class="nx">M</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">push</span><span class="p">,</span><span class="nx">N</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">,</span><span class="nx">O</span><span class="o">=</span><span class="nb">String</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">trim</span><span class="p">,</span><span class="nx">D</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">,</span><span class="nx">R</span><span class="o">=</span><span class="p">{};</span><span class="nx">b</span><span class="p">.</span><span class="nx">fn</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">init</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L24" class="blob-line-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-line-code js-file-line"><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">v</span><span class="p">,</span><span class="nx">z</span><span class="p">,</span><span class="nx">H</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">j</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">context</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">j</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">===</span><span class="s2">&quot;body&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">body</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">context</span><span class="o">=</span><span class="nx">t</span><span class="p">;</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">body</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">selector</span><span class="o">=</span><span class="s2">&quot;body&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">j</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">)</span><span class="k">if</span><span class="p">((</span><span class="nx">v</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">j</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">v</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">||!</span><span class="nx">s</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">[</span><span class="mi">1</span><span class="p">]){</span><span class="nx">H</span><span class="o">=</span><span class="nx">s</span><span class="o">?</span><span class="nx">s</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="o">||</span><span class="nx">s</span><span class="o">:</span><span class="nx">t</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">z</span><span class="o">=</span><span class="nx">A</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">j</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">isPlainObject</span><span class="p">(</span><span class="nx">s</span><span class="p">)){</span><span class="nx">j</span><span class="o">=</span><span class="p">[</span><span class="nx">t</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">z</span><span class="p">[</span><span class="mi">1</span><span class="p">])];</span><span class="nx">b</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">attr</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="kc">true</span><span class="p">)}</span><span class="k">else</span> <span class="nx">j</span><span class="o">=</span><span class="p">[</span><span class="nx">H</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">z</span><span class="p">[</span><span class="mi">1</span><span class="p">])];</span><span class="k">else</span><span class="p">{</span><span class="nx">z</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">buildFragment</span><span class="p">([</span><span class="nx">v</span><span class="p">[</span><span class="mi">1</span><span class="p">]],[</span><span class="nx">H</span><span class="p">]);</span><span class="nx">j</span><span class="o">=</span><span class="p">(</span><span class="nx">z</span><span class="p">.</span><span class="nx">cacheable</span><span class="o">?</span><span class="nx">z</span><span class="p">.</span><span class="nx">fragment</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span><span class="o">:</span><span class="nx">z</span><span class="p">.</span><span class="nx">fragment</span><span class="p">).</span><span class="nx">childNodes</span><span class="p">}</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">merge</span><span class="p">(</span><span class="k">this</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L25" class="blob-line-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-line-code js-file-line"><span class="nx">j</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">((</span><span class="nx">z</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">v</span><span class="p">[</span><span class="mi">2</span><span class="p">]))</span><span class="o">&amp;&amp;</span><span class="nx">z</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">z</span><span class="p">.</span><span class="nx">id</span><span class="o">!==</span><span class="nx">v</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">z</span><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">context</span><span class="o">=</span><span class="nx">t</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">selector</span><span class="o">=</span><span class="nx">j</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">s</span><span class="o">&amp;&amp;!</span><span class="nx">x</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">j</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">selector</span><span class="o">=</span><span class="nx">j</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">context</span><span class="o">=</span><span class="nx">t</span><span class="p">;</span><span class="nx">j</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">merge</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">j</span><span class="p">)}</span><span class="k">else</span> <span class="k">return</span><span class="o">!</span><span class="nx">s</span><span class="o">||</span><span class="nx">s</span><span class="p">.</span><span class="nx">jquery</span><span class="o">?</span><span class="p">(</span><span class="nx">s</span><span class="o">||</span><span class="nx">f</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">(</span><span class="nx">s</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">j</span><span class="p">))</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">ready</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">selector</span><span class="o">!==</span><span class="nx">B</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">selector</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">selector</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">context</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">context</span><span class="p">}</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">makeArray</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="k">this</span><span class="p">)},</span><span class="nx">selector</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">jquery</span><span class="o">:</span><span class="s2">&quot;1.4.4&quot;</span><span class="p">,</span><span class="nx">length</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">size</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">},</span></td>
      </tr>
      <tr>
        <td id="L26" class="blob-line-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-line-code js-file-line"><span class="nx">toArray</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">N</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="mi">0</span><span class="p">)},</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="k">return</span> <span class="nx">j</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">toArray</span><span class="p">()</span><span class="o">:</span><span class="nx">j</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="nx">j</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="k">this</span><span class="p">[</span><span class="nx">j</span><span class="p">]},</span><span class="nx">pushStack</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">v</span><span class="p">){</span><span class="kd">var</span> <span class="nx">z</span><span class="o">=</span><span class="nx">b</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">?</span><span class="nx">M</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">z</span><span class="p">,</span><span class="nx">j</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">merge</span><span class="p">(</span><span class="nx">z</span><span class="p">,</span><span class="nx">j</span><span class="p">);</span><span class="nx">z</span><span class="p">.</span><span class="nx">prevObject</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">z</span><span class="p">.</span><span class="nx">context</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">context</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="o">===</span><span class="s2">&quot;find&quot;</span><span class="p">)</span><span class="nx">z</span><span class="p">.</span><span class="nx">selector</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">selector</span><span class="o">+</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">selector</span><span class="o">?</span><span class="s2">&quot; &quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">v</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span><span class="nx">z</span><span class="p">.</span><span class="nx">selector</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">selector</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="s2">&quot;(&quot;</span><span class="o">+</span><span class="nx">v</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">z</span><span class="p">},</span><span class="nx">each</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">s</span><span class="p">)},</span><span class="nx">ready</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">bindReady</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">isReady</span><span class="p">)</span><span class="nx">j</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">else</span> <span class="nx">q</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">eq</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="k">return</span> <span class="nx">j</span><span class="o">===</span></td>
      </tr>
      <tr>
        <td id="L27" class="blob-line-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-line-code js-file-line"><span class="o">-</span><span class="mi">1</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="o">+</span><span class="nx">j</span><span class="o">+</span><span class="mi">1</span><span class="p">)},</span><span class="nx">first</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">eq</span><span class="p">(</span><span class="mi">0</span><span class="p">)},</span><span class="nx">last</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">eq</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)},</span><span class="nx">slice</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">pushStack</span><span class="p">(</span><span class="nx">N</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">),</span><span class="s2">&quot;slice&quot;</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">))},</span><span class="nx">map</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">pushStack</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">v</span><span class="p">){</span><span class="k">return</span> <span class="nx">j</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">s</span><span class="p">)}))},</span><span class="nx">end</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">prevObject</span><span class="o">||</span><span class="nx">b</span><span class="p">(</span><span class="kc">null</span><span class="p">)},</span><span class="nx">push</span><span class="o">:</span><span class="nx">M</span><span class="p">,</span><span class="nx">sort</span><span class="o">:</span><span class="p">[].</span><span class="nx">sort</span><span class="p">,</span><span class="nx">splice</span><span class="o">:</span><span class="p">[].</span><span class="nx">splice</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">init</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">fn</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">extend</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">extend</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">j</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">z</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">G</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="p">{},</span><span class="nx">K</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">Q</span><span class="o">=</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">ga</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span></td>
      </tr>
      <tr>
        <td id="L28" class="blob-line-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-line-code js-file-line"><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">G</span><span class="o">===</span><span class="s2">&quot;boolean&quot;</span><span class="p">){</span><span class="nx">ga</span><span class="o">=</span><span class="nx">G</span><span class="p">;</span><span class="nx">G</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="p">{};</span><span class="nx">K</span><span class="o">=</span><span class="mi">2</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">G</span><span class="o">!==</span><span class="s2">&quot;object&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">G</span><span class="p">))</span><span class="nx">G</span><span class="o">=</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="nx">Q</span><span class="o">===</span><span class="nx">K</span><span class="p">){</span><span class="nx">G</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="o">--</span><span class="nx">K</span><span class="p">}</span><span class="k">for</span><span class="p">(;</span><span class="nx">K</span><span class="o">&lt;</span><span class="nx">Q</span><span class="p">;</span><span class="nx">K</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">((</span><span class="nx">j</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">K</span><span class="p">])</span><span class="o">!=</span><span class="kc">null</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">s</span> <span class="k">in</span> <span class="nx">j</span><span class="p">){</span><span class="nx">v</span><span class="o">=</span><span class="nx">G</span><span class="p">[</span><span class="nx">s</span><span class="p">];</span><span class="nx">z</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="nx">s</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="o">!==</span><span class="nx">z</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">ga</span><span class="o">&amp;&amp;</span><span class="nx">z</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">isPlainObject</span><span class="p">(</span><span class="nx">z</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">H</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">z</span><span class="p">)))){</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="nx">H</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">v</span><span class="o">=</span><span class="nx">v</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">v</span><span class="p">)</span><span class="o">?</span><span class="nx">v</span><span class="o">:</span><span class="p">[]}</span><span class="k">else</span> <span class="nx">v</span><span class="o">=</span><span class="nx">v</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">isPlainObject</span><span class="p">(</span><span class="nx">v</span><span class="p">)</span><span class="o">?</span><span class="nx">v</span><span class="o">:</span><span class="p">{};</span><span class="nx">G</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">ga</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">z</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">z</span><span class="o">!==</span><span class="nx">B</span><span class="p">)</span><span class="nx">G</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">=</span><span class="nx">z</span><span class="p">}</span><span class="k">return</span> <span class="nx">G</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">noConflict</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="nx">E</span><span class="p">.</span><span class="nx">$</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="nx">E</span><span class="p">.</span><span class="nx">jQuery</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">isReady</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">readyWait</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">ready</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="nx">j</span><span class="o">===</span><span class="kc">true</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">readyWait</span><span class="o">--</span><span class="p">;</span></td>
      </tr>
      <tr>
        <td id="L29" class="blob-line-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-line-code js-file-line"><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">readyWait</span><span class="o">||</span><span class="nx">j</span><span class="o">!==</span><span class="kc">true</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="p">.</span><span class="nx">isReady</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">t</span><span class="p">.</span><span class="nx">body</span><span class="p">)</span><span class="k">return</span> <span class="nx">setTimeout</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">ready</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">isReady</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">j</span><span class="o">!==</span><span class="kc">true</span><span class="o">&amp;&amp;--</span><span class="nx">b</span><span class="p">.</span><span class="nx">readyWait</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nx">q</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">q</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">j</span><span class="o">=</span><span class="nx">v</span><span class="p">[</span><span class="nx">s</span><span class="o">++</span><span class="p">];)</span><span class="nx">j</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">trigger</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">(</span><span class="nx">t</span><span class="p">).</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;ready&quot;</span><span class="p">).</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;ready&quot;</span><span class="p">)}}},</span><span class="nx">bindReady</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">p</span><span class="p">){</span><span class="nx">p</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">readyState</span><span class="o">===</span><span class="s2">&quot;complete&quot;</span><span class="p">)</span><span class="k">return</span> <span class="nx">setTimeout</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">ready</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;DOMContentLoaded&quot;</span><span class="p">,</span><span class="nx">u</span><span class="p">,</span><span class="kc">false</span><span class="p">);</span><span class="nx">E</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;load&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">ready</span><span class="p">,</span><span class="kc">false</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;onreadystatechange&quot;</span><span class="p">,</span><span class="nx">u</span><span class="p">);</span><span class="nx">E</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;onload&quot;</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L30" class="blob-line-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-line-code js-file-line"><span class="nx">b</span><span class="p">.</span><span class="nx">ready</span><span class="p">);</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">j</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">frameElement</span><span class="o">==</span><span class="kc">null</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">s</span><span class="p">){}</span><span class="nx">t</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">doScroll</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">()}}},</span><span class="nx">isFunction</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;function&quot;</span><span class="p">},</span><span class="nx">isArray</span><span class="o">:</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="o">||</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;array&quot;</span><span class="p">},</span><span class="nx">isWindow</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="k">return</span> <span class="nx">j</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">j</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="o">&amp;&amp;</span><span class="s2">&quot;setInterval&quot;</span><span class="k">in</span> <span class="nx">j</span><span class="p">},</span><span class="nb">isNaN</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="k">return</span> <span class="nx">j</span><span class="o">==</span><span class="kc">null</span><span class="o">||!</span><span class="nx">r</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">||</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">j</span><span class="p">)},</span><span class="nx">type</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="k">return</span> <span class="nx">j</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="nb">String</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">:</span><span class="nx">R</span><span class="p">[</span><span class="nx">y</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">j</span><span class="p">)]</span><span class="o">||</span><span class="s2">&quot;object&quot;</span><span class="p">},</span><span class="nx">isPlainObject</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">j</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">!==</span><span class="s2">&quot;object&quot;</span><span class="o">||</span><span class="nx">j</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">isWindow</span><span class="p">(</span><span class="nx">j</span><span class="p">))</span><span class="k">return</span> <span class="kc">false</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">constructor</span><span class="o">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L31" class="blob-line-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-line-code js-file-line"><span class="o">!</span><span class="nx">F</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="s2">&quot;constructor&quot;</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">F</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="s2">&quot;isPrototypeOf&quot;</span><span class="p">))</span><span class="k">return</span> <span class="kc">false</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">s</span> <span class="k">in</span> <span class="nx">j</span><span class="p">);</span><span class="k">return</span> <span class="nx">s</span><span class="o">===</span><span class="nx">B</span><span class="o">||</span><span class="nx">F</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">s</span><span class="p">)},</span><span class="nx">isEmptyObject</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">s</span> <span class="k">in</span> <span class="nx">j</span><span class="p">)</span><span class="k">return</span> <span class="kc">false</span><span class="p">;</span><span class="k">return</span> <span class="kc">true</span><span class="p">},</span><span class="nx">error</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="k">throw</span> <span class="nx">j</span><span class="p">;},</span><span class="nx">parseJSON</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">j</span><span class="o">!==</span><span class="s2">&quot;string&quot;</span><span class="o">||!</span><span class="nx">j</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="nx">j</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">J</span><span class="p">,</span><span class="s2">&quot;@&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">w</span><span class="p">,</span><span class="s2">&quot;]&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)))</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">JSON</span><span class="o">&amp;&amp;</span><span class="nx">E</span><span class="p">.</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="o">?</span><span class="nx">E</span><span class="p">.</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="k">new</span> <span class="nb">Function</span><span class="p">(</span><span class="s2">&quot;return &quot;</span><span class="o">+</span><span class="nx">j</span><span class="p">))();</span><span class="k">else</span> <span class="nx">b</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;Invalid JSON: &quot;</span><span class="o">+</span><span class="nx">j</span><span class="p">)},</span><span class="nx">noop</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">globalEval</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L32" class="blob-line-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-line-code js-file-line"><span class="nx">l</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">j</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;head&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="nx">t</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;script&quot;</span><span class="p">);</span><span class="nx">v</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">scriptEval</span><span class="p">)</span><span class="nx">v</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">j</span><span class="p">));</span><span class="k">else</span> <span class="nx">v</span><span class="p">.</span><span class="nx">text</span><span class="o">=</span><span class="nx">j</span><span class="p">;</span><span class="nx">s</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">v</span><span class="p">,</span><span class="nx">s</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">);</span><span class="nx">s</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">v</span><span class="p">)}},</span><span class="nx">nodeName</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="nx">j</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()</span><span class="o">===</span><span class="nx">s</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()},</span><span class="nx">each</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">v</span><span class="p">){</span><span class="kd">var</span> <span class="nx">z</span><span class="p">,</span><span class="nx">H</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">G</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">K</span><span class="o">=</span><span class="nx">G</span><span class="o">===</span><span class="nx">B</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">z</span> <span class="k">in</span> <span class="nx">j</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">z</span><span class="p">],</span><span class="nx">v</span><span class="p">)</span><span class="o">===</span><span class="kc">false</span><span class="p">)</span><span class="k">break</span><span class="p">}</span><span class="k">else</span> <span class="k">for</span><span class="p">(;</span><span class="nx">H</span><span class="o">&lt;</span><span class="nx">G</span><span class="p">;){</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">H</span><span class="o">++</span><span class="p">],</span><span class="nx">v</span><span class="p">)</span><span class="o">===</span><span class="kc">false</span><span class="p">)</span><span class="k">break</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">z</span> <span class="k">in</span> <span class="nx">j</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">z</span><span class="p">],</span></td>
      </tr>
      <tr>
        <td id="L33" class="blob-line-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-line-code js-file-line"><span class="nx">z</span><span class="p">,</span><span class="nx">j</span><span class="p">[</span><span class="nx">z</span><span class="p">])</span><span class="o">===</span><span class="kc">false</span><span class="p">)</span><span class="k">break</span><span class="p">}</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">v</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">H</span><span class="o">&lt;</span><span class="nx">G</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">v</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">v</span><span class="p">)</span><span class="o">!==</span><span class="kc">false</span><span class="p">;</span><span class="nx">v</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="o">++</span><span class="nx">H</span><span class="p">]);</span><span class="k">return</span> <span class="nx">j</span><span class="p">},</span><span class="nx">trim</span><span class="o">:</span><span class="nx">O</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="k">return</span> <span class="nx">j</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="nx">O</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">j</span><span class="p">)}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="k">return</span> <span class="nx">j</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="nx">j</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">replace</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)},</span><span class="nx">makeArray</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">v</span><span class="o">=</span><span class="nx">s</span><span class="o">||</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">!=</span><span class="kc">null</span><span class="p">){</span><span class="kd">var</span> <span class="nx">z</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="kc">null</span><span class="o">||</span><span class="nx">z</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="o">||</span><span class="nx">z</span><span class="o">===</span><span class="s2">&quot;function&quot;</span><span class="o">||</span><span class="nx">z</span><span class="o">===</span><span class="s2">&quot;regexp&quot;</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">isWindow</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">?</span><span class="nx">M</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">v</span><span class="p">,</span><span class="nx">j</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">merge</span><span class="p">(</span><span class="nx">v</span><span class="p">,</span><span class="nx">j</span><span class="p">)}</span><span class="k">return</span> <span class="nx">v</span><span class="p">},</span><span class="nx">inArray</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">)</span><span class="k">return</span> <span class="nx">s</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">v</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">v</span><span class="o">&lt;</span><span class="nx">z</span><span class="p">;</span><span class="nx">v</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">[</span><span class="nx">v</span><span class="p">]</span><span class="o">===</span><span class="nx">j</span><span class="p">)</span><span class="k">return</span> <span class="nx">v</span><span class="p">;</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">},</span><span class="nx">merge</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L34" class="blob-line-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-line-code js-file-line"><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">v</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">s</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="s2">&quot;number&quot;</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">z</span><span class="o">&lt;</span><span class="nx">H</span><span class="p">;</span><span class="nx">z</span><span class="o">++</span><span class="p">)</span><span class="nx">j</span><span class="p">[</span><span class="nx">v</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">s</span><span class="p">[</span><span class="nx">z</span><span class="p">];</span><span class="k">else</span> <span class="k">for</span><span class="p">(;</span><span class="nx">s</span><span class="p">[</span><span class="nx">z</span><span class="p">]</span><span class="o">!==</span><span class="nx">B</span><span class="p">;)</span><span class="nx">j</span><span class="p">[</span><span class="nx">v</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">s</span><span class="p">[</span><span class="nx">z</span><span class="o">++</span><span class="p">];</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="nx">v</span><span class="p">;</span><span class="k">return</span> <span class="nx">j</span><span class="p">},</span><span class="nx">grep</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">v</span><span class="p">){</span><span class="kd">var</span> <span class="nx">z</span><span class="o">=</span><span class="p">[],</span><span class="nx">H</span><span class="p">;</span><span class="nx">v</span><span class="o">=!!</span><span class="nx">v</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">K</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">G</span><span class="o">&lt;</span><span class="nx">K</span><span class="p">;</span><span class="nx">G</span><span class="o">++</span><span class="p">){</span><span class="nx">H</span><span class="o">=!!</span><span class="nx">s</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">G</span><span class="p">],</span><span class="nx">G</span><span class="p">);</span><span class="nx">v</span><span class="o">!==</span><span class="nx">H</span><span class="o">&amp;&amp;</span><span class="nx">z</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">G</span><span class="p">])}</span><span class="k">return</span> <span class="nx">z</span><span class="p">},</span><span class="nx">map</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">v</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">z</span><span class="o">=</span><span class="p">[],</span><span class="nx">H</span><span class="p">,</span><span class="nx">G</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">K</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">G</span><span class="o">&lt;</span><span class="nx">K</span><span class="p">;</span><span class="nx">G</span><span class="o">++</span><span class="p">){</span><span class="nx">H</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">G</span><span class="p">],</span><span class="nx">G</span><span class="p">,</span><span class="nx">v</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="o">!=</span><span class="kc">null</span><span class="p">)</span><span class="nx">z</span><span class="p">[</span><span class="nx">z</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="nx">H</span><span class="p">}</span><span class="k">return</span> <span class="nx">z</span><span class="p">.</span><span class="nx">concat</span><span class="p">.</span><span class="nx">apply</span><span class="p">([],</span><span class="nx">z</span><span class="p">)},</span><span class="nx">guid</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">proxy</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">v</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">2</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">s</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="nx">v</span><span class="o">=</span><span class="nx">j</span><span class="p">;</span><span class="nx">j</span><span class="o">=</span><span class="nx">v</span><span class="p">[</span><span class="nx">s</span><span class="p">];</span><span class="nx">s</span><span class="o">=</span><span class="nx">B</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">s</span><span class="p">)){</span><span class="nx">v</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L35" class="blob-line-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-line-code js-file-line"><span class="nx">s</span><span class="p">;</span><span class="nx">s</span><span class="o">=</span><span class="nx">B</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">)</span><span class="nx">s</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">j</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">v</span><span class="o">||</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)};</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="nx">s</span><span class="p">.</span><span class="nx">guid</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">guid</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">guid</span><span class="o">||</span><span class="nx">s</span><span class="p">.</span><span class="nx">guid</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">guid</span><span class="o">++</span><span class="p">;</span><span class="k">return</span> <span class="nx">s</span><span class="p">},</span><span class="nx">access</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">z</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">s</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">Q</span> <span class="k">in</span> <span class="nx">s</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">access</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">Q</span><span class="p">,</span><span class="nx">s</span><span class="p">[</span><span class="nx">Q</span><span class="p">],</span><span class="nx">z</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">v</span><span class="p">);</span><span class="k">return</span> <span class="nx">j</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="o">!==</span><span class="nx">B</span><span class="p">){</span><span class="nx">z</span><span class="o">=!</span><span class="nx">G</span><span class="o">&amp;&amp;</span><span class="nx">z</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">v</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">Q</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">Q</span><span class="o">&lt;</span><span class="nx">K</span><span class="p">;</span><span class="nx">Q</span><span class="o">++</span><span class="p">)</span><span class="nx">H</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">Q</span><span class="p">],</span><span class="nx">s</span><span class="p">,</span><span class="nx">z</span><span class="o">?</span><span class="nx">v</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">Q</span><span class="p">],</span><span class="nx">Q</span><span class="p">,</span><span class="nx">H</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">Q</span><span class="p">],</span><span class="nx">s</span><span class="p">))</span><span class="o">:</span><span class="nx">v</span><span class="p">,</span><span class="nx">G</span><span class="p">);</span><span class="k">return</span> <span class="nx">j</span><span class="p">}</span><span class="k">return</span> <span class="nx">K</span><span class="o">?</span><span class="nx">H</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">s</span><span class="p">)</span><span class="o">:</span><span class="nx">B</span><span class="p">},</span><span class="nx">now</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">()},</span><span class="nx">uaMatch</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="nx">j</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="nx">j</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">||</span><span class="nx">i</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">||</span><span class="nx">j</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;compatible&quot;</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">||</span></td>
      </tr>
      <tr>
        <td id="L36" class="blob-line-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-line-code js-file-line"><span class="p">[];</span><span class="k">return</span><span class="p">{</span><span class="nx">browser</span><span class="o">:</span><span class="nx">j</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">version</span><span class="o">:</span><span class="nx">j</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;0&quot;</span><span class="p">}},</span><span class="nx">browser</span><span class="o">:</span><span class="p">{}});</span><span class="nx">b</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="s2">&quot;Boolean Number String Function Array Date RegExp Object&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="nx">R</span><span class="p">[</span><span class="s2">&quot;[object &quot;</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()});</span><span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">uaMatch</span><span class="p">(</span><span class="nx">m</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">browser</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">browser</span><span class="p">[</span><span class="nx">m</span><span class="p">.</span><span class="nx">browser</span><span class="p">]</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">version</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">version</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">webkit</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">safari</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">inArray</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="k">return</span> <span class="nx">D</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">j</span><span class="p">)};</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/\s/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="s2">&quot;\u00a0&quot;</span><span class="p">)){</span><span class="nx">k</span><span class="o">=</span><span class="sr">/^[\s\xA0]+/</span><span class="p">;</span><span class="nx">o</span><span class="o">=</span><span class="sr">/[\s\xA0]+$/</span><span class="p">}</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">)</span><span class="nx">u</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">t</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s2">&quot;DOMContentLoaded&quot;</span><span class="p">,</span><span class="nx">u</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L37" class="blob-line-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-line-code js-file-line"><span class="kc">false</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">ready</span><span class="p">()};</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">)</span><span class="nx">u</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">readyState</span><span class="o">===</span><span class="s2">&quot;complete&quot;</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">(</span><span class="s2">&quot;onreadystatechange&quot;</span><span class="p">,</span><span class="nx">u</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">ready</span><span class="p">()}};</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">jQuery</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">$</span><span class="o">=</span><span class="nx">b</span><span class="p">}();(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="o">=</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;script&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;script&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">now</span><span class="p">();</span><span class="nx">d</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;   &lt;link/&gt;&lt;table&gt;&lt;/table&gt;&lt;a href=&#39;/a&#39; style=&#39;color:red;float:left;opacity:.55;&#39;&gt;a&lt;/a&gt;&lt;input type=&#39;checkbox&#39;/&gt;&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;select&quot;</span><span class="p">),</span></td>
      </tr>
      <tr>
        <td id="L38" class="blob-line-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-line-code js-file-line"><span class="nx">k</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;option&quot;</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="o">!</span><span class="nx">f</span><span class="o">||!</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">||!</span><span class="nx">h</span><span class="p">)){</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="o">=</span><span class="p">{</span><span class="nx">leadingWhitespace</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">3</span><span class="p">,</span><span class="nx">tbody</span><span class="o">:!</span><span class="nx">d</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;tbody&quot;</span><span class="p">).</span><span class="nx">length</span><span class="p">,</span><span class="nx">htmlSerialize</span><span class="o">:!!</span><span class="nx">d</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;link&quot;</span><span class="p">).</span><span class="nx">length</span><span class="p">,</span><span class="nx">style</span><span class="o">:</span><span class="sr">/red/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;style&quot;</span><span class="p">)),</span><span class="nx">hrefNormalized</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;href&quot;</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;/a&quot;</span><span class="p">,</span><span class="nx">opacity</span><span class="o">:</span><span class="sr">/^0.55$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">opacity</span><span class="p">),</span><span class="nx">cssFloat</span><span class="o">:!!</span><span class="nx">h</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">cssFloat</span><span class="p">,</span><span class="nx">checkOn</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;input&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">value</span><span class="o">===</span><span class="s2">&quot;on&quot;</span><span class="p">,</span><span class="nx">optSelected</span><span class="o">:</span><span class="nx">k</span><span class="p">.</span><span class="nx">selected</span><span class="p">,</span><span class="nx">deleteExpando</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">optDisabled</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">checkClone</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L39" class="blob-line-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-line-code js-file-line"><span class="nx">scriptEval</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">noCloneEvent</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">boxModel</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">inlineBlockNeedsLayout</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">shrinkWrapBlocks</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">reliableHiddenOffsets</span><span class="o">:</span><span class="kc">true</span><span class="p">};</span><span class="nx">l</span><span class="p">.</span><span class="nx">disabled</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">optDisabled</span><span class="o">=!</span><span class="nx">k</span><span class="p">.</span><span class="nx">disabled</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">b</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="s2">&quot;window.&quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;=1;&quot;</span><span class="p">))}</span><span class="k">catch</span><span class="p">(</span><span class="nx">o</span><span class="p">){}</span><span class="nx">a</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">[</span><span class="nx">e</span><span class="p">]){</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">scriptEval</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">delete</span> <span class="nx">E</span><span class="p">[</span><span class="nx">e</span><span class="p">]}</span><span class="k">try</span><span class="p">{</span><span class="k">delete</span> <span class="nx">b</span><span class="p">.</span><span class="nx">test</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">x</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">deleteExpando</span><span class="o">=</span><span class="kc">false</span><span class="p">}</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">attachEvent</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">fireEvent</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;onclick&quot;</span><span class="p">,</span><span class="kd">function</span> <span class="nx">r</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">noCloneEvent</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L40" class="blob-line-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-line-code js-file-line"><span class="kc">false</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">(</span><span class="s2">&quot;onclick&quot;</span><span class="p">,</span><span class="nx">r</span><span class="p">)});</span><span class="nx">d</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="kc">true</span><span class="p">).</span><span class="nx">fireEvent</span><span class="p">(</span><span class="s2">&quot;onclick&quot;</span><span class="p">)}</span><span class="nx">d</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&lt;input type=&#39;radio&#39; name=&#39;radiotest&#39; checked=&#39;checked&#39;/&gt;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">createDocumentFragment</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">checkClone</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="kc">true</span><span class="p">).</span><span class="nx">cloneNode</span><span class="p">(</span><span class="kc">true</span><span class="p">).</span><span class="nx">lastChild</span><span class="p">.</span><span class="nx">checked</span><span class="p">;</span><span class="nx">c</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">r</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">paddingLeft</span><span class="o">=</span><span class="s2">&quot;1px&quot;</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">r</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">boxModel</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">boxModel</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="o">===</span><span class="mi">2</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;zoom&quot;</span><span class="k">in</span> <span class="nx">r</span><span class="p">.</span><span class="nx">style</span><span class="p">){</span><span class="nx">r</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;inline&quot;</span><span class="p">;</span><span class="nx">r</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">zoom</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L41" class="blob-line-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-line-code js-file-line"><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">inlineBlockNeedsLayout</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="o">===</span><span class="mi">2</span><span class="p">;</span><span class="nx">r</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">r</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&lt;div style=&#39;width:4px;&#39;&gt;&lt;/div&gt;&quot;</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">shrinkWrapBlocks</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="o">!==</span><span class="mi">2</span><span class="p">}</span><span class="nx">r</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&lt;table&gt;&lt;tr&gt;&lt;td style=&#39;padding:0;display:none&#39;&gt;&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;td&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">reliableHiddenOffsets</span><span class="o">=</span><span class="nx">A</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">offsetHeight</span><span class="o">===</span><span class="mi">0</span><span class="p">;</span><span class="nx">A</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">A</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">reliableHiddenOffsets</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">reliableHiddenOffsets</span><span class="o">&amp;&amp;</span><span class="nx">A</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">offsetHeight</span><span class="o">===</span><span class="mi">0</span><span class="p">;</span><span class="nx">r</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">r</span><span class="p">).</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L42" class="blob-line-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-line-code js-file-line"><span class="s2">&quot;none&quot;</span><span class="p">});</span><span class="nx">a</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">r</span><span class="p">){</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">r</span><span class="o">=</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">r</span><span class="p">;</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="nx">r</span> <span class="k">in</span> <span class="nx">A</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">C</span><span class="p">){</span><span class="nx">A</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="s2">&quot;return;&quot;</span><span class="p">);</span><span class="nx">C</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">A</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;function&quot;</span><span class="p">}</span><span class="k">return</span> <span class="nx">C</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">submitBubbles</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;submit&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">changeBubbles</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;change&quot;</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="o">=</span><span class="nx">h</span><span class="o">=</span><span class="kc">null</span><span class="p">}})();</span><span class="kd">var</span> <span class="nx">ra</span><span class="o">=</span><span class="p">{},</span><span class="nx">Ja</span><span class="o">=</span><span class="sr">/^(?:\{.*\}|\[.*\])$/</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">cache</span><span class="o">:</span><span class="p">{},</span><span class="nx">uuid</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">expando</span><span class="o">:</span><span class="s2">&quot;jQuery&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">now</span><span class="p">(),</span><span class="nx">noData</span><span class="o">:</span><span class="p">{</span><span class="nx">embed</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">object</span><span class="o">:</span><span class="s2">&quot;clsid:D27CDB6E-AE6D-11cf-96B8-444553540000&quot;</span><span class="p">,</span><span class="nx">applet</span><span class="o">:</span><span class="kc">true</span><span class="p">},</span><span class="nx">data</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">acceptData</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">==</span><span class="nx">E</span><span class="o">?</span><span class="nx">ra</span><span class="o">:</span><span class="nx">a</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">expando</span><span class="p">]</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L43" class="blob-line-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-line-code js-file-line"><span class="nx">c</span><span class="p">.</span><span class="nx">cache</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;!</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">===</span><span class="nx">B</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="nx">f</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">expando</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="o">=++</span><span class="nx">c</span><span class="p">.</span><span class="nx">uuid</span><span class="p">);</span><span class="k">else</span> <span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="nx">h</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">b</span><span class="p">);</span><span class="k">else</span> <span class="nx">c</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;!</span><span class="nx">h</span><span class="p">[</span><span class="nx">f</span><span class="p">])</span><span class="nx">h</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="p">{};</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="o">?</span><span class="nx">h</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">:</span><span class="nx">h</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">!==</span><span class="nx">B</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">b</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">:</span><span class="nx">a</span><span class="p">}}},</span><span class="nx">removeData</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">acceptData</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">==</span><span class="nx">E</span><span class="o">?</span><span class="nx">ra</span><span class="o">:</span><span class="nx">a</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">expando</span><span class="p">]</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">cache</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="o">?</span><span class="nx">f</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">:</span><span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="k">delete</span> <span class="nx">h</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">isEmptyObject</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeData</span><span class="p">(</span><span class="nx">a</span><span class="p">)}}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">deleteExpando</span><span class="p">)</span><span class="k">delete</span> <span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">expando</span><span class="p">];</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">expando</span><span class="p">);</span></td>
      </tr>
      <tr>
        <td id="L44" class="blob-line-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-line-code js-file-line"><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="k">delete</span> <span class="nx">f</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">delete</span> <span class="nx">a</span><span class="p">[</span><span class="nx">l</span><span class="p">]}},</span><span class="nx">acceptData</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">noData</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()];</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="p">(</span><span class="nx">b</span><span class="o">===</span><span class="kc">true</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;classid&quot;</span><span class="p">)</span><span class="o">!==</span><span class="nx">b</span><span class="p">)}</span><span class="k">return</span> <span class="kc">true</span><span class="p">}});</span><span class="nx">c</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">data</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">===</span><span class="s2">&quot;undefined&quot;</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">attributes</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">name</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;data-&quot;</span><span class="p">)</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">5</span><span class="p">);</span><span class="nx">ka</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="p">])}}}</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="k">this</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L45" class="blob-line-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-line-code js-file-line"><span class="nx">a</span><span class="p">)});</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">);</span><span class="nx">k</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">?</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">k</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">===</span><span class="nx">B</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">triggerHandler</span><span class="p">(</span><span class="s2">&quot;getData&quot;</span><span class="o">+</span><span class="nx">k</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;!&quot;</span><span class="p">,[</span><span class="nx">k</span><span class="p">[</span><span class="mi">0</span><span class="p">]]);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">===</span><span class="nx">B</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="nx">ka</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">)}</span><span class="k">return</span> <span class="nx">d</span><span class="o">===</span><span class="nx">B</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">:</span><span class="nx">d</span><span class="p">}</span><span class="k">else</span> <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">x</span><span class="o">=</span><span class="p">[</span><span class="nx">k</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">b</span><span class="p">];</span><span class="nx">o</span><span class="p">.</span><span class="nx">triggerHandler</span><span class="p">(</span><span class="s2">&quot;setData&quot;</span><span class="o">+</span><span class="nx">k</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;!&quot;</span><span class="p">,</span><span class="nx">x</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">o</span><span class="p">.</span><span class="nx">triggerHandler</span><span class="p">(</span><span class="s2">&quot;changeData&quot;</span><span class="o">+</span><span class="nx">k</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;!&quot;</span><span class="p">,</span><span class="nx">x</span><span class="p">)})},</span><span class="nx">removeData</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeData</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">)})}});</span><span class="nx">c</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">queue</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="p">(</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;fx&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;queue&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L46" class="blob-line-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-line-code js-file-line"><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span> <span class="nx">e</span><span class="o">||</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">makeArray</span><span class="p">(</span><span class="nx">d</span><span class="p">));</span><span class="k">else</span> <span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="nx">e</span><span class="p">}},</span><span class="nx">dequeue</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;fx&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">queue</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">===</span><span class="s2">&quot;inprogress&quot;</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;fx&quot;</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="s2">&quot;inprogress&quot;</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">dequeue</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)})}}});</span><span class="nx">c</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">queue</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">!==</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;fx&quot;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">===</span><span class="nx">B</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">queue</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">queue</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;fx&quot;</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">!==</span><span class="s2">&quot;inprogress&quot;</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">dequeue</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">)})},</span><span class="nx">dequeue</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">dequeue</span><span class="p">(</span><span class="k">this</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L47" class="blob-line-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-line-code js-file-line"><span class="nx">a</span><span class="p">)})},</span><span class="nx">delay</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">fx</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">fx</span><span class="p">.</span><span class="nx">speeds</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">||</span><span class="nx">a</span><span class="o">:</span><span class="nx">a</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;fx&quot;</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">queue</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">dequeue</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="nx">a</span><span class="p">)})},</span><span class="nx">clearQueue</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">queue</span><span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;fx&quot;</span><span class="p">,[])}});</span><span class="kd">var</span> <span class="nx">sa</span><span class="o">=</span><span class="sr">/[\n\t]/g</span><span class="p">,</span><span class="nx">ha</span><span class="o">=</span><span class="sr">/\s+/</span><span class="p">,</span><span class="nx">Sa</span><span class="o">=</span><span class="sr">/\r/g</span><span class="p">,</span><span class="nx">Ta</span><span class="o">=</span><span class="sr">/^(?:href|src|style)$/</span><span class="p">,</span><span class="nx">Ua</span><span class="o">=</span><span class="sr">/^(?:button|input)$/i</span><span class="p">,</span><span class="nx">Va</span><span class="o">=</span><span class="sr">/^(?:button|input|object|select|textarea)$/i</span><span class="p">,</span><span class="nx">Wa</span><span class="o">=</span><span class="sr">/^a(?:rea)?$/i</span><span class="p">,</span><span class="nx">ta</span><span class="o">=</span><span class="sr">/^(?:radio|checkbox)$/i</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">props</span><span class="o">=</span><span class="p">{</span><span class="s2">&quot;for&quot;</span><span class="o">:</span><span class="s2">&quot;htmlFor&quot;</span><span class="p">,</span><span class="s2">&quot;class&quot;</span><span class="o">:</span><span class="s2">&quot;className&quot;</span><span class="p">,</span><span class="nx">readonly</span><span class="o">:</span><span class="s2">&quot;readOnly&quot;</span><span class="p">,</span><span class="nx">maxlength</span><span class="o">:</span><span class="s2">&quot;maxLength&quot;</span><span class="p">,</span><span class="nx">cellspacing</span><span class="o">:</span><span class="s2">&quot;cellSpacing&quot;</span><span class="p">,</span><span class="nx">rowspan</span><span class="o">:</span><span class="s2">&quot;rowSpan&quot;</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L48" class="blob-line-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-line-code js-file-line"><span class="nx">colspan</span><span class="o">:</span><span class="s2">&quot;colSpan&quot;</span><span class="p">,</span><span class="nx">tabindex</span><span class="o">:</span><span class="s2">&quot;tabIndex&quot;</span><span class="p">,</span><span class="nx">usemap</span><span class="o">:</span><span class="s2">&quot;useMap&quot;</span><span class="p">,</span><span class="nx">frameborder</span><span class="o">:</span><span class="s2">&quot;frameBorder&quot;</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">attr</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">access</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="kc">true</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">)},</span><span class="nx">removeAttr</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">(</span><span class="nx">a</span><span class="p">)})},</span><span class="nx">addClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">r</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">x</span><span class="p">,</span><span class="nx">r</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">)))});</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="nx">ha</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span></td>
      </tr>
      <tr>
        <td id="L49" class="blob-line-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-line-code js-file-line"><span class="mi">1</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">className</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">className</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">className</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">o</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span><span class="nx">l</span><span class="o">+=</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">[</span><span class="nx">k</span><span class="p">];</span><span class="nx">f</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="nx">l</span><span class="p">)}</span><span class="k">else</span> <span class="nx">f</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">a</span><span class="p">}</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">removeClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">o</span><span class="p">){</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">x</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">x</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">)))});</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="nx">B</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="nx">ha</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">className</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">className</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">sa</span><span class="p">,</span><span class="s2">&quot; &quot;</span><span class="p">),</span></td>
      </tr>
      <tr>
        <td id="L50" class="blob-line-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-line-code js-file-line"><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">,</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="nx">h</span><span class="p">)}</span><span class="k">else</span> <span class="nx">f</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">}</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">toggleClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">===</span><span class="s2">&quot;boolean&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">toggleClass</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">),</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="p">)});</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="nx">ha</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="nx">h</span><span class="o">++</span><span class="p">];){</span><span class="nx">k</span><span class="o">=</span><span class="nx">e</span><span class="o">?</span><span class="nx">k</span><span class="o">:!</span><span class="nx">l</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="nx">l</span><span class="p">[</span><span class="nx">k</span><span class="o">?</span><span class="s2">&quot;addClass&quot;</span><span class="o">:</span><span class="s2">&quot;removeClass&quot;</span><span class="p">](</span><span class="nx">f</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;undefined&quot;</span><span class="o">||</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;boolean&quot;</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">className</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="k">this</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L51" class="blob-line-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-line-code js-file-line"><span class="s2">&quot;__className__&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">className</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">className</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="kc">false</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;__className__&quot;</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">}})},</span><span class="nx">hasClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">((</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">className</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">sa</span><span class="p">,</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">)</span><span class="k">return</span> <span class="kc">true</span><span class="p">;</span><span class="k">return</span> <span class="kc">false</span><span class="p">},</span><span class="nx">val</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;option&quot;</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">attributes</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="nx">d</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">specified</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">text</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;select&quot;</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">selectedIndex</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">===</span><span class="s2">&quot;select-one&quot;</span><span class="p">;</span></td>
      </tr>
      <tr>
        <td id="L52" class="blob-line-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-line-code js-file-line"><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="o">?</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">selected</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">optDisabled</span><span class="o">?!</span><span class="nx">l</span><span class="p">.</span><span class="nx">disabled</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;disabled&quot;</span><span class="p">)</span><span class="o">===</span><span class="kc">null</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">l</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">disabled</span><span class="o">||!</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">,</span><span class="s2">&quot;optgroup&quot;</span><span class="p">))){</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">l</span><span class="p">).</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">)}}</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">ta</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">checkOn</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">)</span><span class="o">===</span><span class="kc">null</span><span class="o">?</span><span class="s2">&quot;on&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="k">return</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">Sa</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="k">return</span> <span class="nx">B</span><span class="p">}</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">o</span><span class="p">){</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="nx">r</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L53" class="blob-line-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-line-code js-file-line"><span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">x</span><span class="p">.</span><span class="nx">val</span><span class="p">());</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="o">==</span><span class="kc">null</span><span class="p">)</span><span class="nx">r</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">r</span><span class="o">===</span><span class="s2">&quot;number&quot;</span><span class="p">)</span><span class="nx">r</span><span class="o">+=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">r</span><span class="p">))</span><span class="nx">r</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">C</span><span class="p">){</span><span class="k">return</span> <span class="nx">C</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="nx">C</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">});</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">r</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">ta</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">checked</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">inArray</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">val</span><span class="p">(),</span><span class="nx">r</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;select&quot;</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">makeArray</span><span class="p">(</span><span class="nx">r</span><span class="p">);</span><span class="nx">c</span><span class="p">(</span><span class="s2">&quot;option&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">selected</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">inArray</span><span class="p">(</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">val</span><span class="p">(),</span><span class="nx">A</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">});</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">A</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">selectedIndex</span><span class="o">=-</span><span class="mi">1</span><span class="p">}</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="nx">r</span><span class="p">}})}});</span><span class="nx">c</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">attrFn</span><span class="o">:</span><span class="p">{</span><span class="nx">val</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">css</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">html</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">text</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">data</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">offset</span><span class="o">:</span><span class="kc">true</span><span class="p">},</span></td>
      </tr>
      <tr>
        <td id="L54" class="blob-line-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-line-code js-file-line"><span class="nx">attr</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">3</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">8</span><span class="p">)</span><span class="k">return</span> <span class="nx">B</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">c</span><span class="p">.</span><span class="nx">attrFn</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">)[</span><span class="nx">b</span><span class="p">](</span><span class="nx">d</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">!==</span><span class="mi">1</span><span class="o">||!</span><span class="nx">c</span><span class="p">.</span><span class="nx">isXMLDoc</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="o">!==</span><span class="nx">B</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">props</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">||</span><span class="nx">b</span><span class="p">;</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">Ta</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">((</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="o">||</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">!==</span><span class="nx">B</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&amp;&amp;!</span><span class="nx">h</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;type&quot;</span><span class="o">&amp;&amp;</span><span class="nx">Ua</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;type property can&#39;t be changed&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">===</span><span class="kc">null</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">else</span> <span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;form&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getAttributeNode</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">getAttributeNode</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">nodeValue</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;tabIndex&quot;</span><span class="p">)</span><span class="k">return</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getAttributeNode</span><span class="p">(</span><span class="s2">&quot;tabIndex&quot;</span><span class="p">))</span><span class="o">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L55" class="blob-line-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-line-code js-file-line"><span class="nx">b</span><span class="p">.</span><span class="nx">specified</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="o">:</span><span class="nx">Va</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">)</span><span class="o">||</span><span class="nx">Wa</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">href</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">B</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">style</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;style&quot;</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">cssText</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">cssText</span><span class="p">}</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">attributes</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasAttribute</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasAttribute</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span> <span class="nx">B</span><span class="p">;</span><span class="nx">a</span><span class="o">=!</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">hrefNormalized</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="o">===</span><span class="kc">null</span><span class="o">?</span><span class="nx">B</span><span class="o">:</span><span class="nx">a</span><span class="p">}});</span><span class="kd">var</span> <span class="nx">X</span><span class="o">=</span><span class="sr">/\.(.*)$/</span><span class="p">,</span><span class="nx">ia</span><span class="o">=</span><span class="sr">/^(?:textarea|input|select)$/i</span><span class="p">,</span><span class="nx">La</span><span class="o">=</span><span class="sr">/\./g</span><span class="p">,</span><span class="nx">Ma</span><span class="o">=</span><span class="sr">/ /g</span><span class="p">,</span><span class="nx">Xa</span><span class="o">=</span><span class="sr">/[^\w\s.|`]/g</span><span class="p">,</span><span class="nx">Ya</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">Xa</span><span class="p">,</span><span class="s2">&quot;\\$&amp;&quot;</span><span class="p">)},</span><span class="nx">ua</span><span class="o">=</span><span class="p">{</span><span class="nx">focusin</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">focusout</span><span class="o">:</span><span class="mi">0</span><span class="p">};</span></td>
      </tr>
      <tr>
        <td id="L56" class="blob-line-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-line-code js-file-line"><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="o">=</span><span class="p">{</span><span class="nx">add</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">3</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">8</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isWindow</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">!==</span><span class="nx">E</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">frameElement</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nx">E</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">===</span><span class="kc">false</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">U</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">handler</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">handler</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">.</span><span class="nx">guid</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">guid</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">guid</span><span class="o">++</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">?</span><span class="s2">&quot;events&quot;</span><span class="o">:</span><span class="s2">&quot;__events__&quot;</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">l</span><span class="p">],</span><span class="nx">o</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">handle</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">k</span><span class="o">===</span><span class="s2">&quot;function&quot;</span><span class="p">){</span><span class="nx">o</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">handle</span><span class="p">;</span><span class="nx">k</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">events</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">k</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">||</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="o">=</span><span class="kd">function</span><span class="p">(){});</span><span class="nx">h</span><span class="p">.</span><span class="nx">events</span><span class="o">=</span><span class="nx">k</span><span class="o">=</span><span class="p">{}}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">o</span><span class="p">)</span><span class="nx">h</span><span class="p">.</span><span class="nx">handle</span><span class="o">=</span><span class="nx">o</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">c</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">triggered</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">handle</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">elem</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L57" class="blob-line-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-line-code js-file-line"><span class="nx">arguments</span><span class="p">)</span><span class="o">:</span><span class="nx">B</span><span class="p">};</span><span class="nx">o</span><span class="p">.</span><span class="nx">elem</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">r</span><span class="p">;</span><span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">x</span><span class="o">++</span><span class="p">];){</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="p">{</span><span class="nx">handler</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">data</span><span class="o">:</span><span class="nx">e</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">){</span><span class="nx">r</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">);</span><span class="nx">l</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span><span class="nx">h</span><span class="p">.</span><span class="nx">namespace</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">sort</span><span class="p">().</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">r</span><span class="o">=</span><span class="p">[];</span><span class="nx">h</span><span class="p">.</span><span class="nx">namespace</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">}</span><span class="nx">h</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">l</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">h</span><span class="p">.</span><span class="nx">guid</span><span class="p">)</span><span class="nx">h</span><span class="p">.</span><span class="nx">guid</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">guid</span><span class="p">;</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">l</span><span class="p">],</span><span class="nx">C</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">special</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">||</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">A</span><span class="p">){</span><span class="nx">A</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">C</span><span class="p">.</span><span class="nx">setup</span><span class="o">||</span><span class="nx">C</span><span class="p">.</span><span class="nx">setup</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">o</span><span class="p">)</span><span class="o">===</span><span class="kc">false</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="kc">false</span><span class="p">);</span><span class="k">else</span> <span class="nx">a</span><span class="p">.</span><span class="nx">attachEvent</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">,</span><span class="nx">o</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">.</span><span class="nx">add</span><span class="p">){</span><span class="nx">C</span><span class="p">.</span><span class="nx">add</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">h</span><span class="p">.</span><span class="nx">handler</span><span class="p">.</span><span class="nx">guid</span><span class="p">)</span><span class="nx">h</span><span class="p">.</span><span class="nx">handler</span><span class="p">.</span><span class="nx">guid</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L58" class="blob-line-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-line-code js-file-line"><span class="nx">d</span><span class="p">.</span><span class="nx">guid</span><span class="p">}</span><span class="nx">A</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">global</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">=</span><span class="kc">true</span><span class="p">}</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">}}},</span><span class="nx">global</span><span class="o">:</span><span class="p">{},</span><span class="nx">remove</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">3</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">8</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">===</span><span class="kc">false</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">U</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">x</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">C</span><span class="p">,</span><span class="nx">J</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">?</span><span class="s2">&quot;events&quot;</span><span class="o">:</span><span class="s2">&quot;__events__&quot;</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">I</span><span class="o">=</span><span class="nx">w</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">[</span><span class="nx">J</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">I</span><span class="o">===</span><span class="s2">&quot;function&quot;</span><span class="p">){</span><span class="nx">w</span><span class="o">=</span><span class="nx">I</span><span class="p">;</span><span class="nx">I</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">events</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">handler</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="o">||</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;.&quot;</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">I</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="o">+</span><span class="nx">b</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">l</span><span class="o">++</span><span class="p">];){</span><span class="nx">r</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="nx">k</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">o</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">k</span><span class="p">){</span><span class="nx">o</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span><span class="nx">x</span><span class="o">=</span><span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;(^|\\.)&quot;</span><span class="o">+</span></td>
      </tr>
      <tr>
        <td id="L59" class="blob-line-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-line-code js-file-line"><span class="nx">c</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">sort</span><span class="p">(),</span><span class="nx">Ya</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;\\.(?:.*\\.)?&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;(\\.|$)&quot;</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="o">=</span><span class="nx">I</span><span class="p">[</span><span class="nx">f</span><span class="p">])</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="nx">r</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">special</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">||</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">A</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">){</span><span class="nx">C</span><span class="o">=</span><span class="nx">A</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">guid</span><span class="o">===</span><span class="nx">C</span><span class="p">.</span><span class="nx">guid</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="o">||</span><span class="nx">x</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">C</span><span class="p">.</span><span class="nx">namespace</span><span class="p">)){</span><span class="nx">e</span><span class="o">==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="nx">A</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">h</span><span class="o">--</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="nx">r</span><span class="p">.</span><span class="nx">remove</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">.</span><span class="nx">remove</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">C</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">!=</span><span class="kc">null</span><span class="p">)</span><span class="k">break</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="o">||</span><span class="nx">e</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="nx">A</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">1</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">r</span><span class="p">.</span><span class="nx">teardown</span><span class="o">||</span><span class="nx">r</span><span class="p">.</span><span class="nx">teardown</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">o</span><span class="p">)</span><span class="o">===</span><span class="kc">false</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeEvent</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">w</span><span class="p">.</span><span class="nx">handle</span><span class="p">);</span><span class="k">delete</span> <span class="nx">I</span><span class="p">[</span><span class="nx">f</span><span class="p">]}}</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">A</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">){</span><span class="nx">C</span><span class="o">=</span><span class="nx">A</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="o">||</span><span class="nx">x</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">C</span><span class="p">.</span><span class="nx">namespace</span><span class="p">)){</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">C</span><span class="p">.</span><span class="nx">handler</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="nx">A</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">h</span><span class="o">--</span><span class="p">,</span><span class="mi">1</span><span class="p">)}}}</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isEmptyObject</span><span class="p">(</span><span class="nx">I</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L60" class="blob-line-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-line-code js-file-line"><span class="nx">w</span><span class="p">.</span><span class="nx">handle</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">elem</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">delete</span> <span class="nx">w</span><span class="p">.</span><span class="nx">events</span><span class="p">;</span><span class="k">delete</span> <span class="nx">w</span><span class="p">.</span><span class="nx">handle</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">w</span><span class="o">===</span><span class="s2">&quot;function&quot;</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeData</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">J</span><span class="p">);</span><span class="k">else</span> <span class="nx">c</span><span class="p">.</span><span class="nx">isEmptyObject</span><span class="p">(</span><span class="nx">w</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeData</span><span class="p">(</span><span class="nx">a</span><span class="p">)}}}}},</span><span class="nx">trigger</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">expando</span><span class="p">]</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">Event</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">Event</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;!&quot;</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">exclusive</span><span class="o">=</span><span class="kc">true</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">global</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">cache</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">handle</span><span class="p">.</span><span class="nx">elem</span><span class="p">)})}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">3</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span></td>
      </tr>
      <tr>
        <td id="L61" class="blob-line-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-line-code js-file-line"><span class="mi">8</span><span class="p">)</span><span class="k">return</span> <span class="nx">B</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">result</span><span class="o">=</span><span class="nx">B</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">makeArray</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentTarget</span><span class="o">=</span><span class="nx">d</span><span class="p">;(</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;handle&quot;</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;__events__&quot;</span><span class="p">)</span><span class="o">||</span><span class="p">{}).</span><span class="nx">handle</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">noData</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()]))</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">[</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">].</span><span class="nx">apply</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">===</span><span class="kc">false</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">result</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">()}}</span><span class="k">catch</span><span class="p">(</span><span class="nx">h</span><span class="p">){}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">isPropagationStopped</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">isDefaultPrevented</span><span class="p">()){</span><span class="kd">var</span> <span class="nx">l</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">;</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">X</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;a&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="o">===</span></td>
      </tr>
      <tr>
        <td id="L62" class="blob-line-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-line-code js-file-line"><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">special</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">||</span><span class="p">{};</span><span class="k">if</span><span class="p">((</span><span class="o">!</span><span class="nx">x</span><span class="p">.</span><span class="nx">_default</span><span class="o">||</span><span class="nx">x</span><span class="p">.</span><span class="nx">_default</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">===</span><span class="kc">false</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">o</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">noData</span><span class="p">[</span><span class="nx">e</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()])){</span><span class="k">try</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">k</span><span class="p">]){</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">k</span><span class="p">])</span><span class="nx">e</span><span class="p">[</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">k</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">triggered</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">e</span><span class="p">[</span><span class="nx">k</span><span class="p">]()}}</span><span class="k">catch</span><span class="p">(</span><span class="nx">r</span><span class="p">){}</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span><span class="nx">e</span><span class="p">[</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">k</span><span class="p">]</span><span class="o">=</span><span class="nx">l</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">triggered</span><span class="o">=</span><span class="kc">false</span><span class="p">}}},</span><span class="nx">handle</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">makeArray</span><span class="p">(</span><span class="nx">arguments</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">fix</span><span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="nx">E</span><span class="p">.</span><span class="nx">event</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentTarget</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">exclusive</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">sort</span><span class="p">();</span><span class="nx">e</span><span class="o">=</span><span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;(^|\\.)&quot;</span><span class="o">+</span></td>
      </tr>
      <tr>
        <td id="L63" class="blob-line-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-line-code js-file-line"><span class="nx">d</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;\\.(?:.*\\.)?&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;(\\.|$)&quot;</span><span class="p">)}</span><span class="nx">a</span><span class="p">.</span><span class="nx">namespace</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">namespace</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">?</span><span class="s2">&quot;events&quot;</span><span class="o">:</span><span class="s2">&quot;__events__&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">f</span><span class="o">===</span><span class="s2">&quot;function&quot;</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">events</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="nx">f</span><span class="o">||</span><span class="p">{})[</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">namespace</span><span class="p">)){</span><span class="nx">a</span><span class="p">.</span><span class="nx">handler</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">handler</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">handleObj</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="nx">k</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">handler</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="o">!==</span><span class="nx">B</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">result</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="o">===</span><span class="kc">false</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">()}}</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">isImmediatePropagationStopped</span><span class="p">())</span><span class="k">break</span><span class="p">}}}</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">result</span><span class="p">},</span><span class="nx">props</span><span class="o">:</span><span class="s2">&quot;altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span></td>
      </tr>
      <tr>
        <td id="L64" class="blob-line-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-line-code js-file-line"><span class="nx">fix</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">expando</span><span class="p">])</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">Event</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="nx">d</span><span class="p">;){</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">[</span><span class="o">--</span><span class="nx">d</span><span class="p">];</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">srcElement</span><span class="o">||</span><span class="nx">t</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">3</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">fromElement</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">fromElement</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">toElement</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">fromElement</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageX</span><span class="o">==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">clientX</span><span class="o">!=</span><span class="kc">null</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">body</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageX</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">clientX</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="o">||</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">clientLeft</span><span class="o">||</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">clientLeft</span><span class="o">||</span><span class="mi">0</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageY</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">clientY</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">||</span></td>
      </tr>
      <tr>
        <td id="L65" class="blob-line-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-line-code js-file-line"><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">clientTop</span><span class="o">||</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">clientTop</span><span class="o">||</span><span class="mi">0</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charCode</span><span class="o">!=</span><span class="kc">null</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">!=</span><span class="kc">null</span><span class="p">))</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">charCode</span><span class="o">!=</span><span class="kc">null</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">charCode</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">metaKey</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">ctrlKey</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">metaKey</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">ctrlKey</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">button</span><span class="o">!==</span><span class="nx">B</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">button</span><span class="o">&amp;</span><span class="mi">1</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">button</span><span class="o">&amp;</span><span class="mi">2</span><span class="o">?</span><span class="mi">3</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">button</span><span class="o">&amp;</span><span class="mi">4</span><span class="o">?</span><span class="mi">2</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">guid</span><span class="o">:</span><span class="mi">1</span><span class="nx">E8</span><span class="p">,</span><span class="nx">proxy</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">proxy</span><span class="p">,</span><span class="nx">special</span><span class="o">:</span><span class="p">{</span><span class="nx">ready</span><span class="o">:</span><span class="p">{</span><span class="nx">setup</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">bindReady</span><span class="p">,</span><span class="nx">teardown</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">noop</span><span class="p">},</span><span class="nx">live</span><span class="o">:</span><span class="p">{</span><span class="nx">add</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">Y</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">origType</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">selector</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">a</span><span class="p">,{</span><span class="nx">handler</span><span class="o">:</span><span class="nx">Ka</span><span class="p">,</span><span class="nx">guid</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">handler</span><span class="p">.</span><span class="nx">guid</span><span class="p">}))},</span><span class="nx">remove</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="k">this</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L66" class="blob-line-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-line-code js-file-line"><span class="nx">Y</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">origType</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">selector</span><span class="p">),</span><span class="nx">a</span><span class="p">)}},</span><span class="nx">beforeunload</span><span class="o">:</span><span class="p">{</span><span class="nx">setup</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isWindow</span><span class="p">(</span><span class="k">this</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">onbeforeunload</span><span class="o">=</span><span class="nx">d</span><span class="p">},</span><span class="nx">teardown</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">onbeforeunload</span><span class="o">===</span><span class="nx">b</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">onbeforeunload</span><span class="o">=</span><span class="kc">null</span><span class="p">}}}};</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeEvent</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="kc">false</span><span class="p">)}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">detachEvent</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">)};</span><span class="nx">c</span><span class="p">.</span><span class="nx">Event</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">)</span><span class="k">return</span> <span class="k">new</span> <span class="nx">c</span><span class="p">.</span><span class="nx">Event</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">originalEvent</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">}</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">timeStamp</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L67" class="blob-line-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-line-code js-file-line"><span class="nx">c</span><span class="p">.</span><span class="nx">now</span><span class="p">();</span><span class="k">this</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">expando</span><span class="p">]</span><span class="o">=</span><span class="kc">true</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">Event</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">preventDefault</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">isDefaultPrevented</span><span class="o">=</span><span class="nx">ca</span><span class="p">;</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">originalEvent</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="k">else</span> <span class="nx">a</span><span class="p">.</span><span class="nx">returnValue</span><span class="o">=</span><span class="kc">false</span><span class="p">},</span><span class="nx">stopPropagation</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">isPropagationStopped</span><span class="o">=</span><span class="nx">ca</span><span class="p">;</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">originalEvent</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">cancelBubble</span><span class="o">=</span><span class="kc">true</span><span class="p">}},</span><span class="nx">stopImmediatePropagation</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">isImmediatePropagationStopped</span><span class="o">=</span><span class="nx">ca</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">()},</span><span class="nx">isDefaultPrevented</span><span class="o">:</span><span class="nx">U</span><span class="p">,</span><span class="nx">isPropagationStopped</span><span class="o">:</span><span class="nx">U</span><span class="p">,</span><span class="nx">isImmediatePropagationStopped</span><span class="o">:</span><span class="nx">U</span><span class="p">};</span></td>
      </tr>
      <tr>
        <td id="L68" class="blob-line-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-line-code js-file-line"><span class="kd">var</span> <span class="nx">va</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="k">for</span><span class="p">(;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">!==</span><span class="k">this</span><span class="p">;)</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">!==</span><span class="k">this</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">handle</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}}</span><span class="k">catch</span><span class="p">(</span><span class="nx">d</span><span class="p">){}},</span><span class="nx">wa</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">handle</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)};</span><span class="nx">c</span><span class="p">.</span><span class="nx">each</span><span class="p">({</span><span class="nx">mouseenter</span><span class="o">:</span><span class="s2">&quot;mouseover&quot;</span><span class="p">,</span><span class="nx">mouseleave</span><span class="o">:</span><span class="s2">&quot;mouseout&quot;</span><span class="p">},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">special</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">setup</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">selector</span><span class="o">?</span><span class="nx">wa</span><span class="o">:</span><span class="nx">va</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">teardown</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">selector</span><span class="o">?</span><span class="nx">wa</span><span class="o">:</span><span class="nx">va</span><span class="p">)}}});</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">submitBubbles</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">special</span><span class="p">.</span><span class="nx">submit</span><span class="o">=</span><span class="p">{</span><span class="nx">setup</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">!==</span></td>
      </tr>
      <tr>
        <td id="L69" class="blob-line-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-line-code js-file-line"><span class="s2">&quot;form&quot;</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;click.specialSubmit&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">;</span><span class="k">if</span><span class="p">((</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;submit&quot;</span><span class="o">||</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;image&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">closest</span><span class="p">(</span><span class="s2">&quot;form&quot;</span><span class="p">).</span><span class="nx">length</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">liveFired</span><span class="o">=</span><span class="nx">B</span><span class="p">;</span><span class="k">return</span> <span class="nx">la</span><span class="p">(</span><span class="s2">&quot;submit&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}});</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;keypress.specialSubmit&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">;</span><span class="k">if</span><span class="p">((</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;text&quot;</span><span class="o">||</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;password&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">closest</span><span class="p">(</span><span class="s2">&quot;form&quot;</span><span class="p">).</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">===</span><span class="mi">13</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">liveFired</span><span class="o">=</span><span class="nx">B</span><span class="p">;</span><span class="k">return</span> <span class="nx">la</span><span class="p">(</span><span class="s2">&quot;submit&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}})}</span><span class="k">else</span> <span class="k">return</span> <span class="kc">false</span><span class="p">},</span><span class="nx">teardown</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;.specialSubmit&quot;</span><span class="p">)}};</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">changeBubbles</span><span class="p">){</span><span class="kd">var</span> <span class="nx">V</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L70" class="blob-line-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-line-code js-file-line"><span class="nx">xa</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;radio&quot;</span><span class="o">||</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;checkbox&quot;</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">checked</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;select-multiple&quot;</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">selectedIndex</span><span class="o">&gt;-</span><span class="mi">1</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">selected</span><span class="p">}).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">===</span><span class="s2">&quot;select&quot;</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">selectedIndex</span><span class="p">;</span><span class="k">return</span> <span class="nx">d</span><span class="p">},</span><span class="nx">Z</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="o">!</span><span class="nx">ia</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">)</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">readOnly</span><span class="p">)){</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;_change_data&quot;</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="nx">xa</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">!==</span><span class="s2">&quot;focusout&quot;</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">!==</span><span class="s2">&quot;radio&quot;</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;_change_data&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">e</span><span class="o">===</span><span class="nx">B</span><span class="o">||</span><span class="nx">f</span><span class="o">===</span><span class="nx">e</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">!=</span><span class="kc">null</span><span class="o">||</span><span class="nx">f</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;change&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">liveFired</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L71" class="blob-line-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-line-code js-file-line"><span class="nx">B</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">)}}};</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">special</span><span class="p">.</span><span class="nx">change</span><span class="o">=</span><span class="p">{</span><span class="nx">filters</span><span class="o">:</span><span class="p">{</span><span class="nx">focusout</span><span class="o">:</span><span class="nx">Z</span><span class="p">,</span><span class="nx">beforedeactivate</span><span class="o">:</span><span class="nx">Z</span><span class="p">,</span><span class="nx">click</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;radio&quot;</span><span class="o">||</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;checkbox&quot;</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">===</span><span class="s2">&quot;select&quot;</span><span class="p">)</span><span class="k">return</span> <span class="nx">Z</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">keydown</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">===</span><span class="mi">13</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">!==</span><span class="s2">&quot;textarea&quot;</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">===</span><span class="mi">32</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;checkbox&quot;</span><span class="o">||</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;radio&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;select-multiple&quot;</span><span class="p">)</span><span class="k">return</span> <span class="nx">Z</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">beforeactivate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;_change_data&quot;</span><span class="p">,</span><span class="nx">xa</span><span class="p">(</span><span class="nx">a</span><span class="p">))}},</span><span class="nx">setup</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">===</span></td>
      </tr>
      <tr>
        <td id="L72" class="blob-line-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-line-code js-file-line"><span class="s2">&quot;file&quot;</span><span class="p">)</span><span class="k">return</span> <span class="kc">false</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span> <span class="k">in</span> <span class="nx">V</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;.specialChange&quot;</span><span class="p">,</span><span class="nx">V</span><span class="p">[</span><span class="nx">a</span><span class="p">]);</span><span class="k">return</span> <span class="nx">ia</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">)},</span><span class="nx">teardown</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;.specialChange&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">ia</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">)}};</span><span class="nx">V</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">special</span><span class="p">.</span><span class="nx">change</span><span class="p">.</span><span class="nx">filters</span><span class="p">;</span><span class="nx">V</span><span class="p">.</span><span class="nx">focus</span><span class="o">=</span><span class="nx">V</span><span class="p">.</span><span class="nx">beforeactivate</span><span class="p">}</span><span class="nx">t</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">each</span><span class="p">({</span><span class="nx">focus</span><span class="o">:</span><span class="s2">&quot;focusin&quot;</span><span class="p">,</span><span class="nx">blur</span><span class="o">:</span><span class="s2">&quot;focusout&quot;</span><span class="p">},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">fix</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">target</span><span class="p">)}</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">special</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">setup</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">ua</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">++===</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="kc">true</span><span class="p">)},</span><span class="nx">teardown</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="o">--</span><span class="nx">ua</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">===</span></td>
      </tr>
      <tr>
        <td id="L73" class="blob-line-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-line-code js-file-line"><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="kc">true</span><span class="p">)}}});</span><span class="nx">c</span><span class="p">.</span><span class="nx">each</span><span class="p">([</span><span class="s2">&quot;bind&quot;</span><span class="p">,</span><span class="s2">&quot;one&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">d</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span> <span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="k">this</span><span class="p">[</span><span class="nx">b</span><span class="p">](</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">h</span><span class="p">],</span><span class="nx">f</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">||</span><span class="nx">e</span><span class="o">===</span><span class="kc">false</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">B</span><span class="p">}</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;one&quot;</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">proxy</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">o</span><span class="p">){</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">unbind</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">l</span><span class="p">);</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)})</span><span class="o">:</span><span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;unload&quot;</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">!==</span><span class="s2">&quot;one&quot;</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">one</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">h</span><span class="p">],</span><span class="nx">d</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">e</span><span class="p">)}</span><span class="k">return</span> <span class="k">this</span><span class="p">}});</span><span class="nx">c</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">unbind</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L74" class="blob-line-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-line-code js-file-line"><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="k">else</span><span class="p">{</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">delegate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">live</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">undelegate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;live&quot;</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">die</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">trigger</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">)})},</span><span class="nx">triggerHandler</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">Event</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">d</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">result</span><span class="p">}},</span><span class="nx">toggle</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">arguments</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L75" class="blob-line-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-line-code js-file-line"><span class="mi">1</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;)</span><span class="nx">c</span><span class="p">.</span><span class="nx">proxy</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="o">++</span><span class="p">]);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">click</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">proxy</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;lastToggle&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">guid</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">%</span><span class="nx">d</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;lastToggle&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">guid</span><span class="p">,</span><span class="nx">f</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="k">return</span> <span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)</span><span class="o">||</span><span class="kc">false</span><span class="p">}))},</span><span class="nx">hover</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">mouseenter</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">mouseleave</span><span class="p">(</span><span class="nx">b</span><span class="o">||</span><span class="nx">a</span><span class="p">)}});</span><span class="kd">var</span> <span class="nx">ya</span><span class="o">=</span><span class="p">{</span><span class="nx">focus</span><span class="o">:</span><span class="s2">&quot;focusin&quot;</span><span class="p">,</span><span class="nx">blur</span><span class="o">:</span><span class="s2">&quot;focusout&quot;</span><span class="p">,</span><span class="nx">mouseenter</span><span class="o">:</span><span class="s2">&quot;mouseover&quot;</span><span class="p">,</span><span class="nx">mouseleave</span><span class="o">:</span><span class="s2">&quot;mouseout&quot;</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">each</span><span class="p">([</span><span class="s2">&quot;live&quot;</span><span class="p">,</span><span class="s2">&quot;die&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">x</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">h</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">selector</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="o">?</span><span class="k">this</span><span class="o">:</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">context</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">d</span><span class="o">===</span></td>
      </tr>
      <tr>
        <td id="L76" class="blob-line-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-line-code js-file-line"><span class="s2">&quot;object&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">d</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">l</span> <span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="nx">h</span><span class="p">[</span><span class="nx">b</span><span class="p">](</span><span class="nx">l</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">l</span><span class="p">],</span><span class="nx">r</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">e</span><span class="p">)){</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">B</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="nx">d</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);(</span><span class="nx">l</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">k</span><span class="o">++</span><span class="p">])</span><span class="o">!=</span><span class="kc">null</span><span class="p">;){</span><span class="nx">o</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">l</span><span class="p">);</span><span class="nx">x</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">){</span><span class="nx">x</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">l</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">X</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">===</span><span class="s2">&quot;hover&quot;</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;mouseenter&quot;</span><span class="o">+</span><span class="nx">x</span><span class="p">,</span><span class="s2">&quot;mouseleave&quot;</span><span class="o">+</span><span class="nx">x</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="nx">o</span><span class="o">=</span><span class="nx">l</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">===</span><span class="s2">&quot;focus&quot;</span><span class="o">||</span><span class="nx">l</span><span class="o">===</span><span class="s2">&quot;blur&quot;</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">ya</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">+</span><span class="nx">x</span><span class="p">);</span><span class="nx">l</span><span class="o">+=</span><span class="nx">x</span><span class="p">}</span><span class="k">else</span> <span class="nx">l</span><span class="o">=</span><span class="p">(</span><span class="nx">ya</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">||</span><span class="nx">l</span><span class="p">)</span><span class="o">+</span><span class="nx">x</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;live&quot;</span><span class="p">){</span><span class="nx">x</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">x</span><span class="o">&lt;</span><span class="nx">A</span><span class="p">;</span><span class="nx">x</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="nx">x</span><span class="p">],</span><span class="s2">&quot;live.&quot;</span><span class="o">+</span><span class="nx">Y</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">r</span><span class="p">),{</span><span class="nx">data</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">selector</span><span class="o">:</span><span class="nx">r</span><span class="p">,</span><span class="nx">handler</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">origType</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">origHandler</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">preType</span><span class="o">:</span><span class="nx">o</span><span class="p">})}</span><span class="k">else</span> <span class="nx">h</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;live.&quot;</span><span class="o">+</span><span class="nx">Y</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">r</span><span class="p">),</span><span class="nx">f</span><span class="p">)}}</span><span class="k">return</span> <span class="k">this</span><span class="p">}});</span></td>
      </tr>
      <tr>
        <td id="L77" class="blob-line-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-line-code js-file-line"><span class="nx">c</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="s2">&quot;blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">==</span><span class="kc">null</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">return</span> <span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">b</span><span class="p">)};</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">attrFn</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">attrFn</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="kc">true</span><span class="p">});</span><span class="nx">E</span><span class="p">.</span><span class="nx">attachEvent</span><span class="o">&amp;&amp;!</span><span class="nx">E</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">(</span><span class="nx">E</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;unload&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span> <span class="k">in</span> <span class="nx">c</span><span class="p">.</span><span class="nx">cache</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">cache</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">handle</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">cache</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">handle</span><span class="p">.</span><span class="nx">elem</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">b</span><span class="p">){}});</span></td>
      </tr>
      <tr>
        <td id="L78" class="blob-line-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-line-code js-file-line"><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">q</span><span class="p">){</span><span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">u</span><span class="p">;</span><span class="nx">p</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">y</span><span class="o">=</span><span class="nx">m</span><span class="p">[</span><span class="nx">p</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">){</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">y</span><span class="o">=</span><span class="nx">y</span><span class="p">[</span><span class="nx">g</span><span class="p">];</span><span class="nx">y</span><span class="p">;){</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">sizcache</span><span class="o">===</span><span class="nx">n</span><span class="p">){</span><span class="nx">F</span><span class="o">=</span><span class="nx">m</span><span class="p">[</span><span class="nx">y</span><span class="p">.</span><span class="nx">sizset</span><span class="p">];</span><span class="k">break</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;!</span><span class="nx">q</span><span class="p">){</span><span class="nx">y</span><span class="p">.</span><span class="nx">sizcache</span><span class="o">=</span><span class="nx">n</span><span class="p">;</span><span class="nx">y</span><span class="p">.</span><span class="nx">sizset</span><span class="o">=</span><span class="nx">p</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">===</span><span class="nx">i</span><span class="p">){</span><span class="nx">F</span><span class="o">=</span><span class="nx">y</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="nx">y</span><span class="o">=</span><span class="nx">y</span><span class="p">[</span><span class="nx">g</span><span class="p">]}</span><span class="nx">m</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">=</span><span class="nx">F</span><span class="p">}}}</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">q</span><span class="p">){</span><span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">u</span><span class="p">;</span><span class="nx">p</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">y</span><span class="o">=</span><span class="nx">m</span><span class="p">[</span><span class="nx">p</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">){</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">y</span><span class="o">=</span><span class="nx">y</span><span class="p">[</span><span class="nx">g</span><span class="p">];</span><span class="nx">y</span><span class="p">;){</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">sizcache</span><span class="o">===</span><span class="nx">n</span><span class="p">){</span><span class="nx">F</span><span class="o">=</span><span class="nx">m</span><span class="p">[</span><span class="nx">y</span><span class="p">.</span><span class="nx">sizset</span><span class="p">];</span><span class="k">break</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">q</span><span class="p">){</span><span class="nx">y</span><span class="p">.</span><span class="nx">sizcache</span><span class="o">=</span><span class="nx">n</span><span class="p">;</span><span class="nx">y</span><span class="p">.</span><span class="nx">sizset</span><span class="o">=</span><span class="nx">p</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">i</span><span class="o">!==</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="o">===</span><span class="nx">i</span><span class="p">){</span><span class="nx">F</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">break</span><span class="p">}}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L79" class="blob-line-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-line-code js-file-line"><span class="p">[</span><span class="nx">y</span><span class="p">]).</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">F</span><span class="o">=</span><span class="nx">y</span><span class="p">;</span><span class="k">break</span><span class="p">}}</span><span class="nx">y</span><span class="o">=</span><span class="nx">y</span><span class="p">[</span><span class="nx">g</span><span class="p">]}</span><span class="nx">m</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">=</span><span class="nx">F</span><span class="p">}}}</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="sr">/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|[&#39;&quot;][^&#39;&quot;]*[&#39;&quot;]|[^\[\]&#39;&quot;]+)+\]|\\.|[^ &gt;+~,(\[\\]+)+|[&gt;+~])(\s*,\s*)?((?:.|\r|\n)*)/g</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="kc">false</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="kc">true</span><span class="p">;[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">].</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">l</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">return</span> <span class="mi">0</span><span class="p">});</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="nx">n</span><span class="o">=</span><span class="nx">n</span><span class="o">||</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">i</span><span class="o">=</span><span class="nx">i</span><span class="o">||</span><span class="nx">t</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">!==</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">!==</span><span class="mi">9</span><span class="p">)</span><span class="k">return</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">g</span><span class="o">||</span><span class="k">typeof</span> <span class="nx">g</span><span class="o">!==</span><span class="s2">&quot;string&quot;</span><span class="p">)</span><span class="k">return</span> <span class="nx">n</span><span class="p">;</span><span class="kd">var</span> <span class="nx">q</span><span class="p">,</span><span class="nx">u</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">M</span><span class="p">,</span><span class="nx">N</span><span class="o">=</span><span class="kc">true</span><span class="p">,</span><span class="nx">O</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">isXML</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="nx">D</span><span class="o">=</span><span class="p">[],</span><span class="nx">R</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="k">do</span><span class="p">{</span><span class="nx">d</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">R</span><span class="p">)){</span><span class="nx">R</span><span class="o">=</span><span class="nx">q</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="nx">D</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">q</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="p">[</span><span class="mi">2</span><span class="p">]){</span><span class="nx">F</span><span class="o">=</span><span class="nx">q</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span></td>
      </tr>
      <tr>
        <td id="L80" class="blob-line-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-line-code js-file-line"><span class="k">break</span><span class="p">}}}</span><span class="k">while</span><span class="p">(</span><span class="nx">q</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">g</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">relative</span><span class="p">[</span><span class="nx">D</span><span class="p">[</span><span class="mi">0</span><span class="p">]])</span><span class="nx">u</span><span class="o">=</span><span class="nx">L</span><span class="p">(</span><span class="nx">D</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">D</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">i</span><span class="p">);</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">u</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">relative</span><span class="p">[</span><span class="nx">D</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span><span class="o">?</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">:</span><span class="nx">k</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">shift</span><span class="p">(),</span><span class="nx">i</span><span class="p">);</span><span class="nx">D</span><span class="p">.</span><span class="nx">length</span><span class="p">;){</span><span class="nx">g</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">relative</span><span class="p">[</span><span class="nx">g</span><span class="p">])</span><span class="nx">g</span><span class="o">+=</span><span class="nx">D</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span><span class="nx">u</span><span class="o">=</span><span class="nx">L</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">u</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="nx">D</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">9</span><span class="o">&amp;&amp;!</span><span class="nx">O</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">match</span><span class="p">.</span><span class="nx">ID</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">D</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">&amp;&amp;!</span><span class="nx">o</span><span class="p">.</span><span class="nx">match</span><span class="p">.</span><span class="nx">ID</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">D</span><span class="p">[</span><span class="nx">D</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">])){</span><span class="nx">q</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">shift</span><span class="p">(),</span><span class="nx">i</span><span class="p">,</span><span class="nx">O</span><span class="p">);</span><span class="nx">i</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">expr</span><span class="o">?</span><span class="nx">k</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">expr</span><span class="p">,</span><span class="nx">q</span><span class="p">.</span><span class="nx">set</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="nx">q</span><span class="p">.</span><span class="nx">set</span><span class="p">[</span><span class="mi">0</span><span class="p">]}</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="nx">q</span><span class="o">=</span><span class="nx">m</span><span class="o">?</span><span class="p">{</span><span class="nx">expr</span><span class="o">:</span><span class="nx">D</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">set</span><span class="o">:</span><span class="nx">C</span><span class="p">(</span><span class="nx">m</span><span class="p">)}</span><span class="o">:</span><span class="nx">k</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">D</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">D</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;~&quot;</span><span class="o">||</span><span class="nx">D</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;+&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">?</span><span class="nx">i</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">O</span><span class="p">);</span><span class="nx">u</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">expr</span><span class="o">?</span><span class="nx">k</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">expr</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L81" class="blob-line-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-line-code js-file-line"><span class="nx">q</span><span class="p">.</span><span class="nx">set</span><span class="p">)</span><span class="o">:</span><span class="nx">q</span><span class="p">.</span><span class="nx">set</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span><span class="nx">y</span><span class="o">=</span><span class="nx">C</span><span class="p">(</span><span class="nx">u</span><span class="p">);</span><span class="k">else</span> <span class="nx">N</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">for</span><span class="p">(;</span><span class="nx">D</span><span class="p">.</span><span class="nx">length</span><span class="p">;){</span><span class="nx">q</span><span class="o">=</span><span class="nx">M</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">relative</span><span class="p">[</span><span class="nx">M</span><span class="p">])</span><span class="nx">q</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="k">else</span> <span class="nx">M</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="o">==</span><span class="kc">null</span><span class="p">)</span><span class="nx">q</span><span class="o">=</span><span class="nx">i</span><span class="p">;</span><span class="nx">o</span><span class="p">.</span><span class="nx">relative</span><span class="p">[</span><span class="nx">M</span><span class="p">](</span><span class="nx">y</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">O</span><span class="p">)}}</span><span class="k">else</span> <span class="nx">y</span><span class="o">=</span><span class="p">[]}</span><span class="nx">y</span><span class="o">||</span><span class="p">(</span><span class="nx">y</span><span class="o">=</span><span class="nx">u</span><span class="p">);</span><span class="nx">y</span><span class="o">||</span><span class="nx">k</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">M</span><span class="o">||</span><span class="nx">g</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">y</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;[object Array]&quot;</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">N</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">y</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">!=</span><span class="kc">null</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">y</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">===</span><span class="kc">true</span><span class="o">||</span><span class="nx">y</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">y</span><span class="p">[</span><span class="nx">g</span><span class="p">])))</span><span class="nx">n</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">u</span><span class="p">[</span><span class="nx">g</span><span class="p">])}</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">y</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">!=</span><span class="kc">null</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">y</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">u</span><span class="p">[</span><span class="nx">g</span><span class="p">]);</span><span class="k">else</span> <span class="nx">n</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">y</span><span class="p">);</span><span class="k">else</span> <span class="nx">C</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="nx">n</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="p">){</span><span class="nx">k</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">m</span><span class="p">);</span><span class="nx">k</span><span class="p">.</span><span class="nx">uniqueSort</span><span class="p">(</span><span class="nx">n</span><span class="p">)}</span><span class="k">return</span> <span class="nx">n</span><span class="p">};</span><span class="nx">k</span><span class="p">.</span><span class="nx">uniqueSort</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L82" class="blob-line-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-line-code js-file-line"><span class="nx">l</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="nx">w</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="nx">g</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">===</span><span class="nx">g</span><span class="p">[</span><span class="nx">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">i</span><span class="o">--</span><span class="p">,</span><span class="mi">1</span><span class="p">)}</span><span class="k">return</span> <span class="nx">g</span><span class="p">};</span><span class="nx">k</span><span class="p">.</span><span class="nx">matches</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">return</span> <span class="nx">k</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">i</span><span class="p">)};</span><span class="nx">k</span><span class="p">.</span><span class="nx">matchesSelector</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">return</span> <span class="nx">k</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,[</span><span class="nx">g</span><span class="p">]).</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">};</span><span class="nx">k</span><span class="p">.</span><span class="nx">find</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">g</span><span class="p">)</span><span class="k">return</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">order</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">q</span><span class="p">;</span><span class="nx">p</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">u</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">order</span><span class="p">[</span><span class="nx">p</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">u</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">leftMatch</span><span class="p">[</span><span class="nx">y</span><span class="p">].</span><span class="nx">exec</span><span class="p">(</span><span class="nx">g</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="nx">u</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">u</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">!==</span><span class="s2">&quot;\\&quot;</span><span class="p">){</span><span class="nx">u</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="nx">u</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\\/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">m</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">find</span><span class="p">[</span><span class="nx">y</span><span class="p">](</span><span class="nx">u</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="o">!=</span><span class="kc">null</span><span class="p">){</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">match</span><span class="p">[</span><span class="nx">y</span><span class="p">],</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">break</span><span class="p">}}}}</span><span class="nx">m</span><span class="o">||</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="p">));</span></td>
      </tr>
      <tr>
        <td id="L83" class="blob-line-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-line-code js-file-line"><span class="k">return</span><span class="p">{</span><span class="nx">set</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">expr</span><span class="o">:</span><span class="nx">g</span><span class="p">}};</span><span class="nx">k</span><span class="p">.</span><span class="nx">filter</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">p</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">g</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="p">[],</span><span class="nx">F</span><span class="o">=</span><span class="nx">i</span><span class="p">,</span><span class="nx">M</span><span class="o">=</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">isXML</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="p">;){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">N</span> <span class="k">in</span> <span class="nx">o</span><span class="p">.</span><span class="nx">filter</span><span class="p">)</span><span class="k">if</span><span class="p">((</span><span class="nx">p</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">leftMatch</span><span class="p">[</span><span class="nx">N</span><span class="p">].</span><span class="nx">exec</span><span class="p">(</span><span class="nx">g</span><span class="p">))</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">[</span><span class="mi">2</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">O</span><span class="p">,</span><span class="nx">D</span><span class="p">,</span><span class="nx">R</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">filter</span><span class="p">[</span><span class="nx">N</span><span class="p">];</span><span class="nx">D</span><span class="o">=</span><span class="nx">p</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">q</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">p</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">!==</span><span class="s2">&quot;\\&quot;</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="o">===</span><span class="nx">y</span><span class="p">)</span><span class="nx">y</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">preFilter</span><span class="p">[</span><span class="nx">N</span><span class="p">])</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">preFilter</span><span class="p">[</span><span class="nx">N</span><span class="p">](</span><span class="nx">p</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">M</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="o">===</span><span class="kc">true</span><span class="p">)</span><span class="k">continue</span><span class="p">}</span><span class="k">else</span> <span class="nx">q</span><span class="o">=</span><span class="nx">O</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;(</span><span class="nx">D</span><span class="o">=</span><span class="nx">F</span><span class="p">[</span><span class="nx">j</span><span class="p">])</span><span class="o">!=</span><span class="kc">null</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="p">){</span><span class="nx">O</span><span class="o">=</span><span class="nx">R</span><span class="p">(</span><span class="nx">D</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">F</span><span class="p">);</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">m</span><span class="o">^!!</span><span class="nx">O</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">O</span><span class="o">!=</span><span class="kc">null</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span><span class="nx">q</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">else</span> <span class="nx">F</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="nx">y</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">D</span><span class="p">);</span><span class="nx">q</span><span class="o">=</span><span class="kc">true</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">O</span><span class="o">!==</span></td>
      </tr>
      <tr>
        <td id="L84" class="blob-line-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-line-code js-file-line"><span class="nx">B</span><span class="p">){</span><span class="nx">n</span><span class="o">||</span><span class="p">(</span><span class="nx">F</span><span class="o">=</span><span class="nx">y</span><span class="p">);</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">match</span><span class="p">[</span><span class="nx">N</span><span class="p">],</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">q</span><span class="p">)</span><span class="k">return</span><span class="p">[];</span><span class="k">break</span><span class="p">}}}</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">===</span><span class="nx">u</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="o">==</span><span class="kc">null</span><span class="p">)</span><span class="nx">k</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="k">else</span> <span class="k">break</span><span class="p">;</span><span class="nx">u</span><span class="o">=</span><span class="nx">g</span><span class="p">}</span><span class="k">return</span> <span class="nx">F</span><span class="p">};</span><span class="nx">k</span><span class="p">.</span><span class="nx">error</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">throw</span><span class="s2">&quot;Syntax error, unrecognized expression: &quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">;};</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">selectors</span><span class="o">=</span><span class="p">{</span><span class="nx">order</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;ID&quot;</span><span class="p">,</span><span class="s2">&quot;NAME&quot;</span><span class="p">,</span><span class="s2">&quot;TAG&quot;</span><span class="p">],</span><span class="nx">match</span><span class="o">:</span><span class="p">{</span><span class="nx">ID</span><span class="o">:</span><span class="sr">/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/</span><span class="p">,</span><span class="nx">CLASS</span><span class="o">:</span><span class="sr">/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/</span><span class="p">,</span><span class="nx">NAME</span><span class="o">:</span><span class="sr">/\[name=[&#39;&quot;]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)[&#39;&quot;]*\]/</span><span class="p">,</span><span class="nx">ATTR</span><span class="o">:</span><span class="sr">/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*([&#39;&quot;]*)(.*?)\3|)\s*\]/</span><span class="p">,</span><span class="nx">TAG</span><span class="o">:</span><span class="sr">/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/</span><span class="p">,</span><span class="nx">CHILD</span><span class="o">:</span><span class="sr">/:(only|nth|last|first)-child(?:\((even|odd|[\dn+\-]*)\))?/</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L85" class="blob-line-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-line-code js-file-line"><span class="nx">POS</span><span class="o">:</span><span class="sr">/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/</span><span class="p">,</span><span class="nx">PSEUDO</span><span class="o">:</span><span class="sr">/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\(([&#39;&quot;]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/</span><span class="p">},</span><span class="nx">leftMatch</span><span class="o">:</span><span class="p">{},</span><span class="nx">attrMap</span><span class="o">:</span><span class="p">{</span><span class="s2">&quot;class&quot;</span><span class="o">:</span><span class="s2">&quot;className&quot;</span><span class="p">,</span><span class="s2">&quot;for&quot;</span><span class="o">:</span><span class="s2">&quot;htmlFor&quot;</span><span class="p">},</span><span class="nx">attrHandle</span><span class="o">:</span><span class="p">{</span><span class="nx">href</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span> <span class="nx">g</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;href&quot;</span><span class="p">)}},</span><span class="nx">relative</span><span class="o">:</span><span class="p">{</span><span class="s2">&quot;+&quot;</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">i</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">n</span><span class="o">&amp;&amp;!</span><span class="sr">/\W/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="nx">n</span><span class="o">=</span><span class="nx">n</span><span class="o">&amp;&amp;!</span><span class="nx">m</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="nx">i</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">q</span><span class="p">;</span><span class="nx">m</span><span class="o">&lt;</span><span class="nx">p</span><span class="p">;</span><span class="nx">m</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">m</span><span class="p">]){</span><span class="k">for</span><span class="p">(;(</span><span class="nx">q</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">previousSibling</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">!==</span><span class="mi">1</span><span class="p">;);</span><span class="nx">g</span><span class="p">[</span><span class="nx">m</span><span class="p">]</span><span class="o">=</span><span class="nx">n</span><span class="o">||</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">===</span></td>
      </tr>
      <tr>
        <td id="L86" class="blob-line-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-line-code js-file-line"><span class="nx">i</span><span class="o">?</span><span class="nx">q</span><span class="o">||</span><span class="kc">false</span><span class="o">:</span><span class="nx">q</span><span class="o">===</span><span class="nx">i</span><span class="p">}</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="kc">true</span><span class="p">)},</span><span class="s2">&quot;&gt;&quot;</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">i</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="o">&amp;&amp;!</span><span class="sr">/\W/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">i</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">q</span><span class="p">;</span><span class="nx">p</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">p</span><span class="p">]){</span><span class="nx">n</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="nx">g</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">===</span><span class="nx">i</span><span class="o">?</span><span class="nx">n</span><span class="o">:</span><span class="kc">false</span><span class="p">}}</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(;</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">q</span><span class="p">;</span><span class="nx">p</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">p</span><span class="p">])</span><span class="nx">g</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">=</span><span class="nx">m</span><span class="o">?</span><span class="nx">n</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">:</span><span class="nx">n</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">===</span><span class="nx">i</span><span class="p">;</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="kc">true</span><span class="p">)}},</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">e</span><span class="o">++</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">i</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;!</span><span class="sr">/\W/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">i</span><span class="p">)){</span><span class="nx">m</span><span class="o">=</span><span class="nx">i</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="nx">q</span><span class="o">=</span><span class="nx">a</span><span class="p">}</span><span class="nx">q</span><span class="p">(</span><span class="s2">&quot;parentNode&quot;</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="p">)},</span><span class="s2">&quot;~&quot;</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">e</span><span class="o">++</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">i</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;!</span><span class="sr">/\W/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">i</span><span class="p">)){</span><span class="nx">m</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L87" class="blob-line-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-line-code js-file-line"><span class="nx">i</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="nx">q</span><span class="o">=</span><span class="nx">a</span><span class="p">}</span><span class="nx">q</span><span class="p">(</span><span class="s2">&quot;previousSibling&quot;</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="p">)}},</span><span class="nx">find</span><span class="o">:</span><span class="p">{</span><span class="nx">ID</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">i</span><span class="p">.</span><span class="nx">getElementById</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">n</span><span class="p">)</span><span class="k">return</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="mi">1</span><span class="p">]))</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">?</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">:</span><span class="p">[]},</span><span class="nx">NAME</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">i</span><span class="p">.</span><span class="nx">getElementsByName</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="p">[],</span><span class="nx">m</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">getElementsByName</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">q</span><span class="p">;</span><span class="nx">p</span><span class="o">++</span><span class="p">)</span><span class="nx">m</span><span class="p">[</span><span class="nx">p</span><span class="p">].</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">)</span><span class="o">===</span><span class="nx">g</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">m</span><span class="p">[</span><span class="nx">p</span><span class="p">]);</span><span class="k">return</span> <span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">n</span><span class="p">}},</span><span class="nx">TAG</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">return</span> <span class="nx">i</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="mi">1</span><span class="p">])}},</span><span class="nx">preFilter</span><span class="o">:</span><span class="p">{</span><span class="nx">CLASS</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">q</span><span class="p">){</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\\/g</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L88" class="blob-line-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-line-code js-file-line"><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="p">)</span><span class="k">return</span> <span class="nx">g</span><span class="p">;</span><span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">u</span><span class="p">;(</span><span class="nx">u</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">q</span><span class="p">])</span><span class="o">!=</span><span class="kc">null</span><span class="p">;</span><span class="nx">q</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">u</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="o">^</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">className</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">u</span><span class="p">.</span><span class="nx">className</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[\t\n]/g</span><span class="p">,</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">))</span><span class="nx">n</span><span class="o">||</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">u</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="nx">i</span><span class="p">[</span><span class="nx">q</span><span class="p">]</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">return</span> <span class="kc">false</span><span class="p">},</span><span class="nx">ID</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span> <span class="nx">g</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\\/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)},</span><span class="nx">TAG</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span> <span class="nx">g</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">()},</span><span class="nx">CHILD</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;nth&quot;</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="sr">/(-?)(\d*)n((?:\+|-)?\d*)/</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;even&quot;</span><span class="o">&amp;&amp;</span><span class="s2">&quot;2n&quot;</span><span class="o">||</span><span class="nx">g</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;odd&quot;</span><span class="o">&amp;&amp;</span><span class="s2">&quot;2n+1&quot;</span><span class="o">||!</span><span class="sr">/\D/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="s2">&quot;0n+&quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">||</span><span class="nx">g</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span><span class="nx">g</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">||</span><span class="mi">1</span><span class="p">)</span><span class="o">-</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">-</span><span class="mi">0</span><span class="p">}</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="o">++</span><span class="p">;</span><span class="k">return</span> <span class="nx">g</span><span class="p">},</span><span class="nx">ATTR</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L89" class="blob-line-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-line-code js-file-line"><span class="nx">m</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">q</span><span class="p">){</span><span class="nx">i</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\\/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">attrMap</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span><span class="nx">g</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">attrMap</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;~=&quot;</span><span class="p">)</span><span class="nx">g</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">g</span><span class="p">},</span><span class="nx">PSEUDO</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">p</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;not&quot;</span><span class="p">)</span><span class="k">if</span><span class="p">((</span><span class="nx">d</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">||</span><span class="sr">/^\w/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="mi">3</span><span class="p">]))</span><span class="nx">g</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="nx">k</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">i</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="nx">g</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="kc">true</span><span class="o">^</span><span class="nx">p</span><span class="p">);</span><span class="nx">n</span><span class="o">||</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">match</span><span class="p">.</span><span class="nx">POS</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">match</span><span class="p">.</span><span class="nx">CHILD</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">]))</span><span class="k">return</span> <span class="kc">true</span><span class="p">;</span><span class="k">return</span> <span class="nx">g</span><span class="p">},</span><span class="nx">POS</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="nx">g</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span><span class="k">return</span> <span class="nx">g</span><span class="p">}},</span><span class="nx">filters</span><span class="o">:</span><span class="p">{</span><span class="nx">enabled</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span> <span class="nx">g</span><span class="p">.</span><span class="nx">disabled</span><span class="o">===</span><span class="kc">false</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">type</span><span class="o">!==</span><span class="s2">&quot;hidden&quot;</span><span class="p">},</span><span class="nx">disabled</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span> <span class="nx">g</span><span class="p">.</span><span class="nx">disabled</span><span class="o">===</span></td>
      </tr>
      <tr>
        <td id="L90" class="blob-line-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-line-code js-file-line"><span class="kc">true</span><span class="p">},</span><span class="nx">checked</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span> <span class="nx">g</span><span class="p">.</span><span class="nx">checked</span><span class="o">===</span><span class="kc">true</span><span class="p">},</span><span class="nx">selected</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span> <span class="nx">g</span><span class="p">.</span><span class="nx">selected</span><span class="o">===</span><span class="kc">true</span><span class="p">},</span><span class="nx">parent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span><span class="o">!!</span><span class="nx">g</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">},</span><span class="nx">empty</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="nx">g</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">},</span><span class="nx">has</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span><span class="o">!!</span><span class="nx">k</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">g</span><span class="p">).</span><span class="nx">length</span><span class="p">},</span><span class="nx">header</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span><span class="sr">/h\d/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">)},</span><span class="nx">text</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;text&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">type</span><span class="p">},</span><span class="nx">radio</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;radio&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">type</span><span class="p">},</span><span class="nx">checkbox</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;checkbox&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">type</span><span class="p">},</span><span class="nx">file</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;file&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">type</span><span class="p">},</span><span class="nx">password</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;password&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">type</span><span class="p">},</span><span class="nx">submit</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;submit&quot;</span><span class="o">===</span></td>
      </tr>
      <tr>
        <td id="L91" class="blob-line-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-line-code js-file-line"><span class="nx">g</span><span class="p">.</span><span class="nx">type</span><span class="p">},</span><span class="nx">image</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;image&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">type</span><span class="p">},</span><span class="nx">reset</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;reset&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">type</span><span class="p">},</span><span class="nx">button</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;button&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">===</span><span class="s2">&quot;button&quot;</span><span class="p">},</span><span class="nx">input</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span><span class="sr">/input|select|textarea|button/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">)}},</span><span class="nx">setFilters</span><span class="o">:</span><span class="p">{</span><span class="nx">first</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">return</span> <span class="nx">i</span><span class="o">===</span><span class="mi">0</span><span class="p">},</span><span class="nx">last</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="k">return</span> <span class="nx">i</span><span class="o">===</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">},</span><span class="nx">even</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">return</span> <span class="nx">i</span><span class="o">%</span><span class="mi">2</span><span class="o">===</span><span class="mi">0</span><span class="p">},</span><span class="nx">odd</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">return</span> <span class="nx">i</span><span class="o">%</span><span class="mi">2</span><span class="o">===</span><span class="mi">1</span><span class="p">},</span><span class="nx">lt</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="nx">i</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">-</span><span class="mi">0</span><span class="p">},</span><span class="nx">gt</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="nx">i</span><span class="o">&gt;</span><span class="nx">n</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">-</span><span class="mi">0</span><span class="p">},</span><span class="nx">nth</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="nx">n</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">-</span></td>
      </tr>
      <tr>
        <td id="L92" class="blob-line-num js-line-number" data-line-number="92"></td>
        <td id="LC92" class="blob-line-code js-file-line"><span class="mi">0</span><span class="o">===</span><span class="nx">i</span><span class="p">},</span><span class="nx">eq</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="nx">n</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">-</span><span class="mi">0</span><span class="o">===</span><span class="nx">i</span><span class="p">}},</span><span class="nx">filter</span><span class="o">:</span><span class="p">{</span><span class="nx">PSEUDO</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">q</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">filters</span><span class="p">[</span><span class="nx">p</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="p">)</span><span class="k">return</span> <span class="nx">q</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">m</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="o">===</span><span class="s2">&quot;contains&quot;</span><span class="p">)</span><span class="k">return</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">textContent</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">innerText</span><span class="o">||</span><span class="nx">k</span><span class="p">.</span><span class="nx">getText</span><span class="p">([</span><span class="nx">g</span><span class="p">])</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="o">===</span><span class="s2">&quot;not&quot;</span><span class="p">){</span><span class="nx">i</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">m</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">===</span><span class="nx">g</span><span class="p">)</span><span class="k">return</span> <span class="kc">false</span><span class="p">;</span><span class="k">return</span> <span class="kc">true</span><span class="p">}</span><span class="k">else</span> <span class="nx">k</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;Syntax error, unrecognized expression: &quot;</span><span class="o">+</span><span class="nx">p</span><span class="p">)},</span><span class="nx">CHILD</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">m</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;only&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;first&quot;</span><span class="o">:</span><span class="k">for</span><span class="p">(;</span><span class="nx">m</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">previousSibling</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="p">)</span><span class="k">return</span> <span class="kc">false</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">===</span></td>
      </tr>
      <tr>
        <td id="L93" class="blob-line-num js-line-number" data-line-number="93"></td>
        <td id="LC93" class="blob-line-code js-file-line"><span class="s2">&quot;first&quot;</span><span class="p">)</span><span class="k">return</span> <span class="kc">true</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;last&quot;</span><span class="o">:</span><span class="k">for</span><span class="p">(;</span><span class="nx">m</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="p">)</span><span class="k">return</span> <span class="kc">false</span><span class="p">;</span><span class="k">return</span> <span class="kc">true</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;nth&quot;</span><span class="o">:</span><span class="nx">n</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="o">===</span><span class="mi">0</span><span class="p">)</span><span class="k">return</span> <span class="kc">true</span><span class="p">;</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">u</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">sizcache</span><span class="o">!==</span><span class="nx">q</span><span class="o">||!</span><span class="nx">g</span><span class="p">.</span><span class="nx">nodeIndex</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">y</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;</span><span class="nx">m</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="p">)</span><span class="nx">m</span><span class="p">.</span><span class="nx">nodeIndex</span><span class="o">=++</span><span class="nx">y</span><span class="p">;</span><span class="nx">u</span><span class="p">.</span><span class="nx">sizcache</span><span class="o">=</span><span class="nx">q</span><span class="p">}</span><span class="nx">m</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">nodeIndex</span><span class="o">-</span><span class="nx">p</span><span class="p">;</span><span class="k">return</span> <span class="nx">n</span><span class="o">===</span><span class="mi">0</span><span class="o">?</span><span class="nx">m</span><span class="o">===</span><span class="mi">0</span><span class="o">:</span><span class="nx">m</span><span class="o">%</span><span class="nx">n</span><span class="o">===</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="o">/</span><span class="nx">n</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">}},</span><span class="nx">ID</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">return</span> <span class="nx">g</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">)</span><span class="o">===</span><span class="nx">i</span><span class="p">},</span><span class="nx">TAG</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">return</span> <span class="nx">i</span><span class="o">===</span><span class="s2">&quot;*&quot;</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">===</span></td>
      </tr>
      <tr>
        <td id="L94" class="blob-line-num js-line-number" data-line-number="94"></td>
        <td id="LC94" class="blob-line-code js-file-line"><span class="nx">i</span><span class="p">},</span><span class="nx">CLASS</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">className</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">))</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">},</span><span class="nx">ATTR</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">n</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">attrHandle</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">?</span><span class="nx">o</span><span class="p">.</span><span class="nx">attrHandle</span><span class="p">[</span><span class="nx">n</span><span class="p">](</span><span class="nx">g</span><span class="p">)</span><span class="o">:</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">!=</span><span class="kc">null</span><span class="o">?</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">n</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">q</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="mi">4</span><span class="p">];</span><span class="k">return</span> <span class="nx">n</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="nx">p</span><span class="o">===</span><span class="s2">&quot;!=&quot;</span><span class="o">:</span><span class="nx">p</span><span class="o">===</span><span class="s2">&quot;=&quot;</span><span class="o">?</span><span class="nx">m</span><span class="o">===</span><span class="nx">q</span><span class="o">:</span><span class="nx">p</span><span class="o">===</span><span class="s2">&quot;*=&quot;</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">q</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">:</span><span class="nx">p</span><span class="o">===</span><span class="s2">&quot;~=&quot;</span><span class="o">?</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">q</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">:!</span><span class="nx">q</span><span class="o">?</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="o">!==</span><span class="kc">false</span><span class="o">:</span><span class="nx">p</span><span class="o">===</span><span class="s2">&quot;!=&quot;</span><span class="o">?</span><span class="nx">m</span><span class="o">!==</span><span class="nx">q</span><span class="o">:</span><span class="nx">p</span><span class="o">===</span><span class="s2">&quot;^=&quot;</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">q</span><span class="p">)</span><span class="o">===</span><span class="mi">0</span><span class="o">:</span><span class="nx">p</span><span class="o">===</span><span class="s2">&quot;$=&quot;</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="nx">q</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">===</span><span class="nx">q</span><span class="o">:</span><span class="nx">p</span><span class="o">===</span><span class="s2">&quot;|=&quot;</span><span class="o">?</span><span class="nx">m</span><span class="o">===</span><span class="nx">q</span><span class="o">||</span><span class="nx">m</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">q</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">===</span><span class="nx">q</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">:</span><span class="kc">false</span><span class="p">},</span><span class="nx">POS</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">setFilters</span><span class="p">[</span><span class="nx">i</span><span class="p">[</span><span class="mi">2</span><span class="p">]];</span></td>
      </tr>
      <tr>
        <td id="L95" class="blob-line-num js-line-number" data-line-number="95"></td>
        <td id="LC95" class="blob-line-code js-file-line"><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">)</span><span class="k">return</span> <span class="nx">p</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">m</span><span class="p">)}}},</span><span class="nx">x</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">match</span><span class="p">.</span><span class="nx">POS</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;\\&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">i</span><span class="o">-</span><span class="mi">0</span><span class="o">+</span><span class="mi">1</span><span class="p">)},</span><span class="nx">A</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">A</span> <span class="k">in</span> <span class="nx">o</span><span class="p">.</span><span class="nx">match</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">match</span><span class="p">[</span><span class="nx">A</span><span class="p">]</span><span class="o">=</span><span class="nb">RegExp</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">match</span><span class="p">[</span><span class="nx">A</span><span class="p">].</span><span class="nx">source</span><span class="o">+</span><span class="sr">/(?![^\[]*\])(?![^\(]*\))/</span><span class="p">.</span><span class="nx">source</span><span class="p">);</span><span class="nx">o</span><span class="p">.</span><span class="nx">leftMatch</span><span class="p">[</span><span class="nx">A</span><span class="p">]</span><span class="o">=</span><span class="nb">RegExp</span><span class="p">(</span><span class="sr">/(^(?:.|\r|\n)*?)/</span><span class="p">.</span><span class="nx">source</span><span class="o">+</span><span class="nx">o</span><span class="p">.</span><span class="nx">match</span><span class="p">[</span><span class="nx">A</span><span class="p">].</span><span class="nx">source</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\\(\d+)/g</span><span class="p">,</span><span class="nx">r</span><span class="p">))}</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="nx">g</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="nx">i</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="k">return</span> <span class="nx">i</span><span class="p">}</span><span class="k">return</span> <span class="nx">g</span><span class="p">};</span><span class="k">try</span><span class="p">{</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">,</span><span class="mi">0</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">J</span><span class="p">){</span><span class="nx">C</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">i</span><span class="o">||</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;[object Array]&quot;</span><span class="p">)</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L96" class="blob-line-num js-line-number" data-line-number="96"></td>
        <td id="LC96" class="blob-line-code js-file-line"><span class="nx">g</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="s2">&quot;number&quot;</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">p</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">)</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="p">]);</span><span class="k">else</span> <span class="k">for</span><span class="p">(;</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="p">];</span><span class="nx">n</span><span class="o">++</span><span class="p">)</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="p">]);</span><span class="k">return</span> <span class="nx">m</span><span class="p">}}</span><span class="kd">var</span> <span class="nx">w</span><span class="p">,</span><span class="nx">I</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">compareDocumentPosition</span><span class="p">)</span><span class="nx">w</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">===</span><span class="nx">i</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">return</span> <span class="mi">0</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">g</span><span class="p">.</span><span class="nx">compareDocumentPosition</span><span class="o">||!</span><span class="nx">i</span><span class="p">.</span><span class="nx">compareDocumentPosition</span><span class="p">)</span><span class="k">return</span> <span class="nx">g</span><span class="p">.</span><span class="nx">compareDocumentPosition</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="nx">g</span><span class="p">.</span><span class="nx">compareDocumentPosition</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="o">&amp;</span><span class="mi">4</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">};</span><span class="k">else</span><span class="p">{</span><span class="nx">w</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="p">[],</span><span class="nx">q</span><span class="o">=</span><span class="p">[];</span><span class="nx">n</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="nx">n</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">===</span><span class="nx">i</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">return</span> <span class="mi">0</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">===</span><span class="nx">m</span><span class="p">)</span><span class="k">return</span> <span class="nx">I</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">m</span><span class="p">)</span><span class="k">return</span> <span class="mi">1</span><span class="p">}</span><span class="k">else</span> <span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span></td>
      </tr>
      <tr>
        <td id="L97" class="blob-line-num js-line-number" data-line-number="97"></td>
        <td id="LC97" class="blob-line-code js-file-line"><span class="k">for</span><span class="p">(;</span><span class="nx">u</span><span class="p">;){</span><span class="nx">p</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">u</span><span class="p">);</span><span class="nx">u</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="nx">u</span><span class="o">=</span><span class="nx">m</span><span class="p">;</span><span class="nx">u</span><span class="p">;){</span><span class="nx">q</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">u</span><span class="p">);</span><span class="nx">u</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">}</span><span class="nx">n</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">u</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">u</span><span class="o">&lt;</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">u</span><span class="o">&lt;</span><span class="nx">m</span><span class="p">;</span><span class="nx">u</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="nx">u</span><span class="p">]</span><span class="o">!==</span><span class="nx">q</span><span class="p">[</span><span class="nx">u</span><span class="p">])</span><span class="k">return</span> <span class="nx">I</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="nx">u</span><span class="p">],</span><span class="nx">q</span><span class="p">[</span><span class="nx">u</span><span class="p">]);</span><span class="k">return</span> <span class="nx">u</span><span class="o">===</span><span class="nx">n</span><span class="o">?</span><span class="nx">I</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">q</span><span class="p">[</span><span class="nx">u</span><span class="p">],</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">I</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="nx">u</span><span class="p">],</span><span class="nx">i</span><span class="p">,</span><span class="mi">1</span><span class="p">)};</span><span class="nx">I</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">===</span><span class="nx">i</span><span class="p">)</span><span class="k">return</span> <span class="nx">n</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">;</span><span class="nx">g</span><span class="p">;){</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">===</span><span class="nx">i</span><span class="p">)</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">}</span><span class="k">return</span> <span class="mi">1</span><span class="p">}}</span><span class="nx">k</span><span class="p">.</span><span class="nx">getText</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="p">[</span><span class="nx">m</span><span class="p">];</span><span class="nx">m</span><span class="o">++</span><span class="p">){</span><span class="nx">n</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">m</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">3</span><span class="o">||</span><span class="nx">n</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">4</span><span class="p">)</span><span class="nx">i</span><span class="o">+=</span><span class="nx">n</span><span class="p">.</span><span class="nx">nodeValue</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">!==</span><span class="mi">8</span><span class="p">)</span><span class="nx">i</span><span class="o">+=</span><span class="nx">k</span><span class="p">.</span><span class="nx">getText</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">)}</span><span class="k">return</span> <span class="nx">i</span><span class="p">};(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span></td>
      </tr>
      <tr>
        <td id="L98" class="blob-line-num js-line-number" data-line-number="98"></td>
        <td id="LC98" class="blob-line-code js-file-line"><span class="nx">i</span><span class="o">=</span><span class="s2">&quot;script&quot;</span><span class="o">+</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">(),</span><span class="nx">n</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&lt;a name=&#39;&quot;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;&#39;/&gt;&quot;</span><span class="p">;</span><span class="nx">n</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">i</span><span class="p">)){</span><span class="nx">o</span><span class="p">.</span><span class="nx">find</span><span class="p">.</span><span class="nx">ID</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">q</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">p</span><span class="p">.</span><span class="nx">getElementById</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">q</span><span class="p">)</span><span class="k">return</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">m</span><span class="p">[</span><span class="mi">1</span><span class="p">]))</span><span class="o">?</span><span class="nx">p</span><span class="p">.</span><span class="nx">id</span><span class="o">===</span><span class="nx">m</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="k">typeof</span> <span class="nx">p</span><span class="p">.</span><span class="nx">getAttributeNode</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">.</span><span class="nx">getAttributeNode</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">).</span><span class="nx">nodeValue</span><span class="o">===</span><span class="nx">m</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">?</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">:</span><span class="nx">B</span><span class="o">:</span><span class="p">[]};</span><span class="nx">o</span><span class="p">.</span><span class="nx">filter</span><span class="p">.</span><span class="nx">ID</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">p</span><span class="p">){</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">m</span><span class="p">.</span><span class="nx">getAttributeNode</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="p">.</span><span class="nx">getAttributeNode</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">m</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">.</span><span class="nx">nodeValue</span><span class="o">===</span><span class="nx">p</span><span class="p">}}</span><span class="nx">n</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span></td>
      </tr>
      <tr>
        <td id="L99" class="blob-line-num js-line-number" data-line-number="99"></td>
        <td id="LC99" class="blob-line-code js-file-line"><span class="nx">n</span><span class="o">=</span><span class="nx">g</span><span class="o">=</span><span class="kc">null</span><span class="p">})();(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">createComment</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="p">).</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span><span class="nx">o</span><span class="p">.</span><span class="nx">find</span><span class="p">.</span><span class="nx">TAG</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;*&quot;</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="p">[],</span><span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="p">[</span><span class="nx">q</span><span class="p">];</span><span class="nx">q</span><span class="o">++</span><span class="p">)</span><span class="nx">m</span><span class="p">[</span><span class="nx">q</span><span class="p">].</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">m</span><span class="p">[</span><span class="nx">q</span><span class="p">]);</span><span class="nx">m</span><span class="o">=</span><span class="nx">p</span><span class="p">}</span><span class="k">return</span> <span class="nx">m</span><span class="p">};</span><span class="nx">g</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&lt;a href=&#39;#&#39;&gt;&lt;/a&gt;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">firstChild</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">g</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">.</span><span class="nx">getAttribute</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;href&quot;</span><span class="p">)</span><span class="o">!==</span><span class="s2">&quot;#&quot;</span><span class="p">)</span><span class="nx">o</span><span class="p">.</span><span class="nx">attrHandle</span><span class="p">.</span><span class="nx">href</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="k">return</span> <span class="nx">i</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;href&quot;</span><span class="p">,</span><span class="mi">2</span><span class="p">)};</span><span class="nx">g</span><span class="o">=</span><span class="kc">null</span><span class="p">})();</span><span class="nx">t</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="o">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L100" class="blob-line-num js-line-number" data-line-number="100"></td>
        <td id="LC100" class="blob-line-code js-file-line"><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">k</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">i</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&lt;p class=&#39;TEST&#39;&gt;&lt;/p&gt;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="s2">&quot;.TEST&quot;</span><span class="p">).</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">)){</span><span class="nx">k</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">u</span><span class="p">){</span><span class="nx">p</span><span class="o">=</span><span class="nx">p</span><span class="o">||</span><span class="nx">t</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\=\s*([^&#39;&quot;\]]*)\s*\]/g</span><span class="p">,</span><span class="s2">&quot;=&#39;$1&#39;]&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">u</span><span class="o">&amp;&amp;!</span><span class="nx">k</span><span class="p">.</span><span class="nx">isXML</span><span class="p">(</span><span class="nx">p</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">9</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">C</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="nx">m</span><span class="p">),</span><span class="nx">q</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">y</span><span class="p">){}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">!==</span><span class="s2">&quot;object&quot;</span><span class="p">){</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">),</span><span class="nx">M</span><span class="o">=</span><span class="nx">F</span><span class="o">||</span><span class="s2">&quot;__sizzle__&quot;</span><span class="p">;</span><span class="nx">F</span><span class="o">||</span><span class="nx">p</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">,</span><span class="nx">M</span><span class="p">);</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">C</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="s2">&quot;#&quot;</span><span class="o">+</span><span class="nx">M</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">m</span><span class="p">),</span><span class="nx">q</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">N</span><span class="p">){}</span><span class="k">finally</span><span class="p">{</span><span class="nx">F</span><span class="o">||</span></td>
      </tr>
      <tr>
        <td id="L101" class="blob-line-num js-line-number" data-line-number="101"></td>
        <td id="LC101" class="blob-line-code js-file-line"><span class="nx">p</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">)}}</span><span class="k">return</span> <span class="nx">g</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">u</span><span class="p">)};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span> <span class="k">in</span> <span class="nx">g</span><span class="p">)</span><span class="nx">k</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="p">];</span><span class="nx">i</span><span class="o">=</span><span class="kc">null</span><span class="p">}}();(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">matchesSelector</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">mozMatchesSelector</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">webkitMatchesSelector</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">msMatchesSelector</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">i</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="s2">&quot;[test!=&#39;&#39;]:sizzle&quot;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">m</span><span class="p">){</span><span class="nx">n</span><span class="o">=</span><span class="kc">true</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="nx">k</span><span class="p">.</span><span class="nx">matchesSelector</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">q</span><span class="p">){</span><span class="nx">q</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\=\s*([^&#39;&quot;\]]*)\s*\]/g</span><span class="p">,</span><span class="s2">&quot;=&#39;$1&#39;]&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">k</span><span class="p">.</span><span class="nx">isXML</span><span class="p">(</span><span class="nx">p</span><span class="p">))</span><span class="k">try</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">||!</span><span class="nx">o</span><span class="p">.</span><span class="nx">match</span><span class="p">.</span><span class="nx">PSEUDO</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">q</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="sr">/!=/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">q</span><span class="p">))</span><span class="k">return</span> <span class="nx">i</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">q</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">u</span><span class="p">){}</span><span class="k">return</span> <span class="nx">k</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,[</span><span class="nx">p</span><span class="p">]).</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">}})();(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L102" class="blob-line-num js-line-number" data-line-number="102"></td>
        <td id="LC102" class="blob-line-code js-file-line"><span class="nx">t</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&lt;div class=&#39;test e&#39;&gt;&lt;/div&gt;&lt;div class=&#39;test&#39;&gt;&lt;/div&gt;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="o">!</span><span class="nx">g</span><span class="p">.</span><span class="nx">getElementsByClassName</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">getElementsByClassName</span><span class="p">(</span><span class="s2">&quot;e&quot;</span><span class="p">).</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">)){</span><span class="nx">g</span><span class="p">.</span><span class="nx">lastChild</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="s2">&quot;e&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">getElementsByClassName</span><span class="p">(</span><span class="s2">&quot;e&quot;</span><span class="p">).</span><span class="nx">length</span><span class="o">!==</span><span class="mi">1</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">order</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;CLASS&quot;</span><span class="p">);</span><span class="nx">o</span><span class="p">.</span><span class="nx">find</span><span class="p">.</span><span class="nx">CLASS</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">n</span><span class="p">.</span><span class="nx">getElementsByClassName</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">m</span><span class="p">)</span><span class="k">return</span> <span class="nx">n</span><span class="p">.</span><span class="nx">getElementsByClassName</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">])};</span><span class="nx">g</span><span class="o">=</span><span class="kc">null</span><span class="p">}}})();</span><span class="nx">k</span><span class="p">.</span><span class="nx">contains</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">contains</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">return</span> <span class="nx">g</span><span class="o">!==</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">contains</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="o">:</span><span class="kc">true</span><span class="p">)}</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">compareDocumentPosition</span><span class="o">?</span></td>
      </tr>
      <tr>
        <td id="L103" class="blob-line-num js-line-number" data-line-number="103"></td>
        <td id="LC103" class="blob-line-code js-file-line"><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">return</span><span class="o">!!</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">compareDocumentPosition</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="o">&amp;</span><span class="mi">16</span><span class="p">)}</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kc">false</span><span class="p">};</span><span class="nx">k</span><span class="p">.</span><span class="nx">isXML</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="p">(</span><span class="nx">g</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="o">||</span><span class="nx">g</span><span class="o">:</span><span class="mi">0</span><span class="p">).</span><span class="nx">documentElement</span><span class="p">)</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">!==</span><span class="s2">&quot;HTML&quot;</span><span class="o">:</span><span class="kc">false</span><span class="p">};</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="p">[],</span><span class="nx">p</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">?</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">:</span><span class="nx">i</span><span class="p">;</span><span class="nx">n</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">match</span><span class="p">.</span><span class="nx">PSEUDO</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">g</span><span class="p">);){</span><span class="nx">p</span><span class="o">+=</span><span class="nx">n</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">match</span><span class="p">.</span><span class="nx">PSEUDO</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="nx">g</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">relative</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">?</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot;*&quot;</span><span class="o">:</span><span class="nx">g</span><span class="p">;</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">u</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">)</span><span class="nx">k</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">q</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">m</span><span class="p">);</span><span class="k">return</span> <span class="nx">k</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">m</span><span class="p">)};</span><span class="nx">c</span><span class="p">.</span><span class="nx">find</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">expr</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">selectors</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">expr</span><span class="p">[</span><span class="s2">&quot;:&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">expr</span><span class="p">.</span><span class="nx">filters</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">unique</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">uniqueSort</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">text</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">getText</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">isXMLDoc</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">isXML</span><span class="p">;</span></td>
      </tr>
      <tr>
        <td id="L104" class="blob-line-num js-line-number" data-line-number="104"></td>
        <td id="LC104" class="blob-line-code js-file-line"><span class="nx">c</span><span class="p">.</span><span class="nx">contains</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">contains</span><span class="p">})();</span><span class="kd">var</span> <span class="nx">Za</span><span class="o">=</span><span class="sr">/Until$/</span><span class="p">,</span><span class="nx">$a</span><span class="o">=</span><span class="sr">/^(?:parents|prevUntil|prevAll)/</span><span class="p">,</span><span class="nx">ab</span><span class="o">=</span><span class="sr">/,/</span><span class="p">,</span><span class="nx">Na</span><span class="o">=</span><span class="sr">/^.[^:#\[\.,]*$/</span><span class="p">,</span><span class="nx">bb</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">,</span><span class="nx">cb</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">expr</span><span class="p">.</span><span class="nx">match</span><span class="p">.</span><span class="nx">POS</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">find</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">pushStack</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="s2">&quot;find&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">===</span><span class="nx">b</span><span class="p">[</span><span class="nx">h</span><span class="p">]){</span><span class="nx">b</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">h</span><span class="o">--</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">break</span><span class="p">}}</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">has</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]))</span><span class="k">return</span> <span class="kc">true</span><span class="p">})},</span></td>
      </tr>
      <tr>
        <td id="L105" class="blob-line-num js-line-number" data-line-number="105"></td>
        <td id="LC105" class="blob-line-code js-file-line"><span class="nx">not</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">pushStack</span><span class="p">(</span><span class="nx">ma</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="kc">false</span><span class="p">),</span><span class="s2">&quot;not&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">filter</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">pushStack</span><span class="p">(</span><span class="nx">ma</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="kc">true</span><span class="p">),</span><span class="s2">&quot;filter&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">is</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">!!</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">).</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">},</span><span class="nx">closest</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">l</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="p">{},</span><span class="nx">o</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="nx">k</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">expr</span><span class="p">.</span><span class="nx">match</span><span class="p">.</span><span class="nx">POS</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">b</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">context</span><span class="p">)</span><span class="o">:</span><span class="nx">l</span><span class="p">)}</span><span class="k">for</span><span class="p">(;</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="o">!==</span><span class="nx">b</span><span class="p">;){</span><span class="k">for</span><span class="p">(</span><span class="nx">l</span> <span class="k">in</span> <span class="nx">k</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">l</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">jquery</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">index</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="o">:</span><span class="nx">c</span><span class="p">(</span><span class="nx">h</span><span class="p">).</span><span class="nx">is</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">selector</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">elem</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">level</span><span class="o">:</span><span class="nx">o</span><span class="p">})}</span><span class="nx">h</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L106" class="blob-line-num js-line-number" data-line-number="106"></td>
        <td id="LC106" class="blob-line-code js-file-line"><span class="nx">h</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="nx">o</span><span class="o">++</span><span class="p">}}</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="nx">l</span><span class="o">=</span><span class="nx">cb</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">context</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="nx">h</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">?</span><span class="nx">l</span><span class="p">.</span><span class="nx">index</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">find</span><span class="p">.</span><span class="nx">matchesSelector</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="p">)){</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="k">break</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">h</span><span class="o">||!</span><span class="nx">h</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="o">||</span><span class="nx">h</span><span class="o">===</span><span class="nx">b</span><span class="p">)</span><span class="k">break</span><span class="p">}</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">unique</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">pushStack</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;closest&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">index</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">inArray</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="o">?</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">children</span><span class="p">());</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">inArray</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">jquery</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">)},</span><span class="nx">add</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="o">?</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">context</span><span class="p">)</span><span class="o">:</span></td>
      </tr>
      <tr>
        <td id="L107" class="blob-line-num js-line-number" data-line-number="107"></td>
        <td id="LC107" class="blob-line-code js-file-line"><span class="nx">c</span><span class="p">.</span><span class="nx">makeArray</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">merge</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(),</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">pushStack</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||!</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">parentNode</span><span class="o">||</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">11</span><span class="o">||!</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||!</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">parentNode</span><span class="o">||</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">11</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">unique</span><span class="p">(</span><span class="nx">e</span><span class="p">))},</span><span class="nx">andSelf</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">prevObject</span><span class="p">)}});</span><span class="nx">c</span><span class="p">.</span><span class="nx">each</span><span class="p">({</span><span class="nx">parent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">!==</span><span class="mi">11</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">parents</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">dir</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;parentNode&quot;</span><span class="p">)},</span><span class="nx">parentsUntil</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">dir</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;parentNode&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">next</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">nth</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="s2">&quot;nextSibling&quot;</span><span class="p">)},</span><span class="nx">prev</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">nth</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L108" class="blob-line-num js-line-number" data-line-number="108"></td>
        <td id="LC108" class="blob-line-code js-file-line"><span class="mi">2</span><span class="p">,</span><span class="s2">&quot;previousSibling&quot;</span><span class="p">)},</span><span class="nx">nextAll</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">dir</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;nextSibling&quot;</span><span class="p">)},</span><span class="nx">prevAll</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">dir</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;previousSibling&quot;</span><span class="p">)},</span><span class="nx">nextUntil</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">dir</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;nextSibling&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">prevUntil</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">dir</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;previousSibling&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">siblings</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">sibling</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">children</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">sibling</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">)},</span><span class="nx">contents</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;iframe&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">contentDocument</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">contentWindow</span><span class="p">.</span><span class="nb">document</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">makeArray</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">)}},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L109" class="blob-line-num js-line-number" data-line-number="109"></td>
        <td id="LC109" class="blob-line-code js-file-line"><span class="nx">b</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">Za</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">e</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">unique</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">((</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">||</span><span class="nx">ab</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">$a</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">reverse</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">pushStack</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">bb</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">))}});</span><span class="nx">c</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">filter</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;:not(&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">1</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">find</span><span class="p">.</span><span class="nx">matchesSelector</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">[</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span><span class="o">:</span><span class="p">[]</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">find</span><span class="p">.</span><span class="nx">matches</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="nx">dir</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">!==</span><span class="mi">9</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">===</span><span class="nx">B</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">!==</span><span class="mi">1</span><span class="o">||!</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">is</span><span class="p">(</span><span class="nx">d</span><span class="p">));){</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L110" class="blob-line-num js-line-number" data-line-number="110"></td>
        <td id="LC110" class="blob-line-code js-file-line"><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]}</span><span class="k">return</span> <span class="nx">e</span><span class="p">},</span><span class="nx">nth</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">])</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;++</span><span class="nx">e</span><span class="o">===</span><span class="nx">b</span><span class="p">)</span><span class="k">break</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">sibling</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[];</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">!==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">}});</span><span class="kd">var</span> <span class="nx">za</span><span class="o">=</span><span class="sr">/ jQuery\d+=&quot;(?:\d+|null)&quot;/g</span><span class="p">,</span><span class="nx">$</span><span class="o">=</span><span class="sr">/^\s+/</span><span class="p">,</span><span class="nx">Aa</span><span class="o">=</span><span class="sr">/&lt;(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^&gt;]*)\/&gt;/ig</span><span class="p">,</span><span class="nx">Ba</span><span class="o">=</span><span class="sr">/&lt;([\w:]+)/</span><span class="p">,</span><span class="nx">db</span><span class="o">=</span><span class="sr">/&lt;tbody/i</span><span class="p">,</span><span class="nx">eb</span><span class="o">=</span><span class="sr">/&lt;|&amp;#?\w+;/</span><span class="p">,</span><span class="nx">Ca</span><span class="o">=</span><span class="sr">/&lt;(?:script|object|embed|option|style)/i</span><span class="p">,</span><span class="nx">Da</span><span class="o">=</span><span class="sr">/checked\s*(?:[^=]|=\s*.checked.)/i</span><span class="p">,</span><span class="nx">fb</span><span class="o">=</span><span class="sr">/\=([^=&quot;&#39;&gt;\s]+\/)&gt;/g</span><span class="p">,</span><span class="nx">P</span><span class="o">=</span><span class="p">{</span><span class="nx">option</span><span class="o">:</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L111" class="blob-line-num js-line-number" data-line-number="111"></td>
        <td id="LC111" class="blob-line-code js-file-line"><span class="s2">&quot;&lt;select multiple=&#39;multiple&#39;&gt;&quot;</span><span class="p">,</span><span class="s2">&quot;&lt;/select&gt;&quot;</span><span class="p">],</span><span class="nx">legend</span><span class="o">:</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="s2">&quot;&lt;fieldset&gt;&quot;</span><span class="p">,</span><span class="s2">&quot;&lt;/fieldset&gt;&quot;</span><span class="p">],</span><span class="nx">thead</span><span class="o">:</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="s2">&quot;&lt;table&gt;&quot;</span><span class="p">,</span><span class="s2">&quot;&lt;/table&gt;&quot;</span><span class="p">],</span><span class="nx">tr</span><span class="o">:</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="s2">&quot;&lt;table&gt;&lt;tbody&gt;&quot;</span><span class="p">,</span><span class="s2">&quot;&lt;/tbody&gt;&lt;/table&gt;&quot;</span><span class="p">],</span><span class="nx">td</span><span class="o">:</span><span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="s2">&quot;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&quot;</span><span class="p">,</span><span class="s2">&quot;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&quot;</span><span class="p">],</span><span class="nx">col</span><span class="o">:</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="s2">&quot;&lt;table&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;colgroup&gt;&quot;</span><span class="p">,</span><span class="s2">&quot;&lt;/colgroup&gt;&lt;/table&gt;&quot;</span><span class="p">],</span><span class="nx">area</span><span class="o">:</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="s2">&quot;&lt;map&gt;&quot;</span><span class="p">,</span><span class="s2">&quot;&lt;/map&gt;&quot;</span><span class="p">],</span><span class="nx">_default</span><span class="o">:</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">]};</span><span class="nx">P</span><span class="p">.</span><span class="nx">optgroup</span><span class="o">=</span><span class="nx">P</span><span class="p">.</span><span class="nx">option</span><span class="p">;</span><span class="nx">P</span><span class="p">.</span><span class="nx">tbody</span><span class="o">=</span><span class="nx">P</span><span class="p">.</span><span class="nx">tfoot</span><span class="o">=</span><span class="nx">P</span><span class="p">.</span><span class="nx">colgroup</span><span class="o">=</span><span class="nx">P</span><span class="p">.</span><span class="nx">caption</span><span class="o">=</span><span class="nx">P</span><span class="p">.</span><span class="nx">thead</span><span class="p">;</span><span class="nx">P</span><span class="p">.</span><span class="nx">th</span><span class="o">=</span><span class="nx">P</span><span class="p">.</span><span class="nx">td</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">htmlSerialize</span><span class="p">)</span><span class="nx">P</span><span class="p">.</span><span class="nx">_default</span><span class="o">=</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="s2">&quot;div&lt;div&gt;&quot;</span><span class="p">,</span><span class="s2">&quot;&lt;/div&gt;&quot;</span><span class="p">];</span><span class="nx">c</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">text</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L112" class="blob-line-num js-line-number" data-line-number="112"></td>
        <td id="LC112" class="blob-line-code js-file-line"><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">text</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">text</span><span class="p">()))});</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">!==</span><span class="s2">&quot;object&quot;</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">!==</span><span class="nx">B</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">empty</span><span class="p">().</span><span class="nx">append</span><span class="p">((</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">ownerDocument</span><span class="o">||</span><span class="nx">t</span><span class="p">).</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">text</span><span class="p">(</span><span class="k">this</span><span class="p">)},</span><span class="nx">wrapAll</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">wrapAll</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">d</span><span class="p">))});</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">ownerDocument</span><span class="p">).</span><span class="nx">eq</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">clone</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">parentNode</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="nx">b</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">firstChild</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="p">;)</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;</span><span class="k">return</span> <span class="nx">d</span><span class="p">}).</span><span class="nx">append</span><span class="p">(</span><span class="k">this</span><span class="p">)}</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span></td>
      </tr>
      <tr>
        <td id="L113" class="blob-line-num js-line-number" data-line-number="113"></td>
        <td id="LC113" class="blob-line-code js-file-line"><span class="nx">wrapInner</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">wrapInner</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">))});</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">contents</span><span class="p">();</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">wrapAll</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">a</span><span class="p">)})},</span><span class="nx">wrap</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">wrapAll</span><span class="p">(</span><span class="nx">a</span><span class="p">)})},</span><span class="nx">unwrap</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;body&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">replaceWith</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">)}).</span><span class="nx">end</span><span class="p">()},</span><span class="nx">append</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">domManip</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="kc">true</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">)})},</span></td>
      </tr>
      <tr>
        <td id="L114" class="blob-line-num js-line-number" data-line-number="114"></td>
        <td id="LC114" class="blob-line-code js-file-line"><span class="nx">prepend</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">domManip</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="kc">true</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">)})},</span><span class="nx">before</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">parentNode</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">domManip</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="kc">false</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">)});</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">toArray</span><span class="p">());</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">pushStack</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;before&quot;</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}},</span><span class="nx">after</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">parentNode</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">domManip</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="kc">false</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L115" class="blob-line-num js-line-number" data-line-number="115"></td>
        <td id="LC115" class="blob-line-code js-file-line"><span class="k">this</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">)});</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">pushStack</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;after&quot;</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">toArray</span><span class="p">());</span><span class="k">return</span> <span class="nx">a</span><span class="p">}},</span><span class="nx">remove</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">;(</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="nx">d</span><span class="p">])</span><span class="o">!=</span><span class="kc">null</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">a</span><span class="p">,[</span><span class="nx">e</span><span class="p">]).</span><span class="nx">length</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">cleanData</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="p">));</span><span class="nx">c</span><span class="p">.</span><span class="nx">cleanData</span><span class="p">([</span><span class="nx">e</span><span class="p">])}</span><span class="nx">e</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">e</span><span class="p">)}</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">empty</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">;(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">])</span><span class="o">!=</span><span class="kc">null</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">cleanData</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="p">));</span><span class="nx">b</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;)</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">);</span></td>
      </tr>
      <tr>
        <td id="L116" class="blob-line-num js-line-number" data-line-number="116"></td>
        <td id="LC116" class="blob-line-code js-file-line"><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">clone</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">noCloneEvent</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">.</span><span class="nx">isXMLDoc</span><span class="p">(</span><span class="k">this</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">outerHTML</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="kc">true</span><span class="p">));</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">}</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">clean</span><span class="p">([</span><span class="nx">d</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">za</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">fb</span><span class="p">,</span><span class="s1">&#39;=&quot;$1&quot;&gt;&#39;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">$</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)],</span><span class="nx">e</span><span class="p">)[</span><span class="mi">0</span><span class="p">]}</span><span class="k">else</span> <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="kc">true</span><span class="p">)});</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="kc">true</span><span class="p">){</span><span class="nx">na</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">na</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="p">))}</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">html</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="nx">B</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="o">?</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">innerHTML</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">za</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span></td>
      </tr>
      <tr>
        <td id="L117" class="blob-line-num js-line-number" data-line-number="117"></td>
        <td id="LC117" class="blob-line-code js-file-line"><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">Ca</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">leadingWhitespace</span><span class="o">||!</span><span class="nx">$</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="o">&amp;&amp;!</span><span class="nx">P</span><span class="p">[(</span><span class="nx">Ba</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="p">[</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">])[</span><span class="mi">1</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">()]){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">Aa</span><span class="p">,</span><span class="s2">&quot;&lt;$1&gt;&lt;/$2&gt;&quot;</span><span class="p">);</span><span class="k">try</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">cleanData</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="p">));</span><span class="k">this</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">a</span><span class="p">}}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">empty</span><span class="p">().</span><span class="nx">append</span><span class="p">(</span><span class="nx">a</span><span class="p">)}}</span><span class="k">else</span> <span class="nx">c</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">html</span><span class="p">()))})</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">empty</span><span class="p">().</span><span class="nx">append</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">replaceWith</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">parentNode</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L118" class="blob-line-num js-line-number" data-line-number="118"></td>
        <td id="LC118" class="blob-line-code js-file-line"><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">html</span><span class="p">();</span><span class="nx">d</span><span class="p">.</span><span class="nx">replaceWith</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">))});</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">!==</span><span class="s2">&quot;string&quot;</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">detach</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">remove</span><span class="p">();</span><span class="nx">b</span><span class="o">?</span><span class="nx">c</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">before</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">a</span><span class="p">)})}</span><span class="k">else</span> <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">pushStack</span><span class="p">(</span><span class="nx">c</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">()</span><span class="o">:</span><span class="nx">a</span><span class="p">),</span><span class="s2">&quot;replaceWith&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">detach</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kc">true</span><span class="p">)},</span><span class="nx">domManip</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">k</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">checkClone</span><span class="o">&amp;&amp;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">3</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">l</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;</span><span class="nx">Da</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">l</span><span class="p">))</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">domManip</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L119" class="blob-line-num js-line-number" data-line-number="119"></td>
        <td id="LC119" class="blob-line-code js-file-line"><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="kc">true</span><span class="p">)});</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">l</span><span class="p">))</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="o">?</span><span class="nx">r</span><span class="p">.</span><span class="nx">html</span><span class="p">()</span><span class="o">:</span><span class="nx">B</span><span class="p">);</span><span class="nx">r</span><span class="p">.</span><span class="nx">domManip</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">)});</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]){</span><span class="nx">e</span><span class="o">=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">11</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="p">{</span><span class="nx">fragment</span><span class="o">:</span><span class="nx">e</span><span class="p">}</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">buildFragment</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="nx">k</span><span class="p">);</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">fragment</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">1</span><span class="o">?</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">firstChild</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="s2">&quot;tr&quot;</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">o</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">b</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="s2">&quot;table&quot;</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;tbody&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="k">this</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">ownerDocument</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;tbody&quot;</span><span class="p">))</span><span class="o">:</span></td>
      </tr>
      <tr>
        <td id="L120" class="blob-line-num js-line-number" data-line-number="120"></td>
        <td id="LC120" class="blob-line-code js-file-line"><span class="k">this</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">:</span><span class="k">this</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">f</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">cacheable</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span><span class="o">:</span><span class="nx">h</span><span class="p">)}</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">Oa</span><span class="p">)}</span><span class="k">return</span> <span class="k">this</span><span class="p">}});</span><span class="nx">c</span><span class="p">.</span><span class="nx">buildFragment</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">?</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">ownerDocument</span><span class="o">||</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="nx">t</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">length</span><span class="o">&lt;</span><span class="mi">512</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">===</span><span class="nx">t</span><span class="o">&amp;&amp;!</span><span class="nx">Ca</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">checkClone</span><span class="o">||!</span><span class="nx">Da</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]))){</span><span class="nx">f</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">fragments</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]])</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">!==</span><span class="mi">1</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">h</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createDocumentFragment</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">clean</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">fragments</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span><span class="o">=</span><span class="nx">h</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">fragment</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">cacheable</span><span class="o">:</span><span class="nx">f</span><span class="p">}};</span><span class="nx">c</span><span class="p">.</span><span class="nx">fragments</span><span class="o">=</span><span class="p">{};</span><span class="nx">c</span><span class="p">.</span><span class="nx">each</span><span class="p">({</span><span class="nx">appendTo</span><span class="o">:</span><span class="s2">&quot;append&quot;</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L121" class="blob-line-num js-line-number" data-line-number="121"></td>
        <td id="LC121" class="blob-line-code js-file-line"><span class="nx">prependTo</span><span class="o">:</span><span class="s2">&quot;prepend&quot;</span><span class="p">,</span><span class="nx">insertBefore</span><span class="o">:</span><span class="s2">&quot;before&quot;</span><span class="p">,</span><span class="nx">insertAfter</span><span class="o">:</span><span class="s2">&quot;after&quot;</span><span class="p">,</span><span class="nx">replaceAll</span><span class="o">:</span><span class="s2">&quot;replaceWith&quot;</span><span class="p">},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">parentNode</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">11</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">1</span><span class="p">){</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">](</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="k">return</span> <span class="k">this</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="p">(</span><span class="nx">f</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">clone</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">).</span><span class="nx">get</span><span class="p">();</span><span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="p">])[</span><span class="nx">b</span><span class="p">](</span><span class="nx">l</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">l</span><span class="p">)}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">pushStack</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">selector</span><span class="p">)}}});</span><span class="nx">c</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">clean</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="nx">t</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="o">===</span><span class="s2">&quot;undefined&quot;</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="o">||</span></td>
      </tr>
      <tr>
        <td id="L122" class="blob-line-num js-line-number" data-line-number="122"></td>
        <td id="LC122" class="blob-line-code js-file-line"><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">ownerDocument</span><span class="o">||</span><span class="nx">t</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="p">;(</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">h</span><span class="p">])</span><span class="o">!=</span><span class="kc">null</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">l</span><span class="o">===</span><span class="s2">&quot;number&quot;</span><span class="p">)</span><span class="nx">l</span><span class="o">+=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">l</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">eb</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">l</span><span class="p">))</span><span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">l</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">l</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="nx">l</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">Aa</span><span class="p">,</span><span class="s2">&quot;&lt;$1&gt;&lt;/$2&gt;&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="p">(</span><span class="nx">Ba</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span><span class="o">||</span><span class="p">[</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">])[</span><span class="mi">1</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="nx">o</span><span class="o">=</span><span class="nx">P</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">||</span><span class="nx">P</span><span class="p">.</span><span class="nx">_default</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">r</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">l</span><span class="o">+</span><span class="nx">o</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="nx">x</span><span class="o">--</span><span class="p">;)</span><span class="nx">r</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">lastChild</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">tbody</span><span class="p">){</span><span class="nx">x</span><span class="o">=</span><span class="nx">db</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">l</span><span class="p">);</span><span class="nx">k</span><span class="o">=</span><span class="nx">k</span><span class="o">===</span><span class="s2">&quot;table&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">x</span><span class="o">?</span><span class="nx">r</span><span class="p">.</span><span class="nx">firstChild</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">.</span><span class="nx">childNodes</span><span class="o">:</span><span class="nx">o</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;&lt;table&gt;&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">x</span><span class="o">?</span><span class="nx">r</span><span class="p">.</span><span class="nx">childNodes</span><span class="o">:</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">o</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span></td>
      </tr>
      <tr>
        <td id="L123" class="blob-line-num js-line-number" data-line-number="123"></td>
        <td id="LC123" class="blob-line-code js-file-line"><span class="mi">1</span><span class="p">;</span><span class="nx">o</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="o">--</span><span class="nx">o</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="nx">o</span><span class="p">],</span><span class="s2">&quot;tbody&quot;</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">k</span><span class="p">[</span><span class="nx">o</span><span class="p">].</span><span class="nx">childNodes</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">[</span><span class="nx">o</span><span class="p">].</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="nx">o</span><span class="p">])}</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">leadingWhitespace</span><span class="o">&amp;&amp;</span><span class="nx">$</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">l</span><span class="p">)[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">r</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">);</span><span class="nx">l</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">)</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">l</span><span class="p">);</span><span class="k">else</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">merge</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">l</span><span class="p">)}}</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">h</span><span class="p">],</span><span class="s2">&quot;script&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">f</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">type</span><span class="o">||</span><span class="nx">f</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">type</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">===</span><span class="s2">&quot;text/javascript&quot;</span><span class="p">))</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">parentNode</span><span class="o">?</span><span class="nx">f</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">h</span><span class="p">])</span><span class="o">:</span><span class="nx">f</span><span class="p">[</span><span class="nx">h</span><span class="p">]);</span><span class="k">else</span><span class="p">{</span><span class="nx">f</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">splice</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">f</span><span class="p">,[</span><span class="nx">h</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">makeArray</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;script&quot;</span><span class="p">))));</span></td>
      </tr>
      <tr>
        <td id="L124" class="blob-line-num js-line-number" data-line-number="124"></td>
        <td id="LC124" class="blob-line-code js-file-line"><span class="nx">d</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">h</span><span class="p">])}</span><span class="k">return</span> <span class="nx">f</span><span class="p">},</span><span class="nx">cleanData</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">cache</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">special</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">deleteExpando</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="p">;(</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">l</span><span class="p">])</span><span class="o">!=</span><span class="kc">null</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">noData</span><span class="p">[</span><span class="nx">k</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()]))</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">expando</span><span class="p">]){</span><span class="k">if</span><span class="p">((</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">events</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">o</span> <span class="k">in</span> <span class="nx">b</span><span class="p">.</span><span class="nx">events</span><span class="p">)</span><span class="nx">f</span><span class="p">[</span><span class="nx">o</span><span class="p">]</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">o</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeEvent</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">handle</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="k">delete</span> <span class="nx">k</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">expando</span><span class="p">];</span><span class="k">else</span> <span class="nx">k</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">expando</span><span class="p">);</span><span class="k">delete</span> <span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">]}}});</span><span class="kd">var</span> <span class="nx">Ea</span><span class="o">=</span><span class="sr">/alpha\([^)]*\)/i</span><span class="p">,</span><span class="nx">gb</span><span class="o">=</span><span class="sr">/opacity=([^)]*)/</span><span class="p">,</span><span class="nx">hb</span><span class="o">=</span><span class="sr">/-([a-z])/ig</span><span class="p">,</span><span class="nx">ib</span><span class="o">=</span><span class="sr">/([A-Z])/g</span><span class="p">,</span><span class="nx">Fa</span><span class="o">=</span><span class="sr">/^-?\d+(?:px)?$/i</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L125" class="blob-line-num js-line-number" data-line-number="125"></td>
        <td id="LC125" class="blob-line-code js-file-line"><span class="nx">jb</span><span class="o">=</span><span class="sr">/^-?\d/</span><span class="p">,</span><span class="nx">kb</span><span class="o">=</span><span class="p">{</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="nx">visibility</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">,</span><span class="nx">display</span><span class="o">:</span><span class="s2">&quot;block&quot;</span><span class="p">},</span><span class="nx">Pa</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;Left&quot;</span><span class="p">,</span><span class="s2">&quot;Right&quot;</span><span class="p">],</span><span class="nx">Qa</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;Top&quot;</span><span class="p">,</span><span class="s2">&quot;Bottom&quot;</span><span class="p">],</span><span class="nx">W</span><span class="p">,</span><span class="nx">Ga</span><span class="p">,</span><span class="nx">aa</span><span class="p">,</span><span class="nx">lb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()};</span><span class="nx">c</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">css</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">===</span><span class="nx">B</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">access</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="kc">true</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">return</span> <span class="nx">f</span><span class="o">!==</span><span class="nx">B</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)})};</span><span class="nx">c</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">cssHooks</span><span class="o">:</span><span class="p">{</span><span class="nx">opacity</span><span class="o">:</span><span class="p">{</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">W</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;opacity&quot;</span><span class="p">,</span><span class="s2">&quot;opacity&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="o">===</span><span class="s2">&quot;&quot;</span><span class="o">?</span><span class="s2">&quot;1&quot;</span><span class="o">:</span><span class="nx">d</span><span class="p">}</span><span class="k">else</span> <span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">opacity</span><span class="p">}}},</span><span class="nx">cssNumber</span><span class="o">:</span><span class="p">{</span><span class="nx">zIndex</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">fontWeight</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">opacity</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L126" class="blob-line-num js-line-number" data-line-number="126"></td>
        <td id="LC126" class="blob-line-code js-file-line"><span class="nx">zoom</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">lineHeight</span><span class="o">:</span><span class="kc">true</span><span class="p">},</span><span class="nx">cssProps</span><span class="o">:</span><span class="p">{</span><span class="s2">&quot;float&quot;</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">cssFloat</span><span class="o">?</span><span class="s2">&quot;cssFloat&quot;</span><span class="o">:</span><span class="s2">&quot;styleFloat&quot;</span><span class="p">},</span><span class="nx">style</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">3</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">8</span><span class="o">||!</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">camelCase</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">cssHooks</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">cssProps</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">||</span><span class="nx">h</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">!==</span><span class="nx">B</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">d</span><span class="o">===</span><span class="s2">&quot;number&quot;</span><span class="o">&amp;&amp;</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">||</span><span class="nx">d</span><span class="o">==</span><span class="kc">null</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">d</span><span class="o">===</span><span class="s2">&quot;number&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">.</span><span class="nx">cssNumber</span><span class="p">[</span><span class="nx">h</span><span class="p">])</span><span class="nx">d</span><span class="o">+=</span><span class="s2">&quot;px&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">k</span><span class="o">||!</span><span class="p">(</span><span class="s2">&quot;set&quot;</span><span class="k">in</span> <span class="nx">k</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">))</span><span class="o">!==</span><span class="nx">B</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="nx">l</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">o</span><span class="p">){}}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="s2">&quot;get&quot;</span><span class="k">in</span> <span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kc">false</span><span class="p">,</span><span class="nx">e</span><span class="p">))</span><span class="o">!==</span><span class="nx">B</span><span class="p">)</span><span class="k">return</span> <span class="nx">f</span><span class="p">;</span><span class="k">return</span> <span class="nx">l</span><span class="p">[</span><span class="nx">b</span><span class="p">]}}},</span><span class="nx">css</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">camelCase</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span></td>
      </tr>
      <tr>
        <td id="L127" class="blob-line-num js-line-number" data-line-number="127"></td>
        <td id="LC127" class="blob-line-code js-file-line"><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">cssHooks</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">cssProps</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">||</span><span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="s2">&quot;get&quot;</span><span class="k">in</span> <span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kc">true</span><span class="p">,</span><span class="nx">d</span><span class="p">))</span><span class="o">!==</span><span class="nx">B</span><span class="p">)</span><span class="k">return</span> <span class="nx">e</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">W</span><span class="p">)</span><span class="k">return</span> <span class="nx">W</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">)},</span><span class="nx">swap</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">{},</span><span class="nx">f</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">b</span><span class="p">){</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">]}</span><span class="nx">d</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">]},</span><span class="nx">camelCase</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">hb</span><span class="p">,</span><span class="nx">lb</span><span class="p">)}});</span><span class="nx">c</span><span class="p">.</span><span class="nx">curCSS</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">each</span><span class="p">([</span><span class="s2">&quot;height&quot;</span><span class="p">,</span><span class="s2">&quot;width&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">cssHooks</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="o">!==</span><span class="mi">0</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="nx">oa</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">else</span> <span class="nx">c</span><span class="p">.</span><span class="nx">swap</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">kb</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">h</span><span class="o">=</span><span class="nx">oa</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">)});</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">&lt;=</span><span class="mi">0</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="nx">W</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">===</span><span class="s2">&quot;0px&quot;</span><span class="o">&amp;&amp;</span><span class="nx">aa</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="nx">aa</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span></td>
      </tr>
      <tr>
        <td id="L128" class="blob-line-num js-line-number" data-line-number="128"></td>
        <td id="LC128" class="blob-line-code js-file-line"><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">!=</span><span class="kc">null</span><span class="p">)</span><span class="k">return</span> <span class="nx">h</span><span class="o">===</span><span class="s2">&quot;&quot;</span><span class="o">||</span><span class="nx">h</span><span class="o">===</span><span class="s2">&quot;auto&quot;</span><span class="o">?</span><span class="s2">&quot;0px&quot;</span><span class="o">:</span><span class="nx">h</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">||</span><span class="nx">h</span><span class="o">==</span><span class="kc">null</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="k">return</span> <span class="nx">h</span><span class="o">===</span><span class="s2">&quot;&quot;</span><span class="o">||</span><span class="nx">h</span><span class="o">===</span><span class="s2">&quot;auto&quot;</span><span class="o">?</span><span class="s2">&quot;0px&quot;</span><span class="o">:</span><span class="nx">h</span><span class="p">}</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">h</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="o">?</span><span class="nx">h</span><span class="o">:</span><span class="nx">h</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">}},</span><span class="nx">set</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">Fa</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">)){</span><span class="nx">e</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">)</span><span class="k">return</span> <span class="nx">e</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">}</span><span class="k">else</span> <span class="k">return</span> <span class="nx">e</span><span class="p">}}});</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">opacity</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">cssHooks</span><span class="p">.</span><span class="nx">opacity</span><span class="o">=</span><span class="p">{</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">gb</span><span class="p">.</span><span class="nx">test</span><span class="p">((</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">.</span><span class="nx">filter</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">filter</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">?</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nb">RegExp</span><span class="p">.</span><span class="nx">$1</span><span class="p">)</span><span class="o">/</span><span class="mi">100</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;1&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">},</span><span class="nx">set</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">zoom</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="s2">&quot;alpha(opacity=&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">*</span><span class="mi">100</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L129" class="blob-line-num js-line-number" data-line-number="129"></td>
        <td id="LC129" class="blob-line-code js-file-line"><span class="nx">d</span><span class="p">.</span><span class="nx">filter</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">filter</span><span class="o">=</span><span class="nx">Ea</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">Ea</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">filter</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">}};</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">defaultView</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">defaultView</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">)</span><span class="nx">Ga</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">ib</span><span class="p">,</span><span class="s2">&quot;-$1&quot;</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">.</span><span class="nx">defaultView</span><span class="p">))</span><span class="k">return</span> <span class="nx">B</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kc">null</span><span class="p">)){</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">===</span><span class="s2">&quot;&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">a</span><span class="p">))</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">)}</span><span class="k">return</span> <span class="nx">e</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">)</span><span class="nx">aa</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">Fa</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">jb</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">f</span><span class="p">)){</span><span class="nx">d</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">left</span><span class="p">;</span></td>
      </tr>
      <tr>
        <td id="L130" class="blob-line-num js-line-number" data-line-number="130"></td>
        <td id="LC130" class="blob-line-code js-file-line"><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">runtimeStyle</span><span class="p">.</span><span class="nx">left</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">runtimeStyle</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">.</span><span class="nx">left</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;fontSize&quot;</span><span class="o">?</span><span class="s2">&quot;1em&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">pixelLeft</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">runtimeStyle</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">e</span><span class="p">}</span><span class="k">return</span> <span class="nx">f</span><span class="o">===</span><span class="s2">&quot;&quot;</span><span class="o">?</span><span class="s2">&quot;auto&quot;</span><span class="o">:</span><span class="nx">f</span><span class="p">};</span><span class="nx">W</span><span class="o">=</span><span class="nx">Ga</span><span class="o">||</span><span class="nx">aa</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">expr</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">expr</span><span class="p">.</span><span class="nx">filters</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">expr</span><span class="p">.</span><span class="nx">filters</span><span class="p">.</span><span class="nx">hidden</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="o">===</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">===</span><span class="mi">0</span><span class="o">||!</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">reliableHiddenOffsets</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;display&quot;</span><span class="p">))</span><span class="o">===</span><span class="s2">&quot;none&quot;</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">expr</span><span class="p">.</span><span class="nx">filters</span><span class="p">.</span><span class="nx">visible</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">expr</span><span class="p">.</span><span class="nx">filters</span><span class="p">.</span><span class="nx">hidden</span><span class="p">(</span><span class="nx">a</span><span class="p">)}}</span><span class="kd">var</span> <span class="nx">mb</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">now</span><span class="p">(),</span><span class="nx">nb</span><span class="o">=</span><span class="sr">/&lt;script\b[^&lt;]*(?:(?!&lt;\/script&gt;)&lt;[^&lt;]*)*&lt;\/script&gt;/gi</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L131" class="blob-line-num js-line-number" data-line-number="131"></td>
        <td id="LC131" class="blob-line-code js-file-line"><span class="nx">ob</span><span class="o">=</span><span class="sr">/^(?:select|textarea)/i</span><span class="p">,</span><span class="nx">pb</span><span class="o">=</span><span class="sr">/^(?:color|date|datetime|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i</span><span class="p">,</span><span class="nx">qb</span><span class="o">=</span><span class="sr">/^(?:GET|HEAD)$/</span><span class="p">,</span><span class="nx">Ra</span><span class="o">=</span><span class="sr">/\[\]$/</span><span class="p">,</span><span class="nx">T</span><span class="o">=</span><span class="sr">/\=\?(&amp;|$)/</span><span class="p">,</span><span class="nx">ja</span><span class="o">=</span><span class="sr">/\?/</span><span class="p">,</span><span class="nx">rb</span><span class="o">=</span><span class="sr">/([?&amp;])_=[^&amp;]*/</span><span class="p">,</span><span class="nx">sb</span><span class="o">=</span><span class="sr">/^(\w+:)?\/\/([^\/?#]+)/</span><span class="p">,</span><span class="nx">tb</span><span class="o">=</span><span class="sr">/%20/g</span><span class="p">,</span><span class="nx">ub</span><span class="o">=</span><span class="sr">/#.*$/</span><span class="p">,</span><span class="nx">Ha</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">load</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">load</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">!==</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;</span><span class="nx">Ha</span><span class="p">)</span><span class="k">return</span> <span class="nx">Ha</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">)}</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;GET&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">===</span></td>
      </tr>
      <tr>
        <td id="L132" class="blob-line-num js-line-number" data-line-number="132"></td>
        <td id="LC132" class="blob-line-code js-file-line"><span class="s2">&quot;object&quot;</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">param</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">ajaxSettings</span><span class="p">.</span><span class="nx">traditional</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;POST&quot;</span><span class="p">}</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span><span class="nx">url</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">dataType</span><span class="o">:</span><span class="s2">&quot;html&quot;</span><span class="p">,</span><span class="nx">data</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">complete</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">k</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="o">===</span><span class="s2">&quot;success&quot;</span><span class="o">||</span><span class="nx">k</span><span class="o">===</span><span class="s2">&quot;notmodified&quot;</span><span class="p">)</span><span class="nx">h</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="nx">f</span><span class="o">?</span><span class="nx">c</span><span class="p">(</span><span class="s2">&quot;&lt;div&gt;&quot;</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">responseText</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">nb</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)).</span><span class="nx">find</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">responseText</span><span class="p">);</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">d</span><span class="p">,[</span><span class="nx">l</span><span class="p">.</span><span class="nx">responseText</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">])}});</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">serialize</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">param</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">serializeArray</span><span class="p">())},</span><span class="nx">serializeArray</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">elements</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">makeArray</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">elements</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">}).</span><span class="nx">filter</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L133" class="blob-line-num js-line-number" data-line-number="133"></td>
        <td id="LC133" class="blob-line-code js-file-line"><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">disabled</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">checked</span><span class="o">||</span><span class="nx">ob</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">)</span><span class="o">||</span><span class="nx">pb</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">))}).</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">val</span><span class="p">();</span><span class="k">return</span> <span class="nx">d</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">value</span><span class="o">:</span><span class="nx">e</span><span class="p">}})</span><span class="o">:</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">value</span><span class="o">:</span><span class="nx">d</span><span class="p">}}).</span><span class="nx">get</span><span class="p">()}});</span><span class="nx">c</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="s2">&quot;ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">)}});</span><span class="nx">c</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;GET&quot;</span><span class="p">,</span><span class="nx">url</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">data</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">success</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">dataType</span><span class="o">:</span><span class="nx">e</span><span class="p">})},</span></td>
      </tr>
      <tr>
        <td id="L134" class="blob-line-num js-line-number" data-line-number="134"></td>
        <td id="LC134" class="blob-line-code js-file-line"><span class="nx">getScript</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;script&quot;</span><span class="p">)},</span><span class="nx">getJSON</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;json&quot;</span><span class="p">)},</span><span class="nx">post</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="p">{}}</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;POST&quot;</span><span class="p">,</span><span class="nx">url</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">data</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">success</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">dataType</span><span class="o">:</span><span class="nx">e</span><span class="p">})},</span><span class="nx">ajaxSetup</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">ajaxSettings</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">ajaxSettings</span><span class="o">:</span><span class="p">{</span><span class="nx">url</span><span class="o">:</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="p">,</span><span class="nx">global</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;GET&quot;</span><span class="p">,</span><span class="nx">contentType</span><span class="o">:</span><span class="s2">&quot;application/x-www-form-urlencoded&quot;</span><span class="p">,</span><span class="nx">processData</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">async</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">xhr</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">E</span><span class="p">.</span><span class="nx">XMLHttpRequest</span><span class="p">},</span><span class="nx">accepts</span><span class="o">:</span><span class="p">{</span><span class="nx">xml</span><span class="o">:</span><span class="s2">&quot;application/xml, text/xml&quot;</span><span class="p">,</span><span class="nx">html</span><span class="o">:</span><span class="s2">&quot;text/html&quot;</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L135" class="blob-line-num js-line-number" data-line-number="135"></td>
        <td id="LC135" class="blob-line-code js-file-line"><span class="nx">script</span><span class="o">:</span><span class="s2">&quot;text/javascript, application/javascript&quot;</span><span class="p">,</span><span class="nx">json</span><span class="o">:</span><span class="s2">&quot;application/json, text/javascript&quot;</span><span class="p">,</span><span class="nx">text</span><span class="o">:</span><span class="s2">&quot;text/plain&quot;</span><span class="p">,</span><span class="nx">_default</span><span class="o">:</span><span class="s2">&quot;*/*&quot;</span><span class="p">}},</span><span class="nx">ajax</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="kc">true</span><span class="p">,{},</span><span class="nx">c</span><span class="p">.</span><span class="nx">ajaxSettings</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">(),</span><span class="nx">l</span><span class="o">=</span><span class="nx">qb</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">url</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">url</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">ub</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">context</span><span class="o">=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">context</span><span class="o">!=</span><span class="kc">null</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">context</span><span class="o">:</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">processData</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="o">!==</span><span class="s2">&quot;string&quot;</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">param</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">traditional</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">dataType</span><span class="o">===</span><span class="s2">&quot;jsonp&quot;</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">===</span><span class="s2">&quot;GET&quot;</span><span class="p">)</span><span class="nx">T</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">url</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">url</span><span class="o">+=</span><span class="p">(</span><span class="nx">ja</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">url</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;&amp;&quot;</span><span class="o">:</span><span class="s2">&quot;?&quot;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">jsonp</span><span class="o">||</span><span class="s2">&quot;callback&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;=?&quot;</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="o">||</span></td>
      </tr>
      <tr>
        <td id="L136" class="blob-line-num js-line-number" data-line-number="136"></td>
        <td id="LC136" class="blob-line-code js-file-line"><span class="o">!</span><span class="nx">T</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">))</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="o">+</span><span class="s2">&quot;&amp;&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">jsonp</span><span class="o">||</span><span class="s2">&quot;callback&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;=?&quot;</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">dataType</span><span class="o">=</span><span class="s2">&quot;json&quot;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">dataType</span><span class="o">===</span><span class="s2">&quot;json&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="o">&amp;&amp;</span><span class="nx">T</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">)</span><span class="o">||</span><span class="nx">T</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">url</span><span class="p">))){</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">jsonpCallback</span><span class="o">||</span><span class="s2">&quot;jsonp&quot;</span><span class="o">+</span><span class="nx">mb</span><span class="o">++</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">T</span><span class="p">,</span><span class="s2">&quot;=&quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;$1&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">url</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">url</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">T</span><span class="p">,</span><span class="s2">&quot;=&quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;$1&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">dataType</span><span class="o">=</span><span class="s2">&quot;script&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="nx">E</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">k</span><span class="p">))</span><span class="nx">k</span><span class="p">(</span><span class="nx">m</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="nx">E</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">B</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="k">delete</span> <span class="nx">E</span><span class="p">[</span><span class="nx">d</span><span class="p">]}</span><span class="k">catch</span><span class="p">(</span><span class="nx">p</span><span class="p">){}}</span><span class="nx">f</span><span class="o">=</span><span class="nx">m</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">handleSuccess</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">w</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">handleComplete</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">w</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">A</span><span class="p">)}}</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">dataType</span><span class="o">===</span><span class="s2">&quot;script&quot;</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">cache</span><span class="o">===</span><span class="kc">null</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">cache</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L137" class="blob-line-num js-line-number" data-line-number="137"></td>
        <td id="LC137" class="blob-line-code js-file-line"><span class="kc">false</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">cache</span><span class="o">===</span><span class="kc">false</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">now</span><span class="p">(),</span><span class="nx">x</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">url</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">rb</span><span class="p">,</span><span class="s2">&quot;$1_=&quot;</span><span class="o">+</span><span class="nx">o</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">url</span><span class="o">=</span><span class="nx">x</span><span class="o">+</span><span class="p">(</span><span class="nx">x</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">url</span><span class="o">?</span><span class="p">(</span><span class="nx">ja</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">url</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;&amp;&quot;</span><span class="o">:</span><span class="s2">&quot;?&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;_=&quot;</span><span class="o">+</span><span class="nx">o</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">url</span><span class="o">+=</span><span class="p">(</span><span class="nx">ja</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">url</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;&amp;&quot;</span><span class="o">:</span><span class="s2">&quot;?&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">global</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">active</span><span class="o">++===</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;ajaxStart&quot;</span><span class="p">);</span><span class="nx">o</span><span class="o">=</span><span class="p">(</span><span class="nx">o</span><span class="o">=</span><span class="nx">sb</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">url</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">o</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">!==</span><span class="nx">location</span><span class="p">.</span><span class="nx">protocol</span><span class="o">||</span><span class="nx">o</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">!==</span><span class="nx">location</span><span class="p">.</span><span class="nx">host</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">dataType</span><span class="o">===</span><span class="s2">&quot;script&quot;</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="o">===</span><span class="s2">&quot;GET&quot;</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;head&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="nx">t</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">A</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;script&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">scriptCharset</span><span class="p">)</span><span class="nx">A</span><span class="p">.</span><span class="nx">charset</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">scriptCharset</span><span class="p">;</span></td>
      </tr>
      <tr>
        <td id="L138" class="blob-line-num js-line-number" data-line-number="138"></td>
        <td id="LC138" class="blob-line-code js-file-line"><span class="nx">A</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">url</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">A</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="nx">A</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">C</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span><span class="o">===</span><span class="s2">&quot;loaded&quot;</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span><span class="o">===</span><span class="s2">&quot;complete&quot;</span><span class="p">)){</span><span class="nx">C</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">handleSuccess</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">w</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">handleComplete</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">w</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="nx">A</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="nx">A</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="nx">A</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">A</span><span class="p">)}}}</span><span class="nx">r</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="nx">r</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">);</span><span class="k">return</span> <span class="nx">B</span><span class="p">}</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="kc">false</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">xhr</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">username</span><span class="o">?</span><span class="nx">w</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">url</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">async</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">username</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">password</span><span class="p">)</span><span class="o">:</span><span class="nx">w</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">url</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">async</span><span class="p">);</span><span class="k">try</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;!</span><span class="nx">l</span><span class="o">||</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">contentType</span><span class="p">)</span><span class="nx">w</span><span class="p">.</span><span class="nx">setRequestHeader</span><span class="p">(</span><span class="s2">&quot;Content-Type&quot;</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L139" class="blob-line-num js-line-number" data-line-number="139"></td>
        <td id="LC139" class="blob-line-code js-file-line"><span class="nx">b</span><span class="p">.</span><span class="nx">contentType</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">ifModified</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">lastModified</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">url</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">.</span><span class="nx">setRequestHeader</span><span class="p">(</span><span class="s2">&quot;If-Modified-Since&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">lastModified</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">url</span><span class="p">]);</span><span class="nx">c</span><span class="p">.</span><span class="nx">etag</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">url</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">.</span><span class="nx">setRequestHeader</span><span class="p">(</span><span class="s2">&quot;If-None-Match&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">etag</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">url</span><span class="p">])}</span><span class="nx">o</span><span class="o">||</span><span class="nx">w</span><span class="p">.</span><span class="nx">setRequestHeader</span><span class="p">(</span><span class="s2">&quot;X-Requested-With&quot;</span><span class="p">,</span><span class="s2">&quot;XMLHttpRequest&quot;</span><span class="p">);</span><span class="nx">w</span><span class="p">.</span><span class="nx">setRequestHeader</span><span class="p">(</span><span class="s2">&quot;Accept&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">dataType</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">accepts</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">dataType</span><span class="p">]</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">accepts</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">dataType</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;, */*; q=0.01&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">accepts</span><span class="p">.</span><span class="nx">_default</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">I</span><span class="p">){}</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">beforeSend</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">beforeSend</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">context</span><span class="p">,</span><span class="nx">w</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">===</span><span class="kc">false</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">global</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">active</span><span class="o">--===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;ajaxStop&quot;</span><span class="p">);</span><span class="nx">w</span><span class="p">.</span><span class="nx">abort</span><span class="p">();</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="nx">b</span><span class="p">.</span><span class="nx">global</span><span class="o">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L140" class="blob-line-num js-line-number" data-line-number="140"></td>
        <td id="LC140" class="blob-line-code js-file-line"><span class="nx">c</span><span class="p">.</span><span class="nx">triggerGlobal</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;ajaxSend&quot;</span><span class="p">,[</span><span class="nx">w</span><span class="p">,</span><span class="nx">b</span><span class="p">]);</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="nx">w</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">w</span><span class="o">||</span><span class="nx">w</span><span class="p">.</span><span class="nx">readyState</span><span class="o">===</span><span class="mi">0</span><span class="o">||</span><span class="nx">m</span><span class="o">===</span><span class="s2">&quot;abort&quot;</span><span class="p">){</span><span class="nx">J</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">handleComplete</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">w</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="nx">J</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">)</span><span class="nx">w</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">noop</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">J</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">w</span><span class="p">.</span><span class="nx">readyState</span><span class="o">===</span><span class="mi">4</span><span class="o">||</span><span class="nx">m</span><span class="o">===</span><span class="s2">&quot;timeout&quot;</span><span class="p">)){</span><span class="nx">J</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">w</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">noop</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">m</span><span class="o">===</span><span class="s2">&quot;timeout&quot;</span><span class="o">?</span><span class="s2">&quot;timeout&quot;</span><span class="o">:!</span><span class="nx">c</span><span class="p">.</span><span class="nx">httpSuccess</span><span class="p">(</span><span class="nx">w</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;error&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">ifModified</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">httpNotModified</span><span class="p">(</span><span class="nx">w</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">url</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;notmodified&quot;</span><span class="o">:</span><span class="s2">&quot;success&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">p</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">===</span><span class="s2">&quot;success&quot;</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">httpData</span><span class="p">(</span><span class="nx">w</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">dataType</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">q</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;parsererror&quot;</span><span class="p">;</span><span class="nx">p</span><span class="o">=</span><span class="nx">q</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">===</span><span class="s2">&quot;success&quot;</span><span class="o">||</span><span class="nx">e</span><span class="o">===</span><span class="s2">&quot;notmodified&quot;</span><span class="p">)</span><span class="nx">d</span><span class="o">||</span></td>
      </tr>
      <tr>
        <td id="L141" class="blob-line-num js-line-number" data-line-number="141"></td>
        <td id="LC141" class="blob-line-code js-file-line"><span class="nx">c</span><span class="p">.</span><span class="nx">handleSuccess</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">w</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">else</span> <span class="nx">c</span><span class="p">.</span><span class="nx">handleError</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">w</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">p</span><span class="p">);</span><span class="nx">d</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">handleComplete</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">w</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="nx">m</span><span class="o">===</span><span class="s2">&quot;timeout&quot;</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">.</span><span class="nx">abort</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">async</span><span class="p">)</span><span class="nx">w</span><span class="o">=</span><span class="kc">null</span><span class="p">}};</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">w</span><span class="p">.</span><span class="nx">abort</span><span class="p">;</span><span class="nx">w</span><span class="p">.</span><span class="nx">abort</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">w</span><span class="o">&amp;&amp;</span><span class="nb">Function</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">call</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">w</span><span class="p">);</span><span class="nx">L</span><span class="p">(</span><span class="s2">&quot;abort&quot;</span><span class="p">)}}</span><span class="k">catch</span><span class="p">(</span><span class="nx">i</span><span class="p">){}</span><span class="nx">b</span><span class="p">.</span><span class="nx">async</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">timeout</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">w</span><span class="o">&amp;&amp;!</span><span class="nx">J</span><span class="o">&amp;&amp;</span><span class="nx">L</span><span class="p">(</span><span class="s2">&quot;timeout&quot;</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">timeout</span><span class="p">);</span><span class="k">try</span><span class="p">{</span><span class="nx">w</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="nx">l</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">handleError</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">w</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">n</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">handleComplete</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">w</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">)}</span><span class="nx">b</span><span class="p">.</span><span class="nx">async</span><span class="o">||</span><span class="nx">L</span><span class="p">();</span><span class="k">return</span> <span class="nx">w</span><span class="p">}},</span><span class="nx">param</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="p">){</span><span class="nx">l</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span><span class="o">?</span><span class="nx">l</span><span class="p">()</span><span class="o">:</span><span class="nx">l</span><span class="p">;</span><span class="nx">d</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L142" class="blob-line-num js-line-number" data-line-number="142"></td>
        <td id="LC142" class="blob-line-code js-file-line"><span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;=&quot;</span><span class="o">+</span><span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">l</span><span class="p">)};</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">===</span><span class="nx">B</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">ajaxSettings</span><span class="p">.</span><span class="nx">traditional</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">jquery</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">)});</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">da</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&amp;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">tb</span><span class="p">,</span><span class="s2">&quot;+&quot;</span><span class="p">)}});</span><span class="nx">c</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">active</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">lastModified</span><span class="o">:</span><span class="p">{},</span><span class="nx">etag</span><span class="o">:</span><span class="p">{},</span><span class="nx">handleError</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">error</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">error</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">context</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">global</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">triggerGlobal</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;ajaxError&quot;</span><span class="p">,[</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">])},</span><span class="nx">handleSuccess</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">success</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">success</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">context</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">global</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">triggerGlobal</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;ajaxSuccess&quot;</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L143" class="blob-line-num js-line-number" data-line-number="143"></td>
        <td id="LC143" class="blob-line-code js-file-line"><span class="p">[</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">])},</span><span class="nx">handleComplete</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">complete</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">complete</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">context</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">global</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">triggerGlobal</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;ajaxComplete&quot;</span><span class="p">,[</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">]);</span><span class="nx">a</span><span class="p">.</span><span class="nx">global</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">active</span><span class="o">--===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;ajaxStop&quot;</span><span class="p">)},</span><span class="nx">triggerGlobal</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){(</span><span class="nx">a</span><span class="p">.</span><span class="nx">context</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">url</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">context</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">event</span><span class="p">).</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">httpSuccess</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="k">return</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">status</span><span class="o">&amp;&amp;</span><span class="nx">location</span><span class="p">.</span><span class="nx">protocol</span><span class="o">===</span><span class="s2">&quot;file:&quot;</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">status</span><span class="o">&gt;=</span><span class="mi">200</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">status</span><span class="o">&lt;</span><span class="mi">300</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">status</span><span class="o">===</span><span class="mi">304</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">status</span><span class="o">===</span><span class="mi">1223</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">b</span><span class="p">){}</span><span class="k">return</span> <span class="kc">false</span><span class="p">},</span><span class="nx">httpNotModified</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getResponseHeader</span><span class="p">(</span><span class="s2">&quot;Last-Modified&quot;</span><span class="p">),</span></td>
      </tr>
      <tr>
        <td id="L144" class="blob-line-num js-line-number" data-line-number="144"></td>
        <td id="LC144" class="blob-line-code js-file-line"><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getResponseHeader</span><span class="p">(</span><span class="s2">&quot;Etag&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">lastModified</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">etag</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">status</span><span class="o">===</span><span class="mi">304</span><span class="p">},</span><span class="nx">httpData</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getResponseHeader</span><span class="p">(</span><span class="s2">&quot;content-type&quot;</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;xml&quot;</span><span class="o">||!</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;xml&quot;</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">responseXML</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">responseText</span><span class="p">;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">===</span><span class="s2">&quot;parsererror&quot;</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;parsererror&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataFilter</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataFilter</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;json&quot;</span><span class="o">||!</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;json&quot;</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">parseJSON</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;script&quot;</span><span class="o">||!</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;javascript&quot;</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">globalEval</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}});</span></td>
      </tr>
      <tr>
        <td id="L145" class="blob-line-num js-line-number" data-line-number="145"></td>
        <td id="LC145" class="blob-line-code js-file-line"><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">ActiveXObject</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">ajaxSettings</span><span class="p">.</span><span class="nx">xhr</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">protocol</span><span class="o">!==</span><span class="s2">&quot;file:&quot;</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="k">new</span> <span class="nx">E</span><span class="p">.</span><span class="nx">XMLHttpRequest</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">a</span><span class="p">){}</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="k">new</span> <span class="nx">E</span><span class="p">.</span><span class="nx">ActiveXObject</span><span class="p">(</span><span class="s2">&quot;Microsoft.XMLHTTP&quot;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">b</span><span class="p">){}};</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">ajax</span><span class="o">=!!</span><span class="nx">c</span><span class="p">.</span><span class="nx">ajaxSettings</span><span class="p">.</span><span class="nx">xhr</span><span class="p">();</span><span class="kd">var</span> <span class="nx">ea</span><span class="o">=</span><span class="p">{},</span><span class="nx">vb</span><span class="o">=</span><span class="sr">/^(?:toggle|show|hide)$/</span><span class="p">,</span><span class="nx">wb</span><span class="o">=</span><span class="sr">/^([+\-]=)?([\d+.\-]+)(.*)$/</span><span class="p">,</span><span class="nx">ba</span><span class="p">,</span><span class="nx">pa</span><span class="o">=</span><span class="p">[[</span><span class="s2">&quot;height&quot;</span><span class="p">,</span><span class="s2">&quot;marginTop&quot;</span><span class="p">,</span><span class="s2">&quot;marginBottom&quot;</span><span class="p">,</span><span class="s2">&quot;paddingTop&quot;</span><span class="p">,</span><span class="s2">&quot;paddingBottom&quot;</span><span class="p">],[</span><span class="s2">&quot;width&quot;</span><span class="p">,</span><span class="s2">&quot;marginLeft&quot;</span><span class="p">,</span><span class="s2">&quot;marginRight&quot;</span><span class="p">,</span><span class="s2">&quot;paddingLeft&quot;</span><span class="p">,</span><span class="s2">&quot;paddingRight&quot;</span><span class="p">],[</span><span class="s2">&quot;opacity&quot;</span><span class="p">]];</span><span class="nx">c</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">show</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="mi">0</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">animate</span><span class="p">(</span><span class="nx">S</span><span class="p">(</span><span class="s2">&quot;show&quot;</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L146" class="blob-line-num js-line-number" data-line-number="146"></td>
        <td id="LC146" class="blob-line-code js-file-line"><span class="mi">3</span><span class="p">),</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;olddisplay&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;none&quot;</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;&quot;</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;display&quot;</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;none&quot;</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;olddisplay&quot;</span><span class="p">,</span><span class="nx">qa</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">))}</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;&quot;</span><span class="o">||</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;none&quot;</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;olddisplay&quot;</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">}</span><span class="k">return</span> <span class="k">this</span><span class="p">}},</span><span class="nx">hide</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="mi">0</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">animate</span><span class="p">(</span><span class="nx">S</span><span class="p">(</span><span class="s2">&quot;hide&quot;</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="s2">&quot;display&quot;</span><span class="p">);</span><span class="nx">d</span><span class="o">!==</span><span class="s2">&quot;none&quot;</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="s2">&quot;olddisplay&quot;</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L147" class="blob-line-num js-line-number" data-line-number="147"></td>
        <td id="LC147" class="blob-line-code js-file-line"><span class="nx">d</span><span class="p">)}</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">}},</span><span class="nx">_toggle</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">toggle</span><span class="p">,</span><span class="nx">toggle</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">===</span><span class="s2">&quot;boolean&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">_toggle</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="k">else</span> <span class="nx">a</span><span class="o">==</span><span class="kc">null</span><span class="o">||</span><span class="nx">e</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;:hidden&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">)[</span><span class="nx">f</span><span class="o">?</span><span class="s2">&quot;show&quot;</span><span class="o">:</span><span class="s2">&quot;hide&quot;</span><span class="p">]()})</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">animate</span><span class="p">(</span><span class="nx">S</span><span class="p">(</span><span class="s2">&quot;toggle&quot;</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">fadeTo</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="s2">&quot;:hidden&quot;</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;opacity&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">).</span><span class="nx">show</span><span class="p">().</span><span class="nx">end</span><span class="p">().</span><span class="nx">animate</span><span class="p">({</span><span class="nx">opacity</span><span class="o">:</span><span class="nx">b</span><span class="p">},</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)},</span><span class="nx">animate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">speed</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L148" class="blob-line-num js-line-number" data-line-number="148"></td>
        <td id="LC148" class="blob-line-code js-file-line"><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isEmptyObject</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">complete</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">[</span><span class="nx">f</span><span class="p">.</span><span class="nx">queue</span><span class="o">===</span><span class="kc">false</span><span class="o">?</span><span class="s2">&quot;each&quot;</span><span class="o">:</span><span class="s2">&quot;queue&quot;</span><span class="p">](</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">f</span><span class="p">),</span><span class="nx">l</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;:hidden&quot;</span><span class="p">),</span><span class="nx">x</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">l</span> <span class="k">in</span> <span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">camelCase</span><span class="p">(</span><span class="nx">l</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">!==</span><span class="nx">r</span><span class="p">){</span><span class="nx">a</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">l</span><span class="p">];</span><span class="k">delete</span> <span class="nx">a</span><span class="p">[</span><span class="nx">l</span><span class="p">];</span><span class="nx">l</span><span class="o">=</span><span class="nx">r</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;hide&quot;</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="o">||</span><span class="nx">a</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;show&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">o</span><span class="p">)</span><span class="k">return</span> <span class="nx">h</span><span class="p">.</span><span class="nx">complete</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="o">===</span><span class="s2">&quot;height&quot;</span><span class="o">||</span><span class="nx">l</span><span class="o">===</span><span class="s2">&quot;width&quot;</span><span class="p">)){</span><span class="nx">h</span><span class="p">.</span><span class="nx">overflow</span><span class="o">=</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">overflow</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">overflowX</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">overflowY</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;display&quot;</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;inline&quot;</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;float&quot;</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;none&quot;</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">inlineBlockNeedsLayout</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">qa</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">)</span><span class="o">===</span></td>
      </tr>
      <tr>
        <td id="L149" class="blob-line-num js-line-number" data-line-number="149"></td>
        <td id="LC149" class="blob-line-code js-file-line"><span class="s2">&quot;inline&quot;</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;inline-block&quot;</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;inline&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">zoom</span><span class="o">=</span><span class="mi">1</span><span class="p">}</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;inline-block&quot;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">l</span><span class="p">])){(</span><span class="nx">h</span><span class="p">.</span><span class="nx">specialEasing</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">specialEasing</span><span class="o">||</span><span class="p">{})[</span><span class="nx">l</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">l</span><span class="p">][</span><span class="mi">1</span><span class="p">];</span><span class="nx">a</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">l</span><span class="p">][</span><span class="mi">0</span><span class="p">]}}</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">overflow</span><span class="o">!=</span><span class="kc">null</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">overflow</span><span class="o">=</span><span class="s2">&quot;hidden&quot;</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">curAnim</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">a</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="nx">C</span><span class="p">){</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="k">new</span> <span class="nx">c</span><span class="p">.</span><span class="nx">fx</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">A</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">vb</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">C</span><span class="p">))</span><span class="nx">J</span><span class="p">[</span><span class="nx">C</span><span class="o">===</span><span class="s2">&quot;toggle&quot;</span><span class="o">?</span><span class="nx">o</span><span class="o">?</span><span class="s2">&quot;show&quot;</span><span class="o">:</span><span class="s2">&quot;hide&quot;</span><span class="o">:</span><span class="nx">C</span><span class="p">](</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">w</span><span class="o">=</span><span class="nx">wb</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">C</span><span class="p">),</span><span class="nx">I</span><span class="o">=</span><span class="nx">J</span><span class="p">.</span><span class="nx">cur</span><span class="p">()</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">){</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">w</span><span class="p">[</span><span class="mi">2</span><span class="p">]),</span><span class="nx">g</span><span class="o">=</span><span class="nx">w</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;px&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">!==</span><span class="s2">&quot;px&quot;</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">A</span><span class="p">,(</span><span class="nx">L</span><span class="o">||</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="nx">g</span><span class="p">);</span><span class="nx">I</span><span class="o">=</span><span class="p">(</span><span class="nx">L</span><span class="o">||</span></td>
      </tr>
      <tr>
        <td id="L150" class="blob-line-num js-line-number" data-line-number="150"></td>
        <td id="LC150" class="blob-line-code js-file-line"><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="nx">J</span><span class="p">.</span><span class="nx">cur</span><span class="p">()</span><span class="o">*</span><span class="nx">I</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">I</span><span class="o">+</span><span class="nx">g</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="nx">L</span><span class="o">=</span><span class="p">(</span><span class="nx">w</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;-=&quot;</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">L</span><span class="o">+</span><span class="nx">I</span><span class="p">;</span><span class="nx">J</span><span class="p">.</span><span class="nx">custom</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="nx">L</span><span class="p">,</span><span class="nx">g</span><span class="p">)}</span><span class="k">else</span> <span class="nx">J</span><span class="p">.</span><span class="nx">custom</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="nx">C</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)}});</span><span class="k">return</span> <span class="kc">true</span><span class="p">})},</span><span class="nx">stop</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">timers</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">queue</span><span class="p">([]);</span><span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">elem</span><span class="o">===</span><span class="k">this</span><span class="p">){</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">](</span><span class="kc">true</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="mi">1</span><span class="p">)}});</span><span class="nx">b</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">dequeue</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">}});</span><span class="nx">c</span><span class="p">.</span><span class="nx">each</span><span class="p">({</span><span class="nx">slideDown</span><span class="o">:</span><span class="nx">S</span><span class="p">(</span><span class="s2">&quot;show&quot;</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">slideUp</span><span class="o">:</span><span class="nx">S</span><span class="p">(</span><span class="s2">&quot;hide&quot;</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">slideToggle</span><span class="o">:</span><span class="nx">S</span><span class="p">(</span><span class="s2">&quot;toggle&quot;</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">fadeIn</span><span class="o">:</span><span class="p">{</span><span class="nx">opacity</span><span class="o">:</span><span class="s2">&quot;show&quot;</span><span class="p">},</span><span class="nx">fadeOut</span><span class="o">:</span><span class="p">{</span><span class="nx">opacity</span><span class="o">:</span><span class="s2">&quot;hide&quot;</span><span class="p">},</span><span class="nx">fadeToggle</span><span class="o">:</span><span class="p">{</span><span class="nx">opacity</span><span class="o">:</span><span class="s2">&quot;toggle&quot;</span><span class="p">}},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">animate</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L151" class="blob-line-num js-line-number" data-line-number="151"></td>
        <td id="LC151" class="blob-line-code js-file-line"><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">)}});</span><span class="nx">c</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">speed</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="p">{</span><span class="nx">complete</span><span class="o">:</span><span class="nx">d</span><span class="o">||!</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">,</span><span class="nx">duration</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">easing</span><span class="o">:</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">||</span><span class="nx">b</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">};</span><span class="nx">e</span><span class="p">.</span><span class="nx">duration</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">fx</span><span class="p">.</span><span class="nx">off</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="k">typeof</span> <span class="nx">e</span><span class="p">.</span><span class="nx">duration</span><span class="o">===</span><span class="s2">&quot;number&quot;</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">duration</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">duration</span> <span class="k">in</span> <span class="nx">c</span><span class="p">.</span><span class="nx">fx</span><span class="p">.</span><span class="nx">speeds</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">fx</span><span class="p">.</span><span class="nx">speeds</span><span class="p">[</span><span class="nx">e</span><span class="p">.</span><span class="nx">duration</span><span class="p">]</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">fx</span><span class="p">.</span><span class="nx">speeds</span><span class="p">.</span><span class="nx">_default</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">old</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">complete</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">complete</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">queue</span><span class="o">!==</span><span class="kc">false</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">dequeue</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">old</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">old</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="k">return</span> <span class="nx">e</span><span class="p">},</span><span class="nx">easing</span><span class="o">:</span><span class="p">{</span><span class="nx">linear</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">d</span><span class="o">+</span><span class="nx">e</span><span class="o">*</span><span class="nx">a</span><span class="p">},</span><span class="nx">swing</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">a</span><span class="o">*</span></td>
      </tr>
      <tr>
        <td id="L152" class="blob-line-num js-line-number" data-line-number="152"></td>
        <td id="LC152" class="blob-line-code js-file-line"><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="mf">0.5</span><span class="p">)</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="nx">d</span><span class="p">}},</span><span class="nx">timers</span><span class="o">:</span><span class="p">[],</span><span class="nx">fx</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">orig</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">orig</span><span class="o">=</span><span class="p">{}}});</span><span class="nx">c</span><span class="p">.</span><span class="nx">fx</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">update</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">step</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">step</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">now</span><span class="p">,</span><span class="k">this</span><span class="p">);(</span><span class="nx">c</span><span class="p">.</span><span class="nx">fx</span><span class="p">.</span><span class="nx">step</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="p">]</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">fx</span><span class="p">.</span><span class="nx">step</span><span class="p">.</span><span class="nx">_default</span><span class="p">)(</span><span class="k">this</span><span class="p">)},</span><span class="nx">cur</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="p">]</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">.</span><span class="nx">style</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="p">]</span><span class="o">==</span><span class="kc">null</span><span class="p">))</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="p">];</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="p">));</span><span class="k">return</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&gt;-</span><span class="mi">1</span><span class="nx">E4</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="nx">custom</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">l</span><span class="p">){</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">step</span><span class="p">(</span><span class="nx">l</span><span class="p">)}</span></td>
      </tr>
      <tr>
        <td id="L153" class="blob-line-num js-line-number" data-line-number="153"></td>
        <td id="LC153" class="blob-line-code js-file-line"><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">fx</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">startTime</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">now</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">start</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">end</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="o">=</span><span class="nx">d</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="o">||</span><span class="s2">&quot;px&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">now</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">start</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">pos</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">elem</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">timers</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">ba</span><span class="p">)</span><span class="nx">ba</span><span class="o">=</span><span class="nx">setInterval</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">tick</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">interval</span><span class="p">)},</span><span class="nx">show</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">orig</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">show</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">custom</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="o">===</span><span class="s2">&quot;width&quot;</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="o">===</span><span class="s2">&quot;height&quot;</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">cur</span><span class="p">());</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">).</span><span class="nx">show</span><span class="p">()},</span><span class="nx">hide</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">orig</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">hide</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span></td>
      </tr>
      <tr>
        <td id="L154" class="blob-line-num js-line-number" data-line-number="154"></td>
        <td id="LC154" class="blob-line-code js-file-line"><span class="k">this</span><span class="p">.</span><span class="nx">custom</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">cur</span><span class="p">(),</span><span class="mi">0</span><span class="p">)},</span><span class="nx">step</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">now</span><span class="p">(),</span><span class="nx">d</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="nx">b</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">duration</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">startTime</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">now</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">end</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">pos</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">update</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">curAnim</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="p">]</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">curAnim</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">curAnim</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">!==</span><span class="kc">true</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">overflow</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">shrinkWrapBlocks</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">each</span><span class="p">([</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="s2">&quot;X&quot;</span><span class="p">,</span><span class="s2">&quot;Y&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">o</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="s2">&quot;overflow&quot;</span><span class="o">+</span><span class="nx">o</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">overflow</span><span class="p">[</span><span class="nx">k</span><span class="p">]})}</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">hide</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">).</span><span class="nx">hide</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">hide</span><span class="o">||</span></td>
      </tr>
      <tr>
        <td id="L155" class="blob-line-num js-line-number" data-line-number="155"></td>
        <td id="LC155" class="blob-line-code js-file-line"><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">show</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">curAnim</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">orig</span><span class="p">[</span><span class="nx">l</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">complete</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">)}</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">startTime</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="o">=</span><span class="nx">a</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">duration</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">easing</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">easing</span><span class="p">.</span><span class="nx">swing</span><span class="o">?</span><span class="s2">&quot;swing&quot;</span><span class="o">:</span><span class="s2">&quot;linear&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">pos</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">easing</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">specialEasing</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">specialEasing</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="p">]</span><span class="o">||</span><span class="nx">b</span><span class="p">](</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">duration</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">now</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">start</span><span class="o">+</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">end</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">start</span><span class="p">)</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">pos</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">update</span><span class="p">()}</span><span class="k">return</span> <span class="kc">true</span><span class="p">}};</span><span class="nx">c</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">fx</span><span class="p">,{</span><span class="nx">tick</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L156" class="blob-line-num js-line-number" data-line-number="156"></td>
        <td id="LC156" class="blob-line-code js-file-line"><span class="nx">c</span><span class="p">.</span><span class="nx">timers</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]()</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">b</span><span class="o">--</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">fx</span><span class="p">.</span><span class="nx">stop</span><span class="p">()},</span><span class="nx">interval</span><span class="o">:</span><span class="mi">13</span><span class="p">,</span><span class="nx">stop</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">clearInterval</span><span class="p">(</span><span class="nx">ba</span><span class="p">);</span><span class="nx">ba</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="nx">speeds</span><span class="o">:</span><span class="p">{</span><span class="nx">slow</span><span class="o">:</span><span class="mi">600</span><span class="p">,</span><span class="nx">fast</span><span class="o">:</span><span class="mi">200</span><span class="p">,</span><span class="nx">_default</span><span class="o">:</span><span class="mi">400</span><span class="p">},</span><span class="nx">step</span><span class="o">:</span><span class="p">{</span><span class="nx">opacity</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">elem</span><span class="p">,</span><span class="s2">&quot;opacity&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">now</span><span class="p">)},</span><span class="nx">_default</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">elem</span><span class="p">.</span><span class="nx">style</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">elem</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">prop</span><span class="p">]</span><span class="o">!=</span><span class="kc">null</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">elem</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">prop</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">prop</span><span class="o">===</span><span class="s2">&quot;width&quot;</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">prop</span><span class="o">===</span><span class="s2">&quot;height&quot;</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">now</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">now</span><span class="p">)</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">unit</span><span class="p">;</span><span class="k">else</span> <span class="nx">a</span><span class="p">.</span><span class="nx">elem</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">prop</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">now</span><span class="p">}}});</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">expr</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">expr</span><span class="p">.</span><span class="nx">filters</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">expr</span><span class="p">.</span><span class="nx">filters</span><span class="p">.</span><span class="nx">animated</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">grep</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">timers</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">===</span></td>
      </tr>
      <tr>
        <td id="L157" class="blob-line-num js-line-number" data-line-number="157"></td>
        <td id="LC157" class="blob-line-code js-file-line"><span class="nx">b</span><span class="p">.</span><span class="nx">elem</span><span class="p">}).</span><span class="nx">length</span><span class="p">};</span><span class="kd">var</span> <span class="nx">xb</span><span class="o">=</span><span class="sr">/^t(?:able|d|h)$/i</span><span class="p">,</span><span class="nx">Ia</span><span class="o">=</span><span class="sr">/^(?:body|html)$/i</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">offset</span><span class="o">=</span><span class="s2">&quot;getBoundingClientRect&quot;</span><span class="k">in</span> <span class="nx">t</span><span class="p">.</span><span class="nx">documentElement</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">l</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">offset</span><span class="p">.</span><span class="nx">setOffset</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">)});</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="o">||!</span><span class="nx">b</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">.</span><span class="nx">body</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">offset</span><span class="p">.</span><span class="nx">bodyOffset</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">try</span><span class="p">{</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getBoundingClientRect</span><span class="p">()}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){}</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="o">||!</span><span class="nx">c</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span> <span class="nx">d</span><span class="o">||</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="mi">0</span><span class="p">};</span><span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">body</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">fa</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">pageYOffset</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">boxModel</span><span class="o">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L158" class="blob-line-num js-line-number" data-line-number="158"></td>
        <td id="LC158" class="blob-line-code js-file-line"><span class="nx">h</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">clientTop</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">clientTop</span><span class="o">||</span><span class="mi">0</span><span class="p">),</span><span class="nx">left</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">pageXOffset</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">boxModel</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">clientLeft</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">clientLeft</span><span class="o">||</span><span class="mi">0</span><span class="p">)}}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">offset</span><span class="p">.</span><span class="nx">setOffset</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">x</span><span class="p">)});</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="o">||!</span><span class="nx">b</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">.</span><span class="nx">body</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">offset</span><span class="p">.</span><span class="nx">bodyOffset</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">offset</span><span class="p">.</span><span class="nx">initialize</span><span class="p">();</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">offsetParent</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">body</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">defaultView</span><span class="p">)</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kc">null</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">;</span></td>
      </tr>
      <tr>
        <td id="L159" class="blob-line-num js-line-number" data-line-number="159"></td>
        <td id="LC159" class="blob-line-code js-file-line"><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">offsetTop</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">offsetLeft</span><span class="p">;(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">!==</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">!==</span><span class="nx">h</span><span class="p">;){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">offset</span><span class="p">.</span><span class="nx">supportsFixedPosition</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">position</span><span class="o">===</span><span class="s2">&quot;fixed&quot;</span><span class="p">)</span><span class="k">break</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kc">null</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">;</span><span class="nx">k</span><span class="o">-=</span><span class="nx">b</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">;</span><span class="nx">o</span><span class="o">-=</span><span class="nx">b</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">===</span><span class="nx">e</span><span class="p">){</span><span class="nx">k</span><span class="o">+=</span><span class="nx">b</span><span class="p">.</span><span class="nx">offsetTop</span><span class="p">;</span><span class="nx">o</span><span class="o">+=</span><span class="nx">b</span><span class="p">.</span><span class="nx">offsetLeft</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">offset</span><span class="p">.</span><span class="nx">doesNotAddBorder</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">offset</span><span class="p">.</span><span class="nx">doesAddBorderForTableAndCells</span><span class="o">&amp;&amp;</span><span class="nx">xb</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">))){</span><span class="nx">k</span><span class="o">+=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">borderTopWidth</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="nx">o</span><span class="o">+=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">borderLeftWidth</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">}</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">offsetParent</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">offset</span><span class="p">.</span><span class="nx">subtractsBorderForOverflowNotVisible</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">overflow</span><span class="o">!==</span><span class="s2">&quot;visible&quot;</span><span class="p">){</span><span class="nx">k</span><span class="o">+=</span></td>
      </tr>
      <tr>
        <td id="L160" class="blob-line-num js-line-number" data-line-number="160"></td>
        <td id="LC160" class="blob-line-code js-file-line"><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">borderTopWidth</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="nx">o</span><span class="o">+=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">borderLeftWidth</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">}</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">position</span><span class="o">===</span><span class="s2">&quot;relative&quot;</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">position</span><span class="o">===</span><span class="s2">&quot;static&quot;</span><span class="p">){</span><span class="nx">k</span><span class="o">+=</span><span class="nx">l</span><span class="p">.</span><span class="nx">offsetTop</span><span class="p">;</span><span class="nx">o</span><span class="o">+=</span><span class="nx">l</span><span class="p">.</span><span class="nx">offsetLeft</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">offset</span><span class="p">.</span><span class="nx">supportsFixedPosition</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">position</span><span class="o">===</span><span class="s2">&quot;fixed&quot;</span><span class="p">){</span><span class="nx">k</span><span class="o">+=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">);</span><span class="nx">o</span><span class="o">+=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">)}</span><span class="k">return</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nx">o</span><span class="p">}};</span><span class="nx">c</span><span class="p">.</span><span class="nx">offset</span><span class="o">=</span><span class="p">{</span><span class="nx">initialize</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">body</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;marginTop&quot;</span><span class="p">))</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">,{</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="nx">top</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">margin</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">border</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="s2">&quot;1px&quot;</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L161" class="blob-line-num js-line-number" data-line-number="161"></td>
        <td id="LC161" class="blob-line-code js-file-line"><span class="nx">height</span><span class="o">:</span><span class="s2">&quot;1px&quot;</span><span class="p">,</span><span class="nx">visibility</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">});</span><span class="nx">b</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&lt;div style=&#39;position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;&#39;&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;&lt;table style=&#39;position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;&#39; cellpadding=&#39;0&#39; cellspacing=&#39;0&#39;&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">doesNotAddBorder</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">offsetTop</span><span class="o">!==</span><span class="mi">5</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">doesAddBorderForTableAndCells</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L162" class="blob-line-num js-line-number" data-line-number="162"></td>
        <td id="LC162" class="blob-line-code js-file-line"><span class="nx">f</span><span class="p">.</span><span class="nx">offsetTop</span><span class="o">===</span><span class="mi">5</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="s2">&quot;fixed&quot;</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="s2">&quot;20px&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">supportsFixedPosition</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">offsetTop</span><span class="o">===</span><span class="mi">20</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">offsetTop</span><span class="o">===</span><span class="mi">15</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">overflow</span><span class="o">=</span><span class="s2">&quot;hidden&quot;</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="s2">&quot;relative&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">subtractsBorderForOverflowNotVisible</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">offsetTop</span><span class="o">===-</span><span class="mi">5</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">doesNotIncludeMarginInBodyOffset</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetTop</span><span class="o">!==</span><span class="nx">h</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">offset</span><span class="p">.</span><span class="nx">initialize</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">noop</span><span class="p">},</span><span class="nx">bodyOffset</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetTop</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetLeft</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">offset</span><span class="p">.</span><span class="nx">initialize</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">offset</span><span class="p">.</span><span class="nx">doesNotIncludeMarginInBodyOffset</span><span class="p">){</span><span class="nx">b</span><span class="o">+=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L163" class="blob-line-num js-line-number" data-line-number="163"></td>
        <td id="LC163" class="blob-line-code js-file-line"><span class="s2">&quot;marginTop&quot;</span><span class="p">))</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">+=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;marginLeft&quot;</span><span class="p">))</span><span class="o">||</span><span class="mi">0</span><span class="p">}</span><span class="k">return</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nx">d</span><span class="p">}},</span><span class="nx">setOffset</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;position&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">===</span><span class="s2">&quot;static&quot;</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="s2">&quot;relative&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">offset</span><span class="p">(),</span><span class="nx">l</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;top&quot;</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;left&quot;</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="nx">e</span><span class="o">===</span><span class="s2">&quot;absolute&quot;</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">inArray</span><span class="p">(</span><span class="s2">&quot;auto&quot;</span><span class="p">,[</span><span class="nx">l</span><span class="p">,</span><span class="nx">k</span><span class="p">])</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">)</span><span class="nx">x</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">position</span><span class="p">();</span><span class="nx">l</span><span class="o">=</span><span class="nx">o</span><span class="o">?</span><span class="nx">x</span><span class="p">.</span><span class="nx">top</span><span class="o">:</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">=</span><span class="nx">o</span><span class="o">?</span><span class="nx">x</span><span class="p">.</span><span class="nx">left</span><span class="o">:</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">top</span><span class="o">!=</span><span class="kc">null</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">top</span><span class="o">-</span><span class="nx">h</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="nx">l</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="o">!=</span><span class="kc">null</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="o">-</span><span class="nx">h</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="nx">k</span><span class="p">;</span><span class="s2">&quot;using&quot;</span><span class="k">in</span> <span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">using</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L164" class="blob-line-num js-line-number" data-line-number="164"></td>
        <td id="LC164" class="blob-line-code js-file-line"><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">e</span><span class="p">)}};</span><span class="nx">c</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">position</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">offsetParent</span><span class="p">(),</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">offset</span><span class="p">(),</span><span class="nx">e</span><span class="o">=</span><span class="nx">Ia</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">nodeName</span><span class="p">)</span><span class="o">?</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="mi">0</span><span class="p">}</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">offset</span><span class="p">();</span><span class="nx">d</span><span class="p">.</span><span class="nx">top</span><span class="o">-=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;marginTop&quot;</span><span class="p">))</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">left</span><span class="o">-=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;marginLeft&quot;</span><span class="p">))</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">top</span><span class="o">+=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="s2">&quot;borderTopWidth&quot;</span><span class="p">))</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">left</span><span class="o">+=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="s2">&quot;borderLeftWidth&quot;</span><span class="p">))</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">top</span><span class="o">-</span><span class="nx">e</span><span class="p">.</span><span class="nx">top</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">left</span><span class="o">-</span><span class="nx">e</span><span class="p">.</span><span class="nx">left</span><span class="p">}},</span><span class="nx">offsetParent</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">offsetParent</span><span class="o">||</span><span class="nx">t</span><span class="p">.</span><span class="nx">body</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;!</span><span class="nx">Ia</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">)</span><span class="o">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L165" class="blob-line-num js-line-number" data-line-number="165"></td>
        <td id="LC165" class="blob-line-code js-file-line"><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;position&quot;</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;static&quot;</span><span class="p">;)</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetParent</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">})}});</span><span class="nx">c</span><span class="p">.</span><span class="nx">each</span><span class="p">([</span><span class="s2">&quot;Left&quot;</span><span class="p">,</span><span class="s2">&quot;Top&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="s2">&quot;scroll&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">h</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">f</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">!==</span><span class="nx">B</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">fa</span><span class="p">(</span><span class="k">this</span><span class="p">))</span><span class="nx">h</span><span class="p">.</span><span class="nx">scrollTo</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="nx">c</span><span class="p">(</span><span class="nx">h</span><span class="p">).</span><span class="nx">scrollLeft</span><span class="p">(),</span><span class="nx">a</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="nx">c</span><span class="p">(</span><span class="nx">h</span><span class="p">).</span><span class="nx">scrollTop</span><span class="p">());</span><span class="k">else</span> <span class="k">this</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">});</span><span class="k">else</span> <span class="k">return</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">fa</span><span class="p">(</span><span class="nx">f</span><span class="p">))</span><span class="o">?</span><span class="s2">&quot;pageXOffset&quot;</span><span class="k">in</span> <span class="nx">h</span><span class="o">?</span><span class="nx">h</span><span class="p">[</span><span class="nx">a</span><span class="o">?</span><span class="s2">&quot;pageYOffset&quot;</span><span class="o">:</span><span class="s2">&quot;pageXOffset&quot;</span><span class="p">]</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">boxModel</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">||</span><span class="nx">h</span><span class="p">.</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">:</span><span class="nx">f</span><span class="p">[</span><span class="nx">d</span><span class="p">]}});</span><span class="nx">c</span><span class="p">.</span><span class="nx">each</span><span class="p">([</span><span class="s2">&quot;Height&quot;</span><span class="p">,</span><span class="s2">&quot;Width&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span></td>
      </tr>
      <tr>
        <td id="L166" class="blob-line-num js-line-number" data-line-number="166"></td>
        <td id="LC166" class="blob-line-code js-file-line"><span class="nx">c</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="s2">&quot;inner&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">?</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;padding&quot;</span><span class="p">))</span><span class="o">:</span><span class="kc">null</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="s2">&quot;outer&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">?</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">?</span><span class="s2">&quot;margin&quot;</span><span class="o">:</span><span class="s2">&quot;border&quot;</span><span class="p">))</span><span class="o">:</span><span class="kc">null</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">f</span><span class="p">)</span><span class="k">return</span> <span class="nx">e</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="k">this</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">l</span><span class="p">){</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">k</span><span class="p">[</span><span class="nx">d</span><span class="p">](</span><span class="nx">e</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">k</span><span class="p">[</span><span class="nx">d</span><span class="p">]()))});</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isWindow</span><span class="p">(</span><span class="nx">f</span><span class="p">))</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nb">document</span><span class="p">.</span><span class="nx">compatMode</span><span class="o">===</span><span class="s2">&quot;CSS1Compat&quot;</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">[</span><span class="s2">&quot;client&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">]</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">[</span><span class="s2">&quot;client&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">];</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">9</span><span class="p">)</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">[</span><span class="s2">&quot;client&quot;</span><span class="o">+</span></td>
      </tr>
      <tr>
        <td id="L167" class="blob-line-num js-line-number" data-line-number="167"></td>
        <td id="LC167" class="blob-line-code js-file-line"><span class="nx">b</span><span class="p">],</span><span class="nx">f</span><span class="p">.</span><span class="nx">body</span><span class="p">[</span><span class="s2">&quot;scroll&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">],</span><span class="nx">f</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">[</span><span class="s2">&quot;scroll&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">],</span><span class="nx">f</span><span class="p">.</span><span class="nx">body</span><span class="p">[</span><span class="s2">&quot;offset&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">],</span><span class="nx">f</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">[</span><span class="s2">&quot;offset&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">]);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">===</span><span class="nx">B</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">?</span><span class="nx">f</span><span class="o">:</span><span class="nx">h</span><span class="p">}</span><span class="k">else</span> <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="k">typeof</span> <span class="nx">e</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">)}})})(</span><span class="nb">window</span><span class="p">);</span></td>
      </tr>
</table>

  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/" aria-label="Homepage">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.43105s from github-fe128-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-suggester-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents js-suggester-field" placeholder=""></textarea>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-x close js-ajax-error-dismiss" aria-label="Dismiss error"></a>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/frameworks-12d5fda141e78e513749dddbc56445fe172cbd9a.js" type="text/javascript"></script>
      <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/github-a61187924f7160c9ea470f937aa5fb3d3dc74191.js" type="text/javascript"></script>
      
      
        <script async src="https://www.google-analytics.com/analytics.js"></script>
  </body>
</html>

